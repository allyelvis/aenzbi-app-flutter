ÄÚpoint	direction==toStringhashCode_currentOffset_currentLine_currentTextPosition_lineMetrics	_editable_isValidisValid_positionCache_getTextPositionForLinecurrentmoveNextmovePreviousmoveByOffset_foregroundRenderObject_backgroundRenderObjectdispose_updateForegroundPainterforegroundPainter_foregroundPainter_updatePainterpainter_painter_caretPainter_selectionPainter_autocorrectHighlightPainter_builtInForegroundPainters _cachedBuiltInForegroundPainters _createBuiltInForegroundPainters_builtInPainters_cachedBuiltInPainters_createBuiltInPainters_textLayoutLastMaxWidth_textLayoutLastMinWidthdebugAssertLayoutUpToDateignorePointertextHeightBehaviortextWidthBasisdevicePixelRatio_devicePixelRatioobscuringCharacter_obscuringCharacterobscureText_obscureTextselectionHeightStyleselectionWidthStyletextSelectionDelegateselectionStartInViewport_selectionStartInViewportselectionEndInViewport_selectionEndInViewport_getTextPositionVerticalgetLineAtOffsetgetWordBoundarygetTextPositionAbovegetTextPositionBelow!_updateSelectionExtentsVisibility_setTextEditingValue_setSelectionmarkNeedsPaintmarkNeedsTextLayoutsystemFontsDidChange	plainTexttext_textPainter_cachedAttributedValue_cachedCombinedSemanticsInfos	textAligntextDirectionlocale
strutStylecursorColorbackgroundCursorColor
showCursor_showCursor_showHideCursorhasFocus	_hasFocus	forceLine
_forceLinereadOnly	_readOnlymaxLines	_maxLinesminLines	_minLinesexpands_expandsselectionColortextScaleFactor
textScaler	selection
_selectionoffset_offsetcursorWidth_cursorWidthcursorHeight_cursorHeightpaintCursorAboveText_paintCursorOnTopcursorOffsetcursorRadiusstartHandleLayerLink_startHandleLayerLinkendHandleLayerLink_endHandleLayerLinkfloatingCursorAddedMargin_floatingCursorOn_floatingCursorTextPositionenableInteractiveSelection_enableInteractiveSelectionselectionEnabledpromptRectColorsetPromptRectRangemaxScrollExtent_maxScrollExtent_caretMarginclipBehavior_clipBehavior_semanticsInfo_cachedChildNodesgetBoxesForSelectiondescribeSemanticsConfiguration_handleSetTextassembleSemanticsNode_createShowOnScreenFor_handleSetSelection#_handleMoveCursorForwardByCharacter$_handleMoveCursorBackwardByCharacter_handleMoveCursorForwardByWord_handleMoveCursorBackwardByWord_getNextWord_getPreviousWord_onlyWhitespaceattachdetachredepthChildrenvisitChildren_isMultiline_viewportAxis_paintOffset_viewportExtent_getMaxScrollExtent_hasVisualOverflowgetEndpointsForSelectiongetRectForComposingRangegetPositionForPointgetLocalRectForCaretcomputeMinIntrinsicWidthcomputeMaxIntrinsicWidthpreferredLineHeight_cachedLineBreakCount_countHardLineBreaks_preferredHeightcomputeMinIntrinsicHeightcomputeMaxIntrinsicHeightcomputeDistanceToActualBaselinehitTestSelfhitTestChildren_tap
_longPresshandleEvent_lastTapDownPosition_lastSecondaryTapDownPositionlastSecondaryTapDownPositionhandleSecondaryTapDownhandleTapDown_handleTapDown	handleTap
_handleTaphandleDoubleTaphandleLongPress_handleLongPressselectPositionselectPositionAtwordBoundaries
selectWordselectWordsInRangeselectWordEdgegetWordAtOffset_placeholderDimensions_layoutText_computeTextMetricsIfNeeded_caretPrototype_computeCaretPrototype_snapToPhysicalPixel$_canComputeDryLayoutForInlineWidgets_canComputeIntrinsicsCached_canComputeIntrinsicscomputeDryLayoutperformLayout_relativeOrigin_previousOffset_resetOriginOnLeft_resetOriginOnRight_resetOriginOnTop_resetOriginOnBottom"_resetFloatingCursorAnimationValue$calculateBoundedFloatingCursorOffsetsetFloatingCursor_lineNumberForstartVerticalCaretMovement_paintContents_paintHandleLayersapplyPaintTransformpaint_clipRectLayerdescribeApproximatePaintClipdebugFillPropertiesdebugDescribeChildrenparentisRepaintBoundarysizedByParentshouldRepainthighlightPainthighlightColor_highlightColorhighlightedRange_highlightedRange_selectionHeightStyle_selectionWidthStyleshouldPaint_shouldPaintshowRegularCaret
caretPaintfloatingCursorPaint
caretColor_caretColor_cursorRadius_cursorOffset_backgroundCursorColorfloatingCursorRect_floatingCursorRectpaintRegularCursorpaintersaddListenerremoveListener
_kCaretGap_kCaretHeightOffset_kFloatingCursorSizeIncrease_kFloatingCursorRadiusTextSelectionPointVerticalCaretMovementRunRenderEditable_RenderEditableCustomPaintRenderEditablePainter_TextHighlightPainter_CaretPainter_CompositeRenderEditablePainterÅïBoxHeightStyleBoxWidthStyleLineMetricsPlaceholderAlignmentTextBoxdouble
EdgeInsets	symmetric
horizontalverticalRadiuscircular	immutableOffsetTextDirectionoverrideboolObject	identicalruntimeTypepoint	directionStringltrrtlinthashTextPositioncurrentIteratorList_textPaintercomputeLineMetricsMapMapEntrydxbaselinegetPositionForOffsetlengthkeyvaluedy	RenderBox"RelayoutWhenSystemFontsChangeMixinContainerRenderObjectMixinTextParentData%RenderInlineChildrenContainerDefaultsTextLayoutMetrics	TextAlignstartViewportOffsetzero
InlineSpanColorValueNotifier	LayerLink
StrutStyle
Deprecated
TextScaler	noScalingTextSelectionTextHeightBehaviorTextWidthBasisparentLocaletightfromLTRB	TextRangeCliphardEdge
charactersTextPaintertext	textAligntextDirection
textScalerlinearlocalemaxLines
strutStyletextHeightBehaviortextWidthBasishighlightColorhighlightedRangeselectionHeightStyleselectionWidthStylepromptRectRange
caretColorcursorRadiuscursorOffsetbackgroundCursorColoraddAllchildrenvoiddisposelayerpainterspainter
adoptChildconstraintsmaxWidthminWidthmarkNeedsLayoutmarkNeedsSemanticsUpdateTextSelectionDelegateValueListenablegetOffsetForCaret	translategetLineBoundary
baseOffsetextentOffsetendgetWordBoundarypreferredLineHeightisValidRectsizeoffsetaffinityinflatecontainsTextEditingValueSelectionChangedCauseuserUpdateTextEditingValuetextEditingValuecopyWithmin	selectionmarkNeedsPaint	protectedsystemFontsDidChange	plainTextAttributedStringInlineSpanSemanticsInformationjustifyCupertinoColorsinactiveGrayattachedremoveListeneraddListenershouldPainttextScaleFactorCompositedTransformTarget_combineSemanticsInfoLinkedHashMapKeySemanticsNodegetBoxesForSelectionmap	fromLTRBDtextBoxlefttoprightbottomtoListSemanticsConfigurationdescribeSemanticsConfigurationgetSemanticsInformationanyinfo
recognizerdefaultTargetPlatformTargetPlatformmacOSisSemanticBoundaryexplicitChildNodesStringBufferStringAttributesemanticsLabelstringAttributesinfoAttributerangeaddcopywritetoString
attributesattributedValue
isObscuredisMultiline	isFocusedisTextField
isReadOnlyonSetSelection	onSetTexttextSelectiongetOffsetBeforeonMoveCursorBackwardByWordonMoveCursorBackwardByCharactergetOffsetAfteronMoveCursorForwardByWordonMoveCursorForwardByCharacter	collapsedkeyboardIterable
isNotEmpty
firstChildcombineSemanticsInfoisPlaceholder	elementAtisTagged PlaceholderSpanIndexSemanticsTag
parentData
childAfterisEmptyfirsttoRectskipexpandToIncludefromLTWHmaxwidthheight	maxHeightfloorToDoubleceilToDoublesortKeyOrdinalSortKeyattributedLabelGestureRecognizerTapGestureRecognizeronTapisLinkDoubleTapGestureRecognizeronDoubleTapLongPressGestureRecognizeronLongPressparentPaintClipRect	intersectisHiddenremovekeys	UniqueKeyshowOnScreen
updateWithconfigrectchildrenInInversePaintOrderVoidCallback
descendantextentisCollapsedi
codeUnitAtisWhitespacePipelineOwnerattach
debugOwner	onTapDowndetachRenderObjectredepthChildredepthChildrenRenderObjectVisitorvisitChildrenAxispixelshasSizeSizeboxHeightStyleboxWidthStyleclampDoublelastfoldaccumincomingshiftglobalToLocaliOSgetFullHeightForCaret
fullHeight
heightDiffandroidfuchsialinuxwindowstopLeftminIntrinsicWidthmaxIntrinsicWidthindexminLinesinfinityTextBaselinecomputeDistanceToActualBaselineBoxHitTestResultpositiongetSpanForPositionHitTestTargetHitTestEntryspanhitTestInlineChildrenPointerEventBoxHitTestEntrydebugHandleEventPointerDownEventdebugNeedsLayout
addPointerTapDownDetailsglobalPositioncausetap	doubleTap	longPressEditableTextTextEditingControllerfromtoWordBoundarywordBoundariesbaseTextAffinityupstreamvisibleForTestingfromPosition
downstreamPlaceholderDimensionslayoutlocalToGlobalisFiniteroundPlaceholderSpan	alignmentaboveBaselinebelowBaselinemiddleBoxConstraintsdebugCannotComputeDryLayoutreasonsetPlaceholderDimensionslayoutInlineChildrenChildLayoutHelperdryLayoutChildconstrainWidthconstrainHeightlayoutChildpositionInlineChildreninlinePlaceholderBoxesapplyViewportDimensionapplyContentDimensionsFloatingCursorDragStateStartEndresetLerpValuelerpfloatingCursorRectinflateRectshowRegularCaretlineMetrics
lineNumberdescent_PaintingContext
paintChildpaintcanvaspaintInlineChildren	pushLayerLeaderLayerlinkMatrix4defaultApplyPaintTransformnonepushClipRectneedsCompositingclipBehavioroldLayerLayerHandleClipRectLayer	antiAliasantiAliasWithSaveLayerDiagnosticPropertiesBuilderdebugFillPropertiesColorPropertyDiagnosticsPropertyIntPropertydefaultValueDiagnosticsNodetoDiagnosticsNodenamestyleDiagnosticsTreeStyle
transitionshouldRepaint_computeTextMetricsIfNeededbiggestnotifyListenersforegroundPainterCustomPainterRenderCustomPaintChangeNotifierCanvasPaintcolordrawRectbox_paintOffsetgetLocalRectForCaretRRectfromRectAndRadius	drawRRect_floatingCursorTextPositionwithOpacityiteratormoveNextIterator	RenderBox"RelayoutWhenSystemFontsChangeMixinContainerRenderObjectMixin%RenderInlineChildrenContainerDefaultsTextLayoutMetricsChangeNotifierRenderEditablePainterÁ¶%@ü0»ﬁ ^S√ø    Ä¶  dart:collection  Ä¿  Ä“mathÄ’	dart:mathÄÚÅ@BoxHeightStyleBoxWidthStyleLineMetricsPlaceholderAlignmentTextBox Ä‹  ÄÏuiÄÔdart:ui  ÅD  "package:characters/characters.dart  Åq  package:flutter/foundation.dart  Åõ  package:flutter/gestures.dart  Å√  package:flutter/semantics.dart  ÅÏ  package:flutter/services.dart  Ç  box.dart  Ç(  custom_paint.dart  ÇD  
layer.dart  ÇY  layout_helper.dart  Çv  object.dart  Çå  paragraph.dart  Ç•  viewport_offset.dart    	dart:core¿ ≠ ¿±ãõ <ÄÜÄ§Ä•ÄøÄ€ÅBÅCÅpÅöÅ¬ÅÎÇÇÇ'ÇCÇXÇuÇãÇ§Ç√ÇƒÇÌÉÉ ÉnÉ°ÑÑÑ?Ñ{Ñ|Ñ≈ÖÖ-Ö8ÖSÖèÖ«Ö»ÜÜSÜiÜjÜ•Ü«Ü»Ü‘Ü˜áá,á2á^áráxáüáøáËáÏáÌá˘àà(àFàcàÅàûàØà»àŒà“à”àﬂâââââfâ≤â âŒääeä≤ããRãüãÀãœåålåºççYçwç{ç¢ç¨ç¥çæéé[é™é˙èGèïè¶è™è¯êGêîê∫êÕê—ëë\ë¨ë˝í9í=ííí¨í∞í˛ìOìúì∏ì˚îî-îDîcîzîìîòîôî≤î∆îÎîÏïï9ï:ïRïîïöïËï˛ññTñêñ•ñ∫ñŒñ‘ó1óÅóΩóÒò	òò$ò(ò)òîòïò‡òıôôiôãô®ôÆô÷ô◊ö2öìõõ.õCõGõHõTõqõÜõßõ´õ¨õ∏õÃõ·úú(ú.úçú§ú«úÚùùùù1ù7ùoùáùúùπùÕù”û2ûIûlûóû®û¨û≠ûÔüüüTüZüíü∑üË††?†Z†k†u†}†ä†»†Á†¯°°
°°<°@°B°C°ê°π°Ω¢¢W¢Ä¢Ñ¢”£"£r£¿§§&§*§z§À••€¶-¶3¶q¶w¶∆¶Ãßßhß´ß±ß˙®®®4®^®â®°®√®Ë®¸©)©T©k©~©ò©¥©œ©‡™™p™¨™≤™‘´´$´H´h´É´û´ ¨¨*¨H¨\¨z¨î¨Æ¨’¨¸≠≠e≠®≠ŒÆÆ:ÆVÆ}Æ¶Æ Æ¯ØØHØyØàØ’∞	∞∞"∞_∞§∞Æ∞Ω±±m±w±±±‘≤≤3≤H≤g≤é≤˘≥≥?≥`≥ë≥∫≥ƒ¥¥ ¥=¥X¥w¥ê¥≥¥ÿµ	µJµwµ¨µ›∂∂1∂N∂m∂í∂π∂∂Ò∑(∑\∑ü∑‡∑·∏$∏i∏j∏ñ∏≈∏Ùπ5π6πgπÑπöπûπüπ∫πÒ∫(∫)∫5∫H∫p∫î∫º∫‡ªª2ªYªÇª©ª’ªˆºº/ºDºHºIºéºﬁΩΩLΩqΩÜΩêΩëΩºæ3æ]æïæ¢æ›æ„øøøøNøuø{ø«¿ @¿ @8¿ @~¿ @´¿ @Ë¿ A¿ A"¿ A(¿ AR¿ AV¿ AW¿ Aí¿ A‚¿ A˚¿ Be¿ Bf¿ Bë¿ C¿ C2¿ Cj¿ Cw¿ C≤¿ C∏¿ C”¿ C◊¿ Cÿ¿ D ¿ DG¿ DM¿ Dô¿ D‰¿ Dˇ¿ E1¿ ET¿ Eá¿ E©¿ E∑¿ EΩ¿ E›¿ E·¿ E‚¿ E˜¿ FA¿ F}¿ F~¿ Fú¿ FÁ¿ G=¿ G>¿ GÀ¿ H¿ HW¿ HÉ¿ H¨¿ H›¿ HÊ¿ HÌ¿ HÒ¿ HÚ¿ Ia¿ Iú¿ IŸ¿ J¿ J.¿ JT¿ Jo¿ J°¿ J™¿ J±¿ Jµ¿ J∂¿ JŸ¿ J¸¿ J˝¿ K>¿ Kc¿ Ko¿ K®¿ Kﬂ¿ LÅ¿ Là¿ Lå¿ Lç¿ Lÿ¿ LË¿ LÓ¿ M;¿ MÜ¿ M∂¿ Mº¿ N¿ NK¿ NQ¿ NÑ¿ Nö¿ Nõ¿ N≈¿ O¿ OL¿ OÄ¿ Oé¿ Oî¿ O¡¿ O‹¿ O‡¿ O·¿ P¿ P`¿ Pç¿ PΩ¿ PÀ¿ P—¿ P˙¿ Q¿ Q¿ Q¿ QG¿ QM¿ Qó¿ QÀ¿ QÁ¿ R¿ R3¿ RA¿ RG¿ Rf¿ RÅ¿ RÖ¿ RÜ¿ R»¿ RŒ¿ R˜¿ S/¿ SM¿ Sv¿ Sû¿ S¨¿ S≤¿ S‹¿ S˝¿ T¿ T¿ T¿ T\¿ TÑ¿ Tô¿ Tπ¿ T⁄¿ TË¿ TÓ¿ U¿ U+¿ UK¿ UO¿ UP¿ Uö¿ U†¿ Uﬂ¿ V7¿ Vm¿ V°¿ V•¿ V¶¿ V¿ Vˆ¿ W4¿ Wâ¿ WΩ¿ W¿ WÙ¿ Wı¿ XC¿ XÉ¿ Xâ¿ X⁄¿ X˝¿ Y,¿ Y-¿ YÑ¿ Yä¿ Y÷¿ Z&¿ Zq¿ ZÑ¿ Zä¿ Z◊¿ ["¿ [?¿ [í¿ [Â¿ [Ê¿ \;¿ \A¿ \ç¿ \÷¿ ]%¿ ]?¿ ]E¿ ]í¿ ]›¿ ]˙¿ ^I¿ ^ö¿ ^õ¿ ^€¿ _3¿ _ç¿ _‚¿ `'¿ `+¿ `,¿ `J¿ `K¿ `ç¿ `ô¿ `“¿ `Û¿ a6¿ aÉ¿ aö¿ aÂ¿ aÎ¿ b5¿ b9¿ b:¿ bv¿ bÇ¿ b∑¿ bÍ¿ bÓ¿ bÔ¿ c6¿ cB¿ c¿ c…¿ d¿ dS¿ dú¿ d⁄¿ e¿ e¿ e¿ ee¿ eq¿ eÆ¿ e¯¿ fC¿ fÇ¿ fÀ¿ g¿ gG¿ gK¿ gL¿ gh¿ gi¿ g¨¿ gÀ¿ gÍ¿ h¿ hF¿ hT¿ hZ¿ hç¿ hé¿ hÕ¿ i¿ i1¿ i8¿ iÅ¿ iœ¿ j¿ jW¿ j®¿ jı¿ k¿ kS¿ ku¿ k•¿ k¶¿ k‰¿ l/¿ lF¿ lM¿ l¿ l°¿ lœ¿ l”¿ l‘¿ m*¿ mq¿ mu¿ mv¿ m«¿ mË¿ n6¿ nÖ¿ n“¿ o¿ oo¿ oß¿ o∞¿ p¿ pR¿ pÄ¿ pƒ¿ q¿ q¿ q¿ q5¿ qÜ¿ qì¿ qö¿ qû¿ qü¿ q´¿ q≈¿ q·¿ r)¿ rX¿ rá¿ rã¿ rå¿ r‹¿ rˆ¿ r¸¿ s¿ s*¿ sI¿ sm¿ së¿ s®¿ s¨¿ s≠¿ sπ¿ sŸ¿ s˚¿ t¿ tC¿ tg¿ tk¿ tl¿ t≠¿ t≥¿ tÚ¿ u ¿ uk¿ uù¿ uû¿ uﬁ¿ u‰¿ v*¿ vW¿ vy¿ v•¿ vÏ¿ w¿ w2¿ w@¿ wF¿ wh¿ wá¿ w™¿ w‘¿ w¸¿ x¿ x7¿ x;¿ x<¿ xo¿ x§¿ x«¿ xÚ¿ y ¿ y¿ y*¿ yE¿ yI¿ yJ¿ yp¿ yv¿ yπ¿ y˙¿ z ¿ zN¿ zù¿ zÎ¿ {4¿ {Ñ¿ {î¿ {”¿ |¿ |b¿ |§¿ |œ¿ |˛¿ }¿ }¿ }:¿ }U¿ }u¿ }y¿ }z¿ }À¿ }◊¿ }›¿ ~2¿ ~Ä¿ ~–¿ ~¯¿ ~˛¿ J¿ Z¿ á¿ •¿ Õ¿ €¿ ·¿ Ä¿ Ä¿ Ä!¿ Ä"¿ Äj¿ Äå¿ Ä≈¿ ÄÎ¿ Å¿ Å%¿ Å+¿ ÅP¿ Åk¿ Åo¿ Åp¿ Å°¿ Å◊¿ Å˘¿ Ç¿ Ç#¿ Ç$¿ Çn¿ Çì¿ Çô¿ Çﬁ¿ Ç‰¿ É!¿ Él¿ Éò¿ É…¿ ÉÕ¿ ÉŒ¿ ÉÒ¿ Ñ&¿ ÑI¿ Ñw¿ Ñó¿ Ñ•¿ Ñ´¿ Ñø¿ ÑÚ¿ Ñ¯¿ Ö¿ Ö%¿ Ö>¿ Ön¿ Öt¿ Öx¿ Öy¿ Öî¿ Ö∆¿ Ö ¿ ÖÀ¿ Ö¸¿ Ü¿ Ü8¿ ÜU¿ Üs¿ ÜÅ¿ Üá¿ Üû¿ Üæ¿ Ü¬¿ Ü√¿ á¿ á<¿ áW¿ áu¿ áî¿ á¢¿ á®¿ á¿¿ á◊¿ á€¿ á‹¿ à¿ à0¿ àJ¿ àg¿ àÖ¿ àì¿ àô¿ à∞¿ à–¿ à‘¿ à’¿ â$¿ â*¿ ât¿ âê¿ âñ¿ â◊¿ â›¿ ä+¿ ä{¿ ä∏¿ ä⁄¿ äÏ¿ ã?¿ ã\¿ ãÑ¿ ã°¿ ãØ¿ ãµ¿ ãÃ¿ ãÕ¿ å¿ åm¿ åó¿ å ¿ åÂ¿ åÈ¿ åÍ¿ ç¿ çA¿ çS¿ ç¶¿ ç√¿ çÎ¿ é¿ é¿ é¿ é3¿ éN¿ éR¿ éS¿ éá¿ éß¿ é∏¿ é‘¿ é¿ é˛¿ è¿ è¿ è5¿ è9¿ è:¿ èn¿ èØ¿ è‘¿ ê¿ ê¿ ê¿ êM¿ êi¿ êo¿ êß¿ ê≠¿ ê˛¿ ë¿ ë,¿ ëK¿ ë∏¿ ëÚ¿ ëˆ¿ í4¿ íC¿ íb¿ íœ¿ ì	¿ ì¿ ì3¿ ì^¿ ìb¿ ìc¿ ìö¿ ì“¿ ì˜¿ î#¿ î1¿ î7¿ î\¿ îw¿ î{¿ î|¿ îØ¿ îµ¿ î˜¿ î˝¿ ïA¿ ïl¿ ïö¿ ï∑¿ ïﬂ¿ ï˛¿ ñ¿ ñ¿ ñ*¿ ñZ¿ ñp¿ ñê¿ ñî¿ ñï¿ ñÀ¿ ñ—¿ ó!¿ óm¿ óµ¿ ó›¿ ó˜¿ ò¿ ò8¿ òF¿ òL¿ ò`¿ òé¿ òî¿ ò©¿ òΩ¿ òË¿ òÓ¿ ô¿ ô	¿ ô
¿ ô.¿ ôX¿ ôu¿ ôó¿ ô∏¿ ô∆¿ ôÃ¿ ôÊ¿ ô˝¿ ö¿ ö¿ ö%¿ ö+¿ öà¿ öé¿ öÈ¿ õ8¿ õ§¿ õÁ¿ ú ¿ ú$¿ úF¿ úT¿ úZ¿ úu¿ úå¿ úê¿ úë¿ úŸ¿ ù$¿ ù*¿ ùv¿ ùû¿ ù≥¿ ùÈ¿ û¿ û,¿ ûR¿ û`¿ ûf¿ ûÖ¿ û≈¿ ûÚ¿ ü¿ ü[¿ üç¿ ü´¿ üØ¿ ü∞¿ ü¿ †>¿ †D¿ †à¿ †—¿ °"¿ °j¿ °¿ °∏¿ °€¿ ¢¿ ¢¿ ¢¿ ¢?¿ ¢E¿ ¢v¿ ¢∞¿ ¢‘¿ ¢¸¿ £ ¿ £¿ £2¿ £8¿ £É¿ £Ÿ¿ §¿ §;¿ §i¿ §ì¿ §°¿ §ß¿ § ¿ §‡¿ §‰¿ §Â¿ •¿ •¿ •e¿ •π¿ •Ù¿ ¶¿ ¶A¿ ¶i¿ ¶w¿ ¶}¿ ¶û¿ ¶¥¿ ¶∏¿ ¶π¿ ß¿ ß&¿ ß,¿ ßx¿ ß†¿ ß°¿ ß√¿ ßÙ¿ ßı¿ ®.¿ ®4¿ ®x¿ ®ª¿ ®„¿ ©!¿ ©d¿ ©ô¿ ©ü¿ ©„¿ ™¿ ™T¿ ™v¿ ™Ω¿ ™‚¿ ´¿ ´B¿ ´P¿ ´V¿ ´¿ ´ö¿ ´∫¿ ´æ¿ ´ø¿ ¨¿ ¨<¿ ¨B¿ ¨Ü¿ ¨…¿ ¨Ò¿ ≠/¿ ≠r¿ ≠ß¿ ≠≠¿ ≠˝¿ Æ!¿ Æ'¿ Æz¿ Æ√¿ Æ…¿ Ø¿ ØR¿ Øô¿ Ø◊¿ Øı¿ ∞,¿ ∞0¿ ∞1¿ ∞e¿ ∞k¿ ∞∫¿ ±¿ ±d¿ ±ß¿ ±Ù¿ ≤¿ ≤Y¿ ≤]¿ ≤^¿ ≤ª¿ ≤˜¿ ≤˝¿ ≥L¿ ≥R¿ ≥Ø¿ ¥ ¿ ¥1¿ ¥o¿ ¥s¿ ¥t¿ ¥¨¿ ¥≤¿ ¥˚¿ µC¿ µc¿ µï¿ µ¥¿ µµ¿ µÏ¿ µÌ¿ ∂#¿ ∂)¿ ∂L¿ ∂v¿ ∂ú¿ ∂Ω¿ ∂ﬂ¿ ∂¸¿ ∑¿ ∑6¿ ∑<¿ ∑@¿ ∑A¿ ∑Ç¿ ∑Ω¿ ∑ı¿ ∑ˆ¿ ∏B¿ ∏ë¿ ∏–¿ ∏˙¿ π2¿ π3¿ π~¿ π≈¿ πÚ¿ π¯¿ ∫7¿ ∫w¿ ∫ö¿ ∫“¿ ª¿ ªP¿ ªâ¿ ªƒ¿ º ¿ º,¿ ºQ¿ ºU¿ ºV¿ ºb¿ º©¿ º€¿ Ω¿ Ωm¿ Ωª¿ Ω⁄¿ æ¿ ær¿ æ´¿ æ”¿ ø$¿ øJ¿ øW¿ ø{¿ ø†¿ øÆ¿ ø¥¿ øﬁ¿ ø˜¿ ¿Q¿ ¿`¿ ¿î¿ ¿¨¿ ¿Ú¿ ¡?¿ ¡Ä¿ ¡œ¿ ¬¿ ¬,¿ ¬N¿ ¬∂¿ ¬«¿ ¬÷¿ ¬‚¿ √¿ √#¿ √-¿ √ã¿ √ì¿ √ô¿ √§¿ √÷¿ √˜¿ ƒ¿ ƒ@¿ ƒ]¿ ƒx¿ ƒó¿ ƒò¿ ƒ¿¿ ƒÛ¿ ƒ˘¿ ƒ˙¿ ≈¿ ≈D¿ ≈J¿ ≈K¿ ≈à¿ ≈∞¿ ≈˚¿ ∆
¿ ∆S¿ ∆ß¿ ∆Ø¿ ∆˘¿ «¿ «O¿ «°¿ «©¿ «Ø¿ «≥¿ «¥¿ «Ÿ¿ »¿ »'¿ »;¿ »|¿ »Ö¿ »´¿ »≤¿ »∂¿ »∑¿ »√¿ …7¿ …y¿ …∏¿ …Ï¿  ¿  ¿  /¿  M¿  e¿  à¿  È¿ À6¿ Àé¿ À√¿ Àﬁ¿ Ã¿ Ã¿ Ã8¿ Ã9¿ ÃY¿ Ãß¿ ÃÓ¿ Õ¿ Õã¿ Õ’¿ Œ'¿ ŒT¿ Œz¿ Œï¿ Œü¿ Œ√¿ Œ‚¿ ŒÒ¿ œ2¿ œá¿ œ§¿ œ∏¿ œ¬¿ œÏ¿ –¿ –X¿ –ë¿ –¡¿ –À¿ —¿ —R¿ —p¿ —î¿ —∑¿ —Ì¿ “%¿ “0¿ “~¿ “œ¿ “Ù¿ ”¿ ”I¿ ”t¿ ”†¿ ”´¿ ”˘¿ ‘)¿ ‘V¿ ‘À¿ ’
¿ ’,¿ ’`¿ ’å¿ ’¬¿ ’Ì¿ ’˚¿ ÷<¿ ÷n¿ ÷™¿ ÷’¿ ÷„¿ ◊$¿ ◊V¿ ◊ò¿ ◊¶¿ ◊π¿ ÿ¿ ÿ¿ ÿ¿ ÿI¿ ÿú¿ ÿÍ¿ ÿÙ¿ Ÿ¿ ŸU¿ Ÿ•¿ Ÿ∂¿ Ÿ„¿ ⁄¿ ⁄¿ ⁄T¿ ⁄a¿ ⁄k¿ ⁄|¿ ⁄™¿ ⁄ ¿ ⁄˚¿ €¿ €&¿ €,¿ €S¿ €¢¿ €¶¿ €ß¿ €Ÿ¿ €È¿ ‹$¿ ‹[¿ ‹b¿ ‹f¿ ‹g¿ ‹Æ¿ ‹Ó¿ ›4¿ ›5¿ ›k¿ ›©¿ ›≠¿ ›Æ¿ ›Ò¿ ﬁ¿ ﬁd¿ ﬁÑ¿ ﬁí¿ ﬁò¿ ﬁÏ¿ ﬁˇ¿ ﬂH¿ ﬂn¿ ﬂu¿ ﬂy¿ ﬂz¿ ﬂæ¿ ﬂ›¿ ‡2¿ ‡R¿ ‡`¿ ‡f¿ ‡∫¿ ‡Õ¿ ·¿ ·<¿ ·C¿ ·G¿ ·H¿ ·Ü¿ ·•¿ ·¯¿ ‚7¿ ‚S¿ ‚a¿ ‚g¿ ‚º¿ ‚œ¿ ‚‰¿ „¿ „*¿ „3¿ „Y¿ „`¿ „d¿ „e¿ „§¿ „√¿ ‰¿ ‰c¿ ‰É¿ ‰ë¿ ‰ó¿ ‰Ò¿ Â¿ Â¿ Â9¿ Âc¿ Âl¿ Âí¿ Âô¿ Âù¿ Âû¿ Â∆¿ ÂŸ¿ Ê3¿ Êd¿ Êy¿ ÊÅ¿ Ê¶¿ Êº¿ Êƒ¿ Êﬁ¿ Ê‰¿ ÊË¿ ÊÈ¿ Á¿ Á/¿ Áâ¿ Á∫¿ Áœ¿ Á◊¿ Á¸¿ Ë¿ Ë¿ Ë:¿ Ë@¿ ËQ¿ ËU¿ ËV¿ Ë†¿ Ë±¿ Ë∂¿ Ë˙¿ ÈL¿ Èé¿ È∏¿ ÈÏ¿ Í¿ ÍT¿ Íj¿ Ír¿ Íx¿ Íâ¿ Íç¿ Íé¿ Íö¿ Íø¿ Íÿ¿ Î¿ Î0¿ Î1¿ Îc¿ ÎÜ¿ Î¢¿ Ï¿ Ï*¿ ÏA¿ Ïo¿ Ïs¿ Ït¿ ÏÄ¿ Ïí¿ Ï¶¿ Ï¿¿ ÏÏ¿ Ì¿ Ì1¿ ÌX¿ Ì¿ ÌÉ¿ ÌÑ¿ Ìê¿ Ì´¿ ÌÓ¿ Ó1¿ ÓT¿ Óy¿ Ó¿ Ó¢¿ Ó«¿ ÓÕ¿ ÓÍ¿ ÓÓ¿ ÓÔ¿ Ó˚¿ Ô/¿ Ôr¿ Ôµ¿ Ôÿ¿ Ô¯¿ Ô˛¿ !¿ A¿ G¿ i¿ m¿ n¿ ò¿ ô¿ Â¿ Ê¿ Ò¿ Ò¿ Ò;¿ Òg¿ ÒÅ¿ Ò≠¿ Ò≥¿ Ò∑¿ Ò∏¿ Ò◊¿ ÒÏ¿ Ú	¿ Ú%¿ Ú@¿ ÚZ¿ Úv¿ Ú|¿ ÚÄ¿ ÚÅ¿ Ú≤¿ Ú«¿ Ú‰¿ Û ¿ Û>¿ ÛX¿ Ûò¿ Ûû¿ Û¢¿ Û£¿ Ûˆ¿ ÙE¿ Ùõ¿ Ùú¿ ÙÈ¿ ÙÔ¿ ı@¿ ıê¿ ı›¿ ˆ)¿ ˆu¿ ˆ{¿ ˆã¿ ˆë¿ ˆ“¿ ˜¿ ˜Z¿ ˜}¿ ˜~¿ ˜´¿ ˜¨¿ ˜Á¿ ¯x¿ ¯ë¿ ¯€¿ ˘?¿ ˘ò¿ ˘‹¿ ˘È¿ ˙j¿ ˙Â¿ ˚¿ ˚B¿ ˚y¿ ˚Ç¿ ˚à¿ ˚å¿ ˚ç¿ ˚‹¿ ¸¿ ¸¿ ¸b¿ ¸p¿ ¸v¿ ¸«¿ ¸È¿ ˝¿ ˝L¿ ˝_¿ ˝e¿ ˝à¿ ˝â¿ ˝œ¿ ˛¿ ˛B¿ ˛l¿ ˛s¿ ˛t¿ ˛ã¿ ˛ó¿ ˇ ¿ ˇ¿ ˇ ¿ ˇ!¿ ˇi¿ ˇo¿ ˇ¿ ˇÖ¿ ˇÕ¿ ˇˇ¿ K¿ p¿ ¨¿ œ¿ Ù¿A¿E¿F¿î¿§¿™¿∫¿¿¿¿R¿ó¿‘¿¿9¿s¿ñ¿«¿%¿l¿»¿…¿0¿p¿q¿û¿√¿‚¿¿å¿Õ¿¿'¿A¿k¿Ü¿¢¿≠¿–¿Û¿¿7¿è¿·¿	$¿	G¿	a¿	ê¿	´¿	¬¿	Õ¿	”¿	‘¿
¿
H¿
L¿
M¿
Y¿
å¿
ü¿
 ¿
Œ¿
œ¿
€¿¿!¿[¿_¿`¿æ¿Ù¿:¿;¿Y¿®¿∂¿‡¿¿3¿M¿S¿f¿°¿…¿‰¿ ¿¿_¿z¿ï¿´¿≥¿π¿„¿Á¿Ë¿¿;¿p¿¥¿µ¿—¿ı¿¿r¿Å¿ß¿÷¿ﬁ¿¿¿¿c¿≤¿¬¿€¿*¿x¿∏¿‚¿¿(¿.¿N¿f¿l¿é¿À¿¿¿¿¿R¿v¿z¿{¿á¿∫¿ﬁ¿‚¿„¿Ô¿1¿T¿ó¿õ¿ú¿®¿’¿÷¿‚¿Ô¿?¿}¿±¿¿8¿`¿u¿É¿ƒ¿ ¿Œ¿œ¿Ò¿¿ ¿,¿l¿ò¿Ω¿ﬁ¿ﬂ¿˚¿:¿Z¿Ä¿à¿é¿í¿ì¿≥¿‹¿›¿-¿y¿Ü¿õ¿Ë¿È¿¿#¿q¿î¿Ã¿ˇ¿;¿?¿@¿é¿◊¿Á¿Ì¿8¿b¿ë¿ƒ¿»¿¯¿¿0¿4¿5¿É¿»¿ÿ¿ﬁ¿)¿N¿c¿ô¿ù¿≥¿œ¿‡¿‰¿Â¿ 3¿ Ñ¿ î¿ ö¿ Ë¿!¿!,¿!d¿!h¿!i¿!∑¿"¿"¿"¿"j¿"ï¿"∞¿"Ë¿"Ï¿#¿#$¿#;¿#?¿#@¿#{¿#Å¿#√¿$¿$_¿$Æ¿$¥¿$˙¿%A¿%V¿%ò¿%Ÿ¿%›¿%ﬁ¿&¿&$¿&u¿&†¿'¿'W¿'ƒ¿'Ù¿(¿(N¿(O¿(¿(«¿(»¿(˛¿)¿)>¿)e¿)l¿)m¿)ï¿)ô¿)ö¿)’¿*¿*¿*V¿*\¿*õ¿*Ÿ¿+¿+ ¿+!¿+~¿+Ñ¿+ﬂ¿+Â¿,/¿,_¿,e¿,§¿-¿-/¿-ú¿-ﬁ¿.c¿.…¿/¿/¿/"¿/7¿/ì¿/Ì¿0¿0¿0(¿0/¿03¿04¿0p¿0v¿0µ¿0˜¿1¿1D¿1æ¿2¿2&¿2O¿2ë¿2û¿2ˇ¿3¿3-¿31¿32¿3y¿3è¿3§¿3›¿3˛¿4N¿4}¿4¶¿4ˆ¿4ˇ¿5¿5T¿5k¿5∂¿5º¿5ˇ¿6¿6?¿6a¿6¢¿6—¿6ı¿7 ¿7&¿7H¿7I¿7ò¿7Ê¿8¿8&¿8u¿8∆¿8€¿8˜¿9K¿9è¿9∂¿9◊¿9˝¿:?¿:c¿:™¿:∏¿:⁄¿;¿;/¿;>¿;J¿;j¿;ñ¿;¡¿;Œ¿;Û¿<¿<5¿<Y¿<Ü¿<π¿< ¿<ÿ¿<˙¿=(¿=U¿=d¿=p¿=ï¿=∏¿=€¿> ¿>¿>¿>¿> ¿>j¿>n¿>o¿>ª¿>¿¿?¿?_¿?¶¿?›¿?ﬁ¿@1¿@~¿@ ¿A¿Aq¿Aä¿A™¿A ¿A—¿A˘¿B!¿B%¿B&¿Bw¿BÜ¿Bã¿B‹¿C%¿Co¿Cø¿Cœ¿C‘¿D%¿Do¿DΩ¿DÒ¿E+¿E0¿E|¿EÃ¿F¿F0¿FW¿F®¿F¨¿F≠¿F ¿FÀ¿G¿G¿Gg¿G≤¿Gƒ¿GÊ¿H¿H*¿HK¿Hù¿H¿¿H„¿I¿I'¿I°¿Iß¿I´¿I¨¿I˙¿J¿JN¿Jã¿J≈¿Jÿ¿J˜¿KM¿KZ¿Ky¿Kœ¿K‹¿KÂ¿KÈ¿KÍ¿L¿LM¿Lí¿Læ¿LÔ¿M'¿MN¿Mx¿M®¿M±¿M¡¿M≈¿M∆¿MÎ¿NW¿NX¿Nd¿Nö¿Nº¿NÊ¿O8¿OB¿OZ¿O`¿OŸ¿P*¿Pr¿P≥¿Q¿Q¿Q¿Q!¿Q:¿Qs¿Q€¿R¿RA¿RÉ¿R°¿RÔ¿S>¿Sá¿S◊¿T¿T\¿Tç¿T»¿T¸¿UD¿UÖ¿U–¿V¿Vw¿Vx¿V…¿V ¿W¿W<¿W=¿Wv¿W™¿W‰¿WË¿WÈ¿X9¿Xã¿Xœ¿X˜¿Y¿Y5¿YY¿Y{¿Y†¿YŒ¿Yœ¿Z"¿Zj¿Zí¿ZŒ¿[;¿[y¿[Õ¿[Œ¿[Ò¿\+¿\1¿\2¿\Ü¿\Õ¿]¿]W¿]y¿]∑¿^¿^/¿^5¿^j¿^Ω¿^ﬁ¿_¿_s¿_ó¿_ù¿_û¿_„¿`(¿`z¿`Ã¿a¿a¿aE¿af¿a¶¿a»¿aŒ¿b¿b%¿bf¿bâ¿bè¿bê¿b∑¿b∏¿b”¿b◊¿bÿ¿c$¿cA¿cÃ¿c˛¿d#¿dA¿de¿dÜ¿d©¿dÕ¿d”¿e¿eJ¿eg¿eù¿eÊ¿f%¿f¿fß¿g¿g¿gN¿gT¿g•¿g©¿g™¿h¿hR¿hÜ¿h⁄¿i¿i@¿iß¿iØ¿iµ¿j
¿j,¿jS¿jµ¿jº¿j¿¿j¡¿k¿kG¿kM¿kû¿k∑¿kΩ¿l¿l¿l]¿l°¿lß¿lÛ¿m;¿m¿m”¿n¿nu¿nú¿n®¿n∑¿nÃ¿n„¿n¸¿o¿o¿o¿oH¿oi¿o£¿o§¿o◊¿p¿p¿p¿pX¿pò¿pô¿p·¿q+¿qN¿qÅ¿qá¿qà¿q¡¿qÙ¿qı¿r¿rK¿rQ¿rU¿rV¿ræ¿rÍ¿s¿s6¿sj¿sq¿sà¿s‘¿sÁ¿s˙¿t¿t"¿tN¿tg¿tö¿tŒ¿t◊¿t¿u:¿uO¿ud¿um¿us¿uw¿ux¿uÑ¿u≈¿v¿v#¿v)¿v[¿v_¿v`¿vl¿v£¿v∆¿w¿w4¿wN¿w^¿wz¿wí¿w∂¿wﬁ¿wÁ¿wÙ¿x¿x>¿xD¿xy¿x´¿x˚¿y¿y¿y¿yX¿yY¿ye¿y†¿yº¿y“¿yÁ¿z¿z¿zD¿zÉ¿zâ¿zç¿zé¿zö¿zﬂ¿{
¿{I¿{°¿{ÿ¿|¿|g¿|¨¿}¿}v¿}∆¿~¿~¿~¿~"¿~T¿~r¿~ä¿~´¿~√¿~ı¿ ¿¿¿¿¿C¿b¿Ü¿°¿±¿≤¿æ¿ˇ¿Ä ¿Ä¿Ä2¿Ä3¿Ä?¿Äa¿Äb¿Äî¿Ä∑¿ÄË¿Å¿Å¿Å¿Å¿ÅS¿Ål¿Åm¿Å§¿Åº¿Å¬¿Å√¿Å◊¿Ç	¿Ç6¿Ç<¿Ç@¿ÇA¿ÇM¿ÇÑ¿Ç¥¿Ç–¿É	¿É6¿Éb¿Éï¿Éõ¿Éü¿É†¿É¨¿É—¿ÉÍ¿Ñ¿Ñ¿Ñ¿Ñ&¿Ñ8¿Ñf¿Ñz¿Ñ~¿Ñ¿Ñã¿Ñ◊¿ÑŸ¿Ñ⁄¿Ö$¿ÖB¿ÖF¿Öï¿ÖÊ¿Ü5¿ÜÜ¿Ü◊¿Ü˛¿á¿áD¿áë¿á—¿à!¿àE¿àI¿àW¿à[¿à¨¿àÚ¿â9¿â¿â“¿ä¿ä^¿äá¿äç¿ä’¿ã$¿ãs¿ã≥¿ãπ¿å¿åJ¿åö¿åß¿å·¿å‚¿ç¿ç¿çn¿çº¿é¿é¿é^¿é≠¿éÂ¿è,¿è.¿è/¿èk¿èÖ¿è®¿è≈¿èÚ¿ê¿ê¿êD¿êE¿êu¿êè¿ê∑¿êﬁ¿êÏ¿êÚ¿ë¿ë)¿ë-¿ë.¿ëf¿ëÜ¿ë¥¿ë›¿ëÎ¿ëÒ¿í¿í*¿í.¿í/¿íy¿í¿íæ¿ì¿ìJ¿ìÄ¿ì™¿ì∏¿ìæ¿ì·¿ì¯¿ì¸¿ì˝¿îG¿îM¿îã¿îœ¿ï¿ïE¿ïn¿ï|¿ïÇ¿ï§¿ïª¿ïø¿ï¿¿ïÃ¿ñ¿ñC¿ñl¿ñ´¿ñπ¿ñø¿ñ¿¿ñ‚¿ó#¿óe¿ó¨¿óÿ¿ò¿ò	¿ò
¿ò1¿òH¿òÄ¿ò“¿òÍ¿òÛ¿ò˘¿ò˝¿ò˛¿ô
¿ôE¿ôm¿ôÅ¿ôá¿ô¶¿ôÁ¿ôÌ¿ö¿öV¿öí¿ö÷¿õ¿õ¿õ¿õ ¿õT¿õg¿õh¿õê¿õ¨¿õÃ¿õÏ¿õ˙¿ú ¿ú¿ú1¿ú5¿ú6¿úu¿úç¿úí¿ú›¿ú˙¿ù¿ù¿ù@¿ùr¿ùs¿ùõ¿ù±¿ù“¿ùˇ¿û¿û¿û¿û-¿ûD¿ûH¿ûI¿ûv¿ûè¿û≥¿û’¿û„¿ûÈ¿ü¿ü¿ü¿ü ¿üL¿ür¿üï¿ü∑¿ü≈¿üÀ¿üÊ¿ü˝¿†¿†¿†@¿†a¿†ç¿†≈¿†”¿†Ÿ¿†⁄¿†˛¿°¿°3¿°9¿°=¿°>¿°u¿°í¿°∫¿°‚¿°¿°ˆ¿¢¿¢.¿¢2¿¢3¿¢™¿¢˚¿£¿£=¿£b¿£~¿£±¿£¿¿§¿§B¿§J¿§P¿§T¿§U¿§a¿§©¿§Ì¿§Ó¿•-¿•.¿•¨¿•„¿•Ò¿•˜¿•¯¿¶6¿¶7¿¶p¿¶à¿¶¡¿ß¿ß ¿ßT¿ßU¿ßs¿ßƒ¿ß ¿ßÀ¿®¿®.¿®É¿®ë¿®ó¿®ò¿®Æ¿®˘¿©1¿©8¿©<¿©=¿©I¿©Ñ¿©¨¿©¿¿©∆¿©«¿©Ê¿™ ¿™¿™/¿™a¿™ù¿™Õ¿´¿´5¿´{¿´º¿´¿¿´¬¿´√¿¨	¿¨H¿¨I¿¨w¿¨x¿¨Ñ¿¨∞¿¨Ï¿≠¿≠¿≠¿≠¿≠(¿≠W¿≠ì¿≠ª¿≠¡¿≠≈¿≠∆¿≠“¿Æ¿ÆV¿Æâ¿Æè¿Æì¿Æî¿Æ†¿Æ€¿Ø¿Ø¿Ø¿Øä¿Øù¿Ø£¿Ø§¿Ø˚¿∞F¿∞Ö¿∞…¿∞ﬁ¿∞Ê¿∞Ï¿∞Ì¿∞ˇ¿±¿±    Ä•  ÄøÄ÷ Ä€ÄÄÚÅ@ÅC  Åp  Åö  Å¬  ÅÎ  Ç  Ç'  ÇC  ÇX  Çu  Çã  Ç§    Ñ|ÑöÖ>Ä∞/// Represents the coordinates of the point in a selection, and the text
/// direction at that point, relative to top left of the [RenderEditable] that
/// holds the selection. ÖUq ÖóÖ©9/// Creates a description of a point in a text selection.Ö™
Ö∞  Ö∂Öº   Ö ÄùÜbÄÜ/// Coordinates of the lower left or lower right corner of the selection,
/// relative to the top left of the [RenderEditable] object. ÜlYÜº8/// Direction of the text at this edge of the selection. à’>àÈ   à’à÷Ü Å!Ü‰  ÜÁÜÔ  Ü ÜÀáÔÄ‚à   áÔáÖ-Ö.âò)ìæäü/// The consecutive sequence of [TextPosition]s that the caret should move to
/// when the user navigates the paragraph using the upward arrow key or the
/// downward arrow key.
///
/// {@template flutter.rendering.RenderEditable.verticalArrowKeyMovement}
/// When the user presses the upward arrow key or the downward arrow key, on
/// many platforms (macOS for instance), the caret will move to the previous
/// line or the next line, while maintaining its original horizontal location.
/// When it encounters a shorter line, the caret moves to the closest horizontal
/// location within that line, and restores the original horizontal location
/// when a long enough line is encountered.
///
/// Additionally, the caret will move to the beginning of the document if the
/// upward arrow key is pressed and the caret is already on the first line. If
/// the downward arrow key is pressed next, the caret will restore its original
/// horizontal location and move to the second line. Similarly the caret moves
/// to the end of the document if the downward arrow key is pressed when it's
/// already on the last line.
///
/// Consider a left-aligned paragraph:
///   aa|
///   a
///   aaa
/// where the caret was initially placed at the end of the first line. Pressing
/// the downward arrow key once will move the caret to the end of the second
/// line, and twice the arrow key moves to the third line after the second "a"
/// on that line. Pressing the downward arrow key again, the caret will move to
/// the end of the third line (the end of the document). Pressing the upward
/// arrow key in this state will result in the caret moving to the end of the
/// second line.
///
/// Vertical caret runs are typically interrupted when the layout of the text
/// changes (including when the text itself changes), or when the selection is
/// changed by other input events or programmatically (for example, when the
/// user pressed the left arrow key).
/// {@endtemplate}
///
/// The [movePrevious] method moves the caret location (which is
/// [VerticalCaretMovementRun.current]) to the previous line, and in case
/// the caret is already on the first line, the method does nothing and returns
/// false. Similarly the [moveNext] method moves the caret to the next line, and
/// returns false if the caret is already on the last line.
///
/// The [moveByOffset] method takes a pixel offset from the current position to move
/// the caret up or down.
///
/// If the underlying paragraph's layout changes, [isValid] becomes false and
/// the [VerticalCaretMovementRun] must not be used. The [isValid] property must
/// be checked before calling [movePrevious], [moveNext] and [moveByOffset],
/// or accessing [current]. ì˝Äöîîî îî#  î1î7  îHîN  îgîm  î~îÑ   îõî¢  î¥î∏  î»!î’  îÓ'ï	  ïï.  ï<ïA ïLò+gòZ 
òêòëòkòèòlòqòyòéòzòÇïTÇ”ñõÅ//// Whether this [VerticalCaretMovementRun] can still continue.
///
/// A [VerticalCaretMovementRun] run is valid if the underlying text layout
/// hasn't changed.
///
/// The [current] value and the [movePrevious], [moveNext] and [moveByOffset]
/// methods must not be accessed when [isValid] is false.   õJ`õg   õJõKòóÇØò∂  òŒò”   õÆÅXõø   õÆõØù
Å°ùv`/// Move back to the previous element.
///
/// Returns true and updates [current] if successful.   ûØÇêüôÄÿ/// Move forward or backward by a number of elements determined
/// by pixel [offset].
///
/// If [offset] is negative, move backward; otherwise move forward.
///
/// Returns true and updates [current] if successful. ü¶üÆ    °C¿]…•ÉÀ/// Displays some text in a scrollable container with a potentially blinking
/// cursor and with gesture recognizers.
///
/// This is the renderer for an editable text field. It does not directly
/// provide affordances for editing the text, but it does handle text selection
/// and manipulation of the text cursor.
///
/// The [text] is displayed, scrolled by the given [offset], aligned according
/// to [textAlign]. The [maxLines] property controls whether the text displays
/// on one line or many. The [selection], if it is not collapsed, is painted in
/// the [selectionColor]. If it _is_ collapsed, then it represents the cursor
/// position. The cursor is shown while [showCursor] is true. It is painted in
/// the [cursorColor].
///
/// Keyboard handling, IME handling, scrolling, toggling the [showCursor] value
/// to actually blink the cursor, and other features not mentioned above are the
/// responsibility of higher layers and not handled by this object. •›ì¿ ®®Ç/// Creates a render object that implements the visual aspects of a text field.
///
/// The [textAlign] argument defaults to [TextAlign.start].
///
/// If [showCursor] is not specified, then it defaults to hiding the cursor.
///
/// The [maxLines] property can be set to null to remove the restriction on
/// the number of lines. By default, it is 1, meaning this is a single-line
/// text field. If it is not null, it must be greater than zero.
///
/// Use [ViewportOffset.zero] for the [offset] if there is no need for
/// scrolling.+®"®/  ®8$®P  ®b%®m  ®ç®ï  ®•®≠  ®«®›  ®Ï®Û  © '©  ©-%©A  ©X©^  ©o©u  ©Ç©à  ©ú©©  ©∏©¿  ©”Äˇ™æ  ™ÿ,™‰  ´
´  ´(´A  ´L´R  ´l´r  ´á´ç  ´¢&´∑  ´Œ5´ﬁ  ¨	¨  ¨.¨4  ¨L¨U  ¨`¨h  ¨~¨á  ¨ò¨°  ¨≤!¨∏  ¨Ÿ!¨·  ≠ ≠  ≠#@≠6  ≠i=≠{  ≠¨ ≠≥  ≠“F≠ÿ  ÆÆ*  Æ>ÆF  ÆZ!Æ`  ÆÅ#Æê  Æ™Æ¬  ÆŒ(ÆÊ  Æ¸Ø  Å®x®Å®Ç©h©ë©”©‘©ﬁ™∞©Ê™™v™œ™™˙™˚´a´|´ò´Ó´¸´˝¨%¨A¨u¨Œ¨Ô¨ı¨ˆ≠≠L≠N≠O≠]≠^≠ê≠í≠ì≠†≠°≠Û≠˘ÆÆÆÆÆÆÆÆÆnÆrÆsØØ$ØEØ6Ø.Ø%Ø1ØBØ9ØDØOØUØvØgØ_ØVØbØsØjØuØÄØÜØ”∞Ø∫Ø§ØëØ¢ØõØíØûØßØ∏Ø±Ø®Ø¥ØΩØ“Ø«ØæØ Øﬁ∞∞ ∞]∞´∞4∞+∞,∞7∞\∞I∞A∞8∞D∞U∞L∞X∞h∞µ∞ª±±t∞Ú∞∆∞œ∞∞–∞‹∞Ê∞Á±∞ı±±±~±Ñ±Æ±™±Ö±ó±ò±¢±£±≠±∏±æ±—±À±ø±Œ±€±·≤±˜±Ô±‚±Ú≤±˙≤
≤$≤≤&≤1≥¡≤@≤<≤B≤Z≤Q≤\≤}≤p≤≤°≤ó≤∆≤Î≤Æ≤£≤±≤ª≤º≤»≤“≤”≤Ÿ≤È≤⁄≤Ì≥≥≥
≥#≥≥3≥7≥.≥%≥1≥5≥9≥R≥H≥T≥{≥i≥}≥®≥ö≥™≥◊≥À≥‰≥Ÿ≥Á≥Ù≥˘≥ı≥˙¥ ≥˚¥¥
¥¥1¥'¥3¥M¥D¥O¥j¥_¥l¥Ü¥~¥à¥§¥ó¥¶¥»¥∫¥ ¥Ò¥ﬂ¥Ûµ,µµ.µcµQµeµîµ~µñµ«µ≥µ…µ¯µ‰µ˙∂"∂∂$∂B∂8∂D∂`∂U∂b∂Ç∂t∂Ñ∂£∂ô∂Æ∂•∂±;π°Nπÿ/// Child render objects πÛ3∫  ¿ @Ä)¿ @ó  ¿ E3¿ EJ  ¿ FC8¿ F\ ¿ Fl¿ Fy¿ Fz¿ FûG¿ F∫ ¿ FŒ¿ F„¿ F‰¿ FÈR¿ G ¿ G$¿ G9¿ G:¿ GÕA¿ GÓ  ¿ Ic7¿ IÑ  ¿ J∏¿ J¿  ¿ J€¿ J„  ¿ LèÇ	¿ NãÅ‡/// Whether the [handleEvent] will propagate pointer events to selection
/// handlers.
///
/// If this property is true, the [handleEvent] assumes that this renderer
/// will be notified of input gestures via [handleTapDown], [handleTap],
/// [handleDoubleTap], and [handleLongPress].
///
/// If there are any gesture recognizers in the text span, the [handleEvent]
/// will still propagate pointer events to those recognizers.
///
/// The default value of this property is false. ¿ QÕ¿ Q‘  ¿ S1¿ S8  ¿ TÜ¿ Tã  ¿ W˜Å3¿ YÄ˝/// The object that controls the text selection, used by this render object
/// for implementing cut, copy, and paste keyboard shortcuts.
///
/// It will make cut, copy and paste functionality work with the most recently
/// set [TextSelectionDelegate]. ¿ [îO¿ [Æ ¿ [ ¿ [◊¿ [‹¿ [ÿ¿ [›¿ [‚¿ [ﬁ¿ ^KM¿ ^e ¿ ^¿ ^å¿ ^ë¿ ^ç¿ ^í¿ ^ó¿ ^ì¿ vY¿ vk  ¿ v{(¿ vç  ¿ vßC¿ vÕ  ¿ Ñ(¿ Ñ<  ¿ Ü ¿ Ü% ¿ Ü1¿ á>¿ áC ¿ áP¿ à2¿ à7 ¿ àC¿ ä‹¿ ä·  ¿ çC¿ çH  ¿ é©¿ éÆ  ¿ ïú¿ ï´  ¿ óﬂ¿ óÓ  ¿ ôZ¿ ôa ¿ ôp¿ õÈ¿ õÒ  ¿ ùÎ¿ ù  ¿ §¿ §$  ¿ •ˆ¿ ¶   ¿ ¶ªÄ„¿ ßÖÄ∂/// The padding applied to text field. Used to determine the bounds when
/// moving the floating cursor.
///
/// Defaults to a padding with left, top and right set to 4, bottom to 5. ¿ ß£¿ ß® ¿ ßº¿ ß≈-¿ ß◊  ¿ ™ø!¿ ™≈  ¿ µó¿ µû ¿ µ±¿ ∂x"¿ ∂} ¿ ∂ç¿ ∂ë¿ ∂í¿ ∑CÄ∞¿ ∑Âw/// Collected during [describeSemanticsConfiguration], used by
/// [assembleSemanticsNode] and [_combineSemanticsInfo]. ¿ ∏¸4¿ π  ¿=¿B  ¿—¿Î  ¿Û*¿  ¿ï¿ù  ¿µ%¿Ω  ¿?®3¿?≈  ¿FØ¿Fπ  ¿M»!¿MŒ  ¿X—$¿Xÿ ¿XÍ¿X¿XÒ¿X˘¿Y  ¿Y¿Y ¿Y.¿Y7 ¿Y< ¿YR¿Y[¿Y` ¿Yt¿Y}!¿YÇ ¿Yô¿Y¢*¿Y™  ¿yN¿y) ¿y:¿yE¿yS¿yF¿yT¿yU]øÅn¿ @UÅ/// The [RenderEditablePainter] to use for painting above this
/// [RenderEditable]'s text content.
///
/// The new [RenderEditablePainter] will replace the previously specified
/// foreground painter, and schedule a repaint if the new painter's
/// `shouldRepaint` method returns true.   ¿ @≠Ä®¿ @±  ¿ @√!¿ @€   ¿ C⁄ÅV¿ EÅ/// Sets the [RenderEditablePainter] to use for painting beneath this
/// [RenderEditable]'s text content.
///
/// The new [RenderEditablePainter] will replace the previously specified
/// painter, and schedule a repaint if the new painter's `shouldRepaint`
/// method returns true.   ¿ EVÄä¿ EZ  ¿ Eb!¿ Ez   ¿ G@Ää¿ Gd    ¿ HÙl¿ I    ¿ Nùx¿ Nﬂ'/// {@macro dart.ui.textHeightBehavior}   ¿ OÄ«¿ O  ¿ O/¿ OD   ¿ O„|¿ P18/// {@macro flutter.painting.textPainter.textWidthBasis}   ¿ PbÄ∂¿ Pf  ¿ Pu¿ PÖ   ¿ QÄÆ¿ Q§v/// The pixel ratio of the current device.
///
/// Should be obtained by querying MediaQuery for the devicePixelRatio.   ¿ QÈÄõ¿ QÌ  ¿ Q˛¿ R   ¿ RàÄ¶¿ Sj/// Character used for obscuring text if [obscureText] is true.
///
/// Must have a length of exactly one.   ¿ SOÄ»¿ SS  ¿ Sf¿ Sn   ¿ Th¿ Tg@/// Whether to hide the text being edited (e.g., for passwords).   ¿ TõÄ≥¿ Tü  ¿ T´
¿ T±   ¿ URÄ‰¿ U˜Äà/// Controls how tall the selection highlight boxes are computed to be.
///
/// See [ui.BoxHeightStyle] for details on available styles.   ¿ V9k¿ V=  ¿ VR¿ Ve   ¿ V®Ä‡¿ WKÄá/// Controls how wide the selection highlight boxes are computed to be.
///
/// See [ui.BoxWidthStyle] for details on available styles.   ¿ Wãh¿ Wè  ¿ W£¿ Wµ   ¿ Y/Çb¿ [[Å˝/// Track whether position of the start of the selected text is within the viewport.
///
/// For example, if the text contains "Hello World", and the user selects
/// "Hello", then scrolls so only "World" is visible, this will become false.
/// If the user scrolls back so that the "H" is visible again, this will
/// become true.
///
/// This bool indicates whether the text is scrolled so that the handle is
/// inside the text field viewport, as opposed to whether it is actually
/// visible on the screen.   ¿ [ËÇ`¿ ^Åˇ/// Track whether position of the end of the selected text is within the viewport.
///
/// For example, if the text contains "Hello World", and the user selects
/// "World", then scrolls so only "Hello" is visible, this will become
/// 'false'. If the user scrolls back so that the "d" is visible again, this
/// will become 'true'.
///
/// This bool indicates whether the text is scrolled so that the handle is
/// inside the text field viewport, as opposed to whether it is actually
/// visible on the screen.   ¿ tnÅ.¿ uxÄÙ/// Returns a plain text version of the text in [TextPainter].
///
/// If [obscureText] is true, returns the obscured text. See
/// [obscureText] and [obscuringCharacter].
/// In order to get the styled text as an [InlineSpan] tree, use [text].   ¿ u†Ä∂¿ v<ÄÖ/// The text to paint in the form of a tree of [InlineSpan]s.
///
/// In order to get the plain text representation, use [plainText].   ¿ vÓÅL¿ vÚ  ¿ v˜¿ w   ¿ x>e¿ x0/// How the text should be aligned horizontally.   ¿ x¶Ä¢¿ x™  ¿ x¥¿ xø   ¿ yLÉW¿ |vÇ3/// The directionality of the text.
///
/// This decides how the [TextAlign.start], [TextAlign.end], and
/// [TextAlign.justify] values of [textAlign] are interpreted.
///
/// This is also used to disambiguate how to render bidirectional text. For
/// example, if the [text] is an English phrase followed by a Hebrew phrase,
/// in a [TextDirection.ltr] context the English phrase will be on the left
/// and the Hebrew phrase to its right, while in a [TextDirection.rtl]
/// context, the English phrase will be on the right and the Hebrew phrase on
/// its left.   ¿ |¶Ä“¿ |™  ¿ |∏¿ |«   ¿ }|Ç
¿ hÅÕ/// Used by this renderer's internal [TextPainter] to select a locale-specific
/// font.
///
/// In some cases the same Unicode character may be rendered differently depending
/// on the locale. For example the 'È™®' character is rendered differently in
/// the Chinese and Japanese locales. In these cases the [locale] may be used
/// to select a locale-specific font.
///
/// If this value is null, a system-dependent algorithm is used to select
/// the font.   ¿ âÄó¿ ç  ¿ î¿ ù   ¿ Ä$Ä†¿ Äûe/// The [StrutStyle] used by the renderer's internal [TextPainter] to
/// determine the strut to use.   ¿ Ä«Äß¿ ÄÀ  ¿ Ä÷¿ Ä„   ¿ Ård¿ ÅÆ./// The color to use when painting the cursor.   ¿ ÅŸI¿ Å›  ¿ ÅÈ¿ ÅÒ   ¿ Ç&ÅE¿ É.Ä/// The color to use when painting the cursor aligned to the text while
/// rendering the floating cursor.
///
/// Typically this would be set to [CupertinoColors.inactiveGray].
///
/// If this is null, the background cursor is not painted.   ¿ Én^¿ Ér  ¿ Éà¿ Éê   ¿ É–U¿ Ñ /// Whether to paint the cursor.   ¿ ÑKÅ,¿ ÑO  ¿ ÑZ¿ Ño   ¿ ÖÕP¿ Ü./// Whether the editable is currently focused.   ¿ Ü:Äá¿ Ü>  ¿ ÜG
¿ ÜM   ¿ Ü≈v¿ á#R/// Whether this rendering object will take a full line regardless the text width.   ¿ áYÄÅ¿ á]  ¿ ág
¿ ám   ¿ áﬁQ¿ à//// Whether this rendering object is read only.   ¿ àLÄá¿ àP  ¿ àY
¿ à_   ¿ à◊Ç¿ ä√ÅŒ/// The maximum number of lines for the text to span, wrapping if necessary.
///
/// If this is 1 (the default), the text will not wrap, but will extend
/// indefinitely instead.
///
/// If this is null, there is no limit to the number of lines.
///
/// When this is not null, the intrinsic height of the render object is the
/// height of one line of text multiplied by this value. In other words, this
/// also controls the height of the actual editing widget.   ¿ äÓÅ˙¿ ãEP/// The value may be null. If it is not null, then it must be greater than zero. ¿ ãN
¿ ãT   ¿ åÏT¿ ç*2/// {@macro flutter.widgets.editableText.minLines}   ¿ çUÄ¸¿ ç¨P/// The value may be null. If it is not null, then it must be greater than zero. ¿ çµ
¿ çª   ¿ éUQ¿ éí1/// {@macro flutter.widgets.editableText.expands}   ¿ é∫~¿ éæ  ¿ é∆
¿ éÃ   ¿ è<r¿ è{1/// The color to use when painting the selection.   ¿ è±T¿ èµ  ¿ èƒ¿ èÃ   ¿ ê	Ç*¿ íÅ/// Deprecated. Will be removed in a future version of Flutter. Use
/// [textScaler] instead.
///
/// The number of font pixels for each logical pixel.
///
/// For example, if the text scale factor is 1.5, text will be 50% larger than
/// the specified font size.  ¿ ë¿ ë ¿ ë*¿ ëÙ¿ ë0¿ ëO¿ ëº¿ í6Å+¿ ì  ¿ ì#¿ ì+  ¿ í6¿ í7¿ íA¿ ì¿ íG¿ íf¿ í”¿ ìel¿ ì´4/// {@macro flutter.painting.textPainter.textScaler}   ¿ ì‘Ä¶¿ ìÿ  ¿ ì„¿ ìÔ   ¿ î~Å¿ ïÅÄ„/// The region of text that is selected, if any.
///
/// The caret position is represented by a collapsed selection.
///
/// If [selection] is null, there is no selection and attempts to
/// manipulate the selection will throw.   ¿ ïπÄ⁄¿ ïΩ  ¿ ï«¿ ï◊   ¿ ñóÅE¿ ó Å/// The offset at which the text should be painted.
///
/// If the text content is larger than the editable line itself, the editable
/// line clips the text. This property controls which part of the text is
/// visible by shifting the text by the given offset before clipping.   ¿ ó˘Å¿ ó˝  ¿ ò¿ ò   ¿ ôK¿ ô;!/// How thick the cursor will be.   ¿ ôwÄâ¿ ô{  ¿ ôá¿ ôè   ¿ öÅ‚¿ õ±Å)/// How tall the cursor will be.
///
/// This can be null, in which case the getter will actually return [preferredLineHeight].
///
/// Setting this to itself fixes the value to the current [preferredLineHeight]. Setting
/// this to null returns the behavior of deferring to [preferredLineHeight].   ¿ úÄç¿ ú  ¿ ú¿ ú   ¿ úìÅU¿ ùæÅ/// {@template flutter.rendering.RenderEditable.paintCursorAboveText}
/// If the cursor should be painted on top of the text or underneath it.
///
/// By default, the cursor should be painted on top for iOS platforms and
/// underneath for Android platforms.
/// {@endtemplate}   ¿ ûÅ©¿ û	  ¿ û
¿ û$   ¿ ü≤Ç¿ °åÅæ/// {@template flutter.rendering.RenderEditable.cursorOffset}
/// The offset that is used, in pixels, when painting the cursor on screen.
///
/// By default, the cursor position should be set to an offset of
/// (-[cursorWidth] * 0.5, 0.0) on iOS platforms and (0, 0) on Android
/// platforms. The origin from where the offset is applied to is the arbitrary
/// location where the cursor ends up being rendered from by default.
/// {@endtemplate}   ¿ °∫L¿ °æ  ¿ °À¿ °”   ¿ ¢
Ä•¿ ¢Ñg/// How rounded the corners of the cursor should be.
///
/// A null value is the same as [Radius.zero].   ¿ ¢≤M¿ ¢∂  ¿ ¢√¿ ¢Ã   ¿ £Å¿ £ÈÄœ/// The [LayerLink] of start selection handle.
///
/// [RenderEditable] is responsible for calculating the [Offset] of this
/// [LayerLink], which will be used as [CompositedTransformTarget] of start handle.   ¿ §=Ä¶¿ §A  ¿ §V¿ §a   ¿ §ÁÅ¿ •…ÄÀ/// The [LayerLink] of end selection handle.
///
/// [RenderEditable] is responsible for calculating the [Offset] of this
/// [LayerLink], which will be used as [CompositedTransformTarget] of end handle.   ¿ ¶Ä†¿ ¶  ¿ ¶.¿ ¶9   ¿ ß˜Ç≈¿ ™ÇÇf/// Whether to allow the user to change the selection.
///
/// Since [RenderEditable] does not handle selection manipulation
/// itself, this actually only affects whether the accessibility
/// hints provided to the system (via
/// [describeSemanticsConfiguration]) will enable selection
/// manipulation. It's the responsibility of this object's owner
/// to provide selection manipulation affordances.
///
/// This field is used by [selectionEnabled] (which then controls
/// the accessibility hints mentioned above). When null,
/// [obscureText] is used to determine the value of
/// [selectionEnabled] instead.   ¿ ™‰ÄŸ¿ ™Ë  ¿ ´¿ ´
   ¿ ´¡Ñn¿ Ø‚ÉÔ/// Whether interactive selection are enabled based on the values of
/// [enableInteractiveSelection] and [obscureText].
///
/// Since [RenderEditable] does not handle selection manipulation
/// itself, this actually only affects whether the accessibility
/// hints provided to the system (via
/// [describeSemanticsConfiguration]) will enable selection
/// manipulation. It's the responsibility of this object's owner
/// to provide selection manipulation affordances.
///
/// By default, [enableInteractiveSelection] is null, [obscureText] is false,
/// and this getter returns true.
///
/// If [enableInteractiveSelection] is null and [obscureText] is true, then this
/// getter returns false. This is the common case for password fields.
///
/// If [enableInteractiveSelection] is non-null then its value is
/// returned. An application might [enableInteractiveSelection] to
/// true to enable interactive selection for a password field, or to
/// false to unconditionally disable interactive selection.   ¿ ∞3Å¿¿ ±¥ÄÇ/// The color used to paint the prompt rectangle.
///
/// The prompt rectangle will only be requested on non-web iOS applications.   ¿ ±ˆf¿ ±˙  ¿ ≤
¿ ≤   ¿ ¥vÅ¿ µpÄ‰/// The maximum amount the text is allowed to scroll.
///
/// This value is only valid after layout and can change as additional
/// text is entered or removed in order to accommodate expanding when
/// [expands] is set to true.   ¿ µ∑4¿ µ¬    ¿ µÔÄÜ¿ ∂WX/// {@macro flutter.material.Material.clipBehavior}
///
/// Defaults to [Clip.hardEdge].   ¿ ∂ûÄ°¿ ∂¢  ¿ ∂Ø
¿ ∂µ   ¿ p'¿ y    ¿ õI¿ §    ¿ ËÄŒ¿ Û    ¿ Ò∫Ä≈¿ Ò≈    ¿ ÙGS¿ ÙP    ¿bÄ◊¿Äè/// An estimate of the height of a line in the text. See [TextPainter.preferredLineHeight].
/// This does not require the layout to be updated.   ¿ﬂÅ¿©Äµ/// {@template flutter.rendering.RenderEditable.lastSecondaryTapDownPosition}
/// The position of the most recent secondary tap down event on this text
/// input.
/// {@endtemplate}   ¿)úz¿)Ë8/// {@macro flutter.painting.TextPainter.wordBoundaries}   ¿MÌi¿Mˆ    S∫+Ç∫<   ∫+∫,ºKÇ¿ºP  ºi!ºÅ   ¿ AYÇ}¿ A^  ¿ Am!¿ AÖ   ¿ HÄﬁ¿ H2    ¿ IûÅ¿ Iæ    ¿ JˇÅå¿ KE>/// Assert that the last layout still matches the constraints.   ¿ ^ùÅç¿ ^Í=/// Returns the TextPosition above or below the given offset. ¿ _¿ _  ¿ _¿ _"   ¿ `MÅÎ¿ `©?/// {@macro flutter.services.TextLayoutMetrics.getLineAtOffset} ¿ `π¿ `«  ¿ `è¿ `ê¿ b<Ä±¿ bé9/// {@macro flutter.painting.TextPainter.getWordBoundary} ¿ bû¿ b¨  ¿ bx¿ by¿ bÒÇ+¿ cQD/// {@macro flutter.services.TextLayoutMetrics.getTextPositionAbove} ¿ cf¿ ct  ¿ c8¿ c9¿ e Ç*¿ eÄD/// {@macro flutter.services.TextLayoutMetrics.getTextPositionBelow} ¿ eï¿ e£  ¿ eg¿ eh¿ gkÖg¿ gp  ¿ gí¿ gö   ¿ l÷Äû¿ l€  ¿ l¿ m  ¿ m¿ m"   ¿ mxÑ%¿ m}  ¿ mã¿ mö  ¿ m®¿ mø   ¿ q°ÄÈ¿ q≤   ¿ q°¿ q¢¿ réÅ¿ s1Äà/// Marks the render object as needing to be laid out again and have its text
/// metrics recomputed.
///
/// Implies [markNeedsLayout].  ¿ s¿ s ¿ sØÄª¿ s¿   ¿ sØ¿ s∞¿ Ö{N¿ ÖÄ    ¿ ≤`Ç¿ ¥ÅD/// Dismisses the currently displayed prompt rectangle and displays a new prompt rectangle
/// over [newRange] in the given color [promptRectColor].
///
/// The prompt rectangle will only be requested on non-web iOS applications.
///
/// When set to null, the currently displayed prompt rectangle (if any) will be dismissed. ¿ ¥¿ ¥&   ¿ π5É¿ ∫GÄ˘/// Returns a list of rects that bound the given selection, and the text
/// direction. The text direction is used by the engine to calculate
/// the closest position to a given point.
///
/// See [TextPainter.getBoxesForSelection] for more details. ¿ ∫\¿ ∫k   ¿ ºXãZ¿ ºi  ¿ ºà¿ º†  ¿ ºX¿ ºY¿ «∂Äˇ¿ «ª  ¿ « ¿ «“   ¿ »πíÏ¿ »   ¿ »‡¿ »Ô  ¿ »Ù¿ …  ¿ … ¿ …,  ¿ »π¿ »∫¿ €©Äº¿ €∑  ¿ €Œ¿ €”   ¿ ›7u¿ ›<  ¿ ›P¿ ›_   ¿ ›∞Å»¿ ›µ  ¿ ›Ÿ¿ ›ﬂ   ¿ ﬂ|Å ¿ ﬂÅ  ¿ ﬂ¶¿ ﬂ¨   ¿ ·JÇ¿ ·O  ¿ ·n¿ ·t   ¿ „gÇ5¿ „l  ¿ „å¿ „í   ¿ Â†ÅG¿ Â´  ¿ Â∏
¿ ÂΩ   ¿ ÊÎÅi¿ Êˆ  ¿ Á
¿ Á   ¿ ÈêÄ¸¿ Èï  ¿ È•¿ È∞   ¿ ÍêÅ‚¿ Í°  ¿ Í®¿ Í∑  ¿ Íê¿ Íë¿ ÏvÅ¿ Ïá   ¿ Ïv¿ Ïw¿ ÌÜÅg¿ Ìó   ¿ ÌÜ¿ Ìá¿ ÓÒÅ{¿ Ô  ¿ Ô¿ Ô%  ¿ ÓÒ¿ ÓÚ¿ ÚÉÅ¿ Úä  ¿ Úû¿ Ú§   ¿ ÙûÜÌ¿ ˜&ÇV/// Returns the local coordinates of the endpoints of the given selection.
///
/// If the selection is collapsed (and therefore occupies a single point), the
/// returned list is of length one. Otherwise, the selection is not collapsed
/// and the returned list is of length two. In this case, however, the two
/// points might actually be co-located (e.g., because of a bidirectional
/// selection that contains some text but whose ends meet in the middle).
///
/// See also:
///
///  * [getLocalRectForCaret], which is the equivalent but for
///    a [TextPosition] rather than a [TextSelection]. ¿ ˜?¿ ˜N   ¿ ˚èÉê¿ ¸ÒÅK/// Returns the smallest [Rect], in the local coordinate system, that covers
/// the text within the [TextRange] specified.
///
/// This method is used to calculate the approximate position of the IME bar
/// on iOS.
///
/// Returns null if [TextRange.isValid] is false for the given `range`, or the
/// given `range` is collapsed. ¿ ˝
¿ ˝   ¿ ˇ#Ç!¿ Å>/// Returns the position in the text for the given global coordinate.
///
/// See also:
///
///  * [getLocalRectForCaret], which is the reverse operation, taking
///    a [TextPosition] and returning a [Rect].
///  * [TextPainter.getPositionForOffset], which is the equivalent method
///    for a [TextPainter] object. ¿ ì¿ õ   ¿Hâ¿@Å‹/// Returns the [Rect] in local coordinates for the caret at the given text
/// position.
///
/// See also:
///
///  * [getPositionForPoint], which is the reverse operation, taking
///    an [Offset] in global coordinates and returning a [TextPosition].
///  * [getEndpointsForSelection], which is the equivalent but for
///    a selection rather than a particular text position.
///  * [TextPainter.getOffsetForCaret], the equivalent method for a
///    [TextPainter] object. ¿U¿c   ¿
O~¿
b  ¿
{¿
É  ¿
O¿
P¿
—Äç¿
‰  ¿
˝¿  ¿
—¿
“¿∏Ç.¿º  ¿—¿Ÿ   ¿ÍÖ'¿Ò  ¿¿
   ¿d¿(  ¿B¿J  ¿¿¿}d¿ê  ¿™¿≤  ¿}¿~¿ÂÄµ¿¯  ¿¿&  ¿Â¿Ê¿û6¿Ø  ¿ª¿√  ¿û¿ü¿ÿÅı¿ˆ  ¿¿  ¿!¿2  ¿ÿ¿Ÿ¿‰¿Â¿"Åo¿3  ¿?¿M  ¿S¿d  ¿"¿#¿ÎÅS¿õÄ¢/// Tracks the position of a secondary tap event.
///
/// Should be called before attempting to change the selection based on the
/// position of a secondary tap. ¿≤¿¬   ¿BÅÖ¿iÅ/// If [ignorePointer] is false (the default) then this method is called by
/// the internal gesture recognizer's [TapGestureRecognizer.onTapDown]
/// callback.
///
/// When [ignorePointer] is true, an ancestor widget must respond to tap
/// down events by calling this method. ¿w¿á   ¿ i¿œ  ¿ﬁ¿Ó   ¿7Åe¿UÅ/// If [ignorePointer] is false (the default) then this method is called by
/// the internal gesture recognizer's [TapGestureRecognizer.onTap]
/// callback.
///
/// When [ignorePointer] is true, an ancestor widget must respond to tap
/// events by calling this method.   ¿üD¿§    ¿ÁÅÄ¿!Å/// If [ignorePointer] is false (the default) then this method is called by
/// the internal gesture recognizer's [DoubleTapGestureRecognizer.onDoubleTap]
/// callback.
///
/// When [ignorePointer] is true, an ancestor widget must respond to double
/// tap events by calling this method.   ¿!kÅÄ¿"úÅ/// If [ignorePointer] is false (the default) then this method is called by
/// the internal gesture recognizer's [LongPressGestureRecognizer.onLongPress]
/// callback.
///
/// When [ignorePointer] is true, an ancestor widget must respond to long
/// press events by calling this method.   ¿"ÓP¿"Û    ¿#BÇö¿%]Ç/// Move selection to the location of the last tap down.
///
/// {@template flutter.rendering.RenderEditable.selectPosition}
/// This method is mainly used to translate user inputs in global positions
/// into a [TextSelection]. When used in conjunction with a [EditableText],
/// the selection change is fed back into [TextEditingController.selection].
///
/// If you have a [TextEditingController], it's generally easier to
/// programmatically manipulate its `value` or `selection` directly.
/// {@endtemplate} ¿%n$¿%é   ¿%‡É∏¿&ßÄπ/// Select text between the global positions [from] and [to].
///
/// [from] corresponds to the [TextSelection.baseOffset], and [to] corresponds
/// to the [TextSelection.extentOffset]. ¿&∫¿&À  ¿&–
¿&Ÿ  ¿&‹$¿&¸   ¿*Å¿*¢|/// Select a word around the location of the last tap down.
///
/// {@macro flutter.rendering.RenderEditable.selectPosition} ¿*Ø$¿*œ   ¿+#Ö¿,´År/// Selects the set words of a paragraph that intersect a given range of global positions.
///
/// The set of words selected are not strictly bounded by the range of global positions.
///
/// The first and last endpoints of the selection will always be at the
/// beginning and end of a word respectively.
///
/// {@macro flutter.rendering.RenderEditable.selectPosition} ¿,¿¿,—  ¿,÷
¿,ﬂ  ¿,‚$¿-   ¿06Ç˙¿0ºz/// Move the selection to the beginning or end of a word.
///
/// {@macro flutter.rendering.RenderEditable.selectPosition} ¿0Õ$¿0Ì   ¿34ã9¿3¥X/// Returns a [TextSelection] that encompasses the word at the given
/// [TextPosition]. ¿3ƒ¿3“  ¿3ë¿3í¿?‡ÇD¿?Â  ¿?Û¿?˚  ¿@
!¿@  ¿@¿@¿@"¿@#¿F2y¿F7    ¿GÇã¿GÀÄ†/// On iOS, the cursor is taller than the cursor on Android. The height
/// of the cursor for iOS is approximate and obtained through an eyeball
/// comparison.   ¿JÅÕ¿J"  ¿J7¿J?   ¿KÏÅÿ¿KÒ    ¿NZÇπ¿Nk  ¿N|¿Nå  ¿NZ¿N[¿QÜ–¿Q(   ¿Q¿Q¿Y—â¿Z+P/// Returns the position within the text field closest to the raw cursor offset. ¿ZP¿ZX   ¿b⁄ÑŒ¿cHd/// Sets the screen position of the floating cursor and the text position
/// closest to the cursor. ¿cZ¿cs  ¿cy¿cÅ  ¿cè¿cù  ¿c∞¿cπ   ¿g¨É¿g¬  ¿g—¿gﬂ  ¿gÌ¿h   ¿j√ÑC¿möÇ°/// Starts a [VerticalCaretMovementRun] at the given location in the text, for
/// handling consecutive vertical caret movements.
///
/// This can be used to handle consecutive upward/downward arrow key movements
/// in an input field.
///
/// {@macro flutter.rendering.RenderEditable.verticalArrowKeyMovement}
///
/// The [VerticalCaretMovementRun.isValid] property indicates whether the text
/// layout has changed and the vertical caret run is invalidated.
///
/// The caller should typically discard a [VerticalCaretMovementRun] when
/// its [VerticalCaretMovementRun.isValid] becomes false, or on other
/// occasions where the vertical caret run should be interrupted. ¿mµ¿m√   ¿o
ÉJ¿o  ¿o¿o/  ¿o7¿o?   ¿rXÉ¿r]  ¿rp¿rÅ  ¿râ"¿r£  ¿r≠¿rµ   ¿uzÄ‰¿uã  ¿uü¿u™  ¿u∞¿uπ  ¿uz¿u{¿vbÇ¢¿vs  ¿vy¿vä  ¿ví¿vö  ¿vb¿vc¿y[Å1¿ym  ¿yä¿yò  ¿y[¿y\¿zêÉÑ¿z°  ¿zµ&¿z“  ¿zê¿zë¿~ÄÚ¿~:   ¿~¿~ ¿Ö ¿  ¿Ek ¿E¿_ ¿f¿~  ¿ñ¿ç¿ò¿®¿≠¿Æ¿Äñ¿Ä≠  ¿¥J¿‘   ¿¥¿µ¿Ä/¿Ä   ¿Ä¿Ä¿Ä5+¿ÄJ   ¿Ä5¿Ä6¿Äd/¿Ä    ¿ÄπÅÜ¿ÄΩ  ¿Ä≈¿Ä›   ¿ÇCÅ[¿ÇT  ¿ÇZ¿Çk  ¿Çs¿Ç{  ¿ÇC¿ÇD¿É¢v¿É≥  ¿É∫¿É…  ¿É¢¿É£¿Ña¿Ñ-   ¿Ñ¿Ñ¿ÑÅU¿Ñí  ¿Ñ£¿Ñ≥  ¿ÑÅ¿ÑÇ ¿Ñ⁄äS¿â·Ñ˜/// An interface that paints within a [RenderEditable]'s bounds, above or
/// beneath its text content.
///
/// This painter is typically used for painting auxiliary content that depends
/// on text layout metrics (for instance, for painting carets and text highlight
/// blocks). It can paint independently from its [RenderEditable], allowing it
/// to repaint without triggering a repaint on the entire [RenderEditable] stack
/// when only auxiliary content changes (e.g. a blinking cursor) are present. It
/// will be scheduled to repaint when:
///
///  * It's assigned to a new [RenderEditable] (replacing a prior
///    [RenderEditablePainter]) and the [shouldRepaint] method returns true.
///  * Any of the [RenderEditable]s it is attached to repaints.
///  * The [notifyListeners] method is called, which typically happens when the
///    painter's attributes change.
///
/// See also:
///
///  * [RenderEditable.foregroundPainter], which takes a [RenderEditablePainter]
///    and sets it as the foreground painter of the [RenderEditable].
///  * [RenderEditable.painter], which takes a [RenderEditablePainter]
///    and sets it as the background painter of the [RenderEditable].
///  * [CustomPainter], a similar class which paints within a [RenderCustomPaint].    ¿äÇŒ¿åÆÇ~/// Determines whether repaint is needed when a new [RenderEditablePainter]
/// is provided to a [RenderEditable].
///
/// If the new instance represents different information than the old
/// instance, then the method should return true, otherwise it should return
/// false. When [oldDelegate] is null, this method should always return true
/// unless the new painter initially does not paint anything.
///
/// If the method returns false, then the [paint] call might be optimized
/// away. However, the [paint] method will get called whenever the
/// [RenderEditable]s it attaches to repaint, even if [shouldRepaint] returns
/// false. ¿åº"¿å‘   ¿å‰ÇG¿éÏÅ/// Paints within the bounds of a [RenderEditable].
///
/// The given [Canvas] has the same coordinate space as the [RenderEditable],
/// which may be different from the coordinate space the [RenderEditable]'s
/// [TextPainter] uses, when the text moves inside the [RenderEditable].
///
/// Paint operations performed outside of the region defined by the [canvas]'s
/// origin and the [size] parameter may get clipped, when [RenderEditable]'s
/// [RenderEditable.clipBehavior] is not [Clip.none]. ¿éÚ¿é˙  ¿è	¿è  ¿è¿è    ¿è/ãÔ¿è5  ¿èmÄ≠ ¿èm¿èÇ ¿èã¿èó  ¿èÆ¿è∂  ¿èﬁ¿èÃ¿è‡¿ê	¿è˘¿ê¿ê$¿ê* ¿ê;¿ê@¿êA¿êw¿ê~  ¿ëh¿ës  ¿ìA¿ì ¿ì1¿ì3¿ì4¿ìB¿ìC¿î—>¿î‚ ¿î˘¿î˚¿î¸¿ï	¿ï
¿êG-¿êR    ¿êëÄõ¿êï  ¿ê§¿ê¨   ¿ë05¿ë?    ¿ëàÄ•¿ëå  ¿ëù¿ë©   ¿í1Ä”¿í÷Äà/// Controls how tall the selection highlight boxes are computed to be.
///
/// See [ui.BoxHeightStyle] for details on available styles.   ¿ìLÄØ¿ìP  ¿ìe¿ìx   ¿ìˇÄœ¿î¢Äá/// Controls how wide the selection highlight boxes are computed to be.
///
/// See [ui.BoxWidthStyle] for details on available styles.   ¿ïÄ´¿ï  ¿ï+¿ï=   ¿ï¬É:¿ï”  ¿ïŸ¿ï·  ¿ïË	¿ïÓ  ¿ïÛ¿ñ  ¿ï¬¿ï√¿ô Ç¿ô  ¿ô"¿ô7  ¿ô ¿ô ¿õ ê°¿õ&  ¿õV ¿õV¿õc   	¿õí¿õó ¿õ¶¿ú¸¿ù ¿ù¿ù ¿ù* ¿ù7¿ù<¿ù=¿ùB.¿ùS ¿ùi¿ùn¿ùo¿ùù¿ù§  ¿ûx¿ûÄ  ¿üN"¿üU ¿üe¿ük¿ül¿†B¿†I  ¿°w¿°}  ¿õj%¿õs    ¿õÆÄÜ¿õ≤  ¿õæ
¿õƒ   ¿ùu%¿ùÄ    ¿ù≥Äî¿ù∑  ¿ù¬¿ù    ¿ûK*¿ûW    ¿ûëÄç¿ûï  ¿û¢¿û´   ¿ü")¿ü-    ¿ütÄå¿üx  ¿üÖ¿üç   ¿†;¿†    ¿†cÄŸ¿†g  ¿†}¿†Ö   ¿°@4¿°J    ¿°îÄù¿°ò  ¿°´¿°≤   ¿¢5Ç¿¢:  ¿¢M¿¢U  ¿¢\¿¢l  ¿¢{¿¢Ç  ¿¢ç¿¢õ   ¿§WÑ‰¿§h  ¿§n¿§v  ¿§}	¿§É  ¿§à¿§ò  ¿§W¿§X¿©?ÇÄ¿©P  ¿©^"¿©v  ¿©?¿©@ ¿´√ÖA¿´…  ¿¨< ¿¨¿¨* ¿¨-¿¨<   ¿¨K*¿¨m   ¿¨zÄ†¿¨ã  ¿¨ó¿¨•  ¿¨z¿¨{¿≠Ä¶¿≠/  ¿≠>¿≠L  ¿≠¿≠¿≠»Ä ¿≠Ÿ  ¿≠ﬂ¿≠Á  ¿≠Ó	¿≠Ù  ¿≠˘¿Æ	  ¿≠»¿≠…¿ÆñÇl¿Æß  ¿Æµ"¿ÆÕ  ¿Æñ¿Æó          ÇƒÇ— ÇﬁÇÌ&Ç˙ ÉÉ°dÉ≤ É—É€É‹ÉÂÑÉÉÊÉÚÉˇÉ˜ÑÑ?:ÑL ÑeÑkÑlÑtÑxÑu  ãõ <ÄÜÄ§Ä•ÄøÄ€ÅBÅCÅpÅöÅ¬ÅÎÇÇÇ'ÇCÇXÇuÇãÇ§Ç√ÇƒÇÌÉÉ ÉnÉ°ÑÑÑ?Ñ{Ñ|Ñ≈ÖÖ-Ö8ÖSÖèÖ«Ö»ÜÜSÜiÜjÜ•Ü«Ü»Ü‘Ü˜áá,á2á^áráxáüáøáËáÏáÌá˘àà(àFàcàÅàûàØà»àŒà“à”àﬂâââââfâ≤â âŒääeä≤ããRãüãÀãœåålåºççYçwç{ç¢ç¨ç¥çæéé[é™é˙èGèïè¶è™è¯êGêîê∫êÕê—ëë\ë¨ë˝í9í=ííí¨í∞í˛ìOìúì∏ì˚îî-îDîcîzîìîòîôî≤î∆îÎîÏïï9ï:ïRïîïöïËï˛ññTñêñ•ñ∫ñŒñ‘ó1óÅóΩóÒò	òò$ò(ò)òîòïò‡òıôôiôãô®ôÆô÷ô◊ö2öìõõ.õCõGõHõTõqõÜõßõ´õ¨õ∏õÃõ·úú(ú.úçú§ú«úÚùùùù1ù7ùoùáùúùπùÕù”û2ûIûlûóû®û¨û≠ûÔüüüTüZüíü∑üË††?†Z†k†u†}†ä†»†Á†¯°°
°°<°@°B°C°ê°π°Ω¢¢W¢Ä¢Ñ¢”£"£r£¿§§&§*§z§À••€¶-¶3¶q¶w¶∆¶Ãßßhß´ß±ß˙®®®4®^®â®°®√®Ë®¸©)©T©k©~©ò©¥©œ©‡™™p™¨™≤™‘´´$´H´h´É´û´ ¨¨*¨H¨\¨z¨î¨Æ¨’¨¸≠≠e≠®≠ŒÆÆ:ÆVÆ}Æ¶Æ Æ¯ØØHØyØàØ’∞	∞∞"∞_∞§∞Æ∞Ω±±m±w±±±‘≤≤3≤H≤g≤é≤˘≥≥?≥`≥ë≥∫≥ƒ¥¥ ¥=¥X¥w¥ê¥≥¥ÿµ	µJµwµ¨µ›∂∂1∂N∂m∂í∂π∂∂Ò∑(∑\∑ü∑‡∑·∏$∏i∏j∏ñ∏≈∏Ùπ5π6πgπÑπöπûπüπ∫πÒ∫(∫)∫5∫H∫p∫î∫º∫‡ªª2ªYªÇª©ª’ªˆºº/ºDºHºIºéºﬁΩΩLΩqΩÜΩêΩëΩºæ3æ]æïæ¢æ›æ„øøøøNøuø{ø«¿ @¿ @8¿ @~¿ @´¿ @Ë¿ A¿ A"¿ A(¿ AR¿ AV¿ AW¿ Aí¿ A‚¿ A˚¿ Be¿ Bf¿ Bë¿ C¿ C2¿ Cj¿ Cw¿ C≤¿ C∏¿ C”¿ C◊¿ Cÿ¿ D ¿ DG¿ DM¿ Dô¿ D‰¿ Dˇ¿ E1¿ ET¿ Eá¿ E©¿ E∑¿ EΩ¿ E›¿ E·¿ E‚¿ E˜¿ FA¿ F}¿ F~¿ Fú¿ FÁ¿ G=¿ G>¿ GÀ¿ H¿ HW¿ HÉ¿ H¨¿ H›¿ HÊ¿ HÌ¿ HÒ¿ HÚ¿ Ia¿ Iú¿ IŸ¿ J¿ J.¿ JT¿ Jo¿ J°¿ J™¿ J±¿ Jµ¿ J∂¿ JŸ¿ J¸¿ J˝¿ K>¿ Kc¿ Ko¿ K®¿ Kﬂ¿ LÅ¿ Là¿ Lå¿ Lç¿ Lÿ¿ LË¿ LÓ¿ M;¿ MÜ¿ M∂¿ Mº¿ N¿ NK¿ NQ¿ NÑ¿ Nö¿ Nõ¿ N≈¿ O¿ OL¿ OÄ¿ Oé¿ Oî¿ O¡¿ O‹¿ O‡¿ O·¿ P¿ P`¿ Pç¿ PΩ¿ PÀ¿ P—¿ P˙¿ Q¿ Q¿ Q¿ QG¿ QM¿ Qó¿ QÀ¿ QÁ¿ R¿ R3¿ RA¿ RG¿ Rf¿ RÅ¿ RÖ¿ RÜ¿ R»¿ RŒ¿ R˜¿ S/¿ SM¿ Sv¿ Sû¿ S¨¿ S≤¿ S‹¿ S˝¿ T¿ T¿ T¿ T\¿ TÑ¿ Tô¿ Tπ¿ T⁄¿ TË¿ TÓ¿ U¿ U+¿ UK¿ UO¿ UP¿ Uö¿ U†¿ Uﬂ¿ V7¿ Vm¿ V°¿ V•¿ V¶¿ V¿ Vˆ¿ W4¿ Wâ¿ WΩ¿ W¿ WÙ¿ Wı¿ XC¿ XÉ¿ Xâ¿ X⁄¿ X˝¿ Y,¿ Y-¿ YÑ¿ Yä¿ Y÷¿ Z&¿ Zq¿ ZÑ¿ Zä¿ Z◊¿ ["¿ [?¿ [í¿ [Â¿ [Ê¿ \;¿ \A¿ \ç¿ \÷¿ ]%¿ ]?¿ ]E¿ ]í¿ ]›¿ ]˙¿ ^I¿ ^ö¿ ^õ¿ ^€¿ _3¿ _ç¿ _‚¿ `'¿ `+¿ `,¿ `J¿ `K¿ `ç¿ `ô¿ `“¿ `Û¿ a6¿ aÉ¿ aö¿ aÂ¿ aÎ¿ b5¿ b9¿ b:¿ bv¿ bÇ¿ b∑¿ bÍ¿ bÓ¿ bÔ¿ c6¿ cB¿ c¿ c…¿ d¿ dS¿ dú¿ d⁄¿ e¿ e¿ e¿ ee¿ eq¿ eÆ¿ e¯¿ fC¿ fÇ¿ fÀ¿ g¿ gG¿ gK¿ gL¿ gh¿ gi¿ g¨¿ gÀ¿ gÍ¿ h¿ hF¿ hT¿ hZ¿ hç¿ hé¿ hÕ¿ i¿ i1¿ i8¿ iÅ¿ iœ¿ j¿ jW¿ j®¿ jı¿ k¿ kS¿ ku¿ k•¿ k¶¿ k‰¿ l/¿ lF¿ lM¿ l¿ l°¿ lœ¿ l”¿ l‘¿ m*¿ mq¿ mu¿ mv¿ m«¿ mË¿ n6¿ nÖ¿ n“¿ o¿ oo¿ oß¿ o∞¿ p¿ pR¿ pÄ¿ pƒ¿ q¿ q¿ q¿ q5¿ qÜ¿ qì¿ qö¿ qû¿ qü¿ q´¿ q≈¿ q·¿ r)¿ rX¿ rá¿ rã¿ rå¿ r‹¿ rˆ¿ r¸¿ s¿ s*¿ sI¿ sm¿ së¿ s®¿ s¨¿ s≠¿ sπ¿ sŸ¿ s˚¿ t¿ tC¿ tg¿ tk¿ tl¿ t≠¿ t≥¿ tÚ¿ u ¿ uk¿ uù¿ uû¿ uﬁ¿ u‰¿ v*¿ vW¿ vy¿ v•¿ vÏ¿ w¿ w2¿ w@¿ wF¿ wh¿ wá¿ w™¿ w‘¿ w¸¿ x¿ x7¿ x;¿ x<¿ xo¿ x§¿ x«¿ xÚ¿ y ¿ y¿ y*¿ yE¿ yI¿ yJ¿ yp¿ yv¿ yπ¿ y˙¿ z ¿ zN¿ zù¿ zÎ¿ {4¿ {Ñ¿ {î¿ {”¿ |¿ |b¿ |§¿ |œ¿ |˛¿ }¿ }¿ }:¿ }U¿ }u¿ }y¿ }z¿ }À¿ }◊¿ }›¿ ~2¿ ~Ä¿ ~–¿ ~¯¿ ~˛¿ J¿ Z¿ á¿ •¿ Õ¿ €¿ ·¿ Ä¿ Ä¿ Ä!¿ Ä"¿ Äj¿ Äå¿ Ä≈¿ ÄÎ¿ Å¿ Å%¿ Å+¿ ÅP¿ Åk¿ Åo¿ Åp¿ Å°¿ Å◊¿ Å˘¿ Ç¿ Ç#¿ Ç$¿ Çn¿ Çì¿ Çô¿ Çﬁ¿ Ç‰¿ É!¿ Él¿ Éò¿ É…¿ ÉÕ¿ ÉŒ¿ ÉÒ¿ Ñ&¿ ÑI¿ Ñw¿ Ñó¿ Ñ•¿ Ñ´¿ Ñø¿ ÑÚ¿ Ñ¯¿ Ö¿ Ö%¿ Ö>¿ Ön¿ Öt¿ Öx¿ Öy¿ Öî¿ Ö∆¿ Ö ¿ ÖÀ¿ Ö¸¿ Ü¿ Ü8¿ ÜU¿ Üs¿ ÜÅ¿ Üá¿ Üû¿ Üæ¿ Ü¬¿ Ü√¿ á¿ á<¿ áW¿ áu¿ áî¿ á¢¿ á®¿ á¿¿ á◊¿ á€¿ á‹¿ à¿ à0¿ àJ¿ àg¿ àÖ¿ àì¿ àô¿ à∞¿ à–¿ à‘¿ à’¿ â$¿ â*¿ ât¿ âê¿ âñ¿ â◊¿ â›¿ ä+¿ ä{¿ ä∏¿ ä⁄¿ äÏ¿ ã?¿ ã\¿ ãÑ¿ ã°¿ ãØ¿ ãµ¿ ãÃ¿ ãÕ¿ å¿ åm¿ åó¿ å ¿ åÂ¿ åÈ¿ åÍ¿ ç¿ çA¿ çS¿ ç¶¿ ç√¿ çÎ¿ é¿ é¿ é¿ é3¿ éN¿ éR¿ éS¿ éá¿ éß¿ é∏¿ é‘¿ é¿ é˛¿ è¿ è¿ è5¿ è9¿ è:¿ èn¿ èØ¿ è‘¿ ê¿ ê¿ ê¿ êM¿ êi¿ êo¿ êß¿ ê≠¿ ê˛¿ ë¿ ë,¿ ëK¿ ë∏¿ ëÚ¿ ëˆ¿ í4¿ íC¿ íb¿ íœ¿ ì	¿ ì¿ ì3¿ ì^¿ ìb¿ ìc¿ ìö¿ ì“¿ ì˜¿ î#¿ î1¿ î7¿ î\¿ îw¿ î{¿ î|¿ îØ¿ îµ¿ î˜¿ î˝¿ ïA¿ ïl¿ ïö¿ ï∑¿ ïﬂ¿ ï˛¿ ñ¿ ñ¿ ñ*¿ ñZ¿ ñp¿ ñê¿ ñî¿ ñï¿ ñÀ¿ ñ—¿ ó!¿ óm¿ óµ¿ ó›¿ ó˜¿ ò¿ ò8¿ òF¿ òL¿ ò`¿ òé¿ òî¿ ò©¿ òΩ¿ òË¿ òÓ¿ ô¿ ô	¿ ô
¿ ô.¿ ôX¿ ôu¿ ôó¿ ô∏¿ ô∆¿ ôÃ¿ ôÊ¿ ô˝¿ ö¿ ö¿ ö%¿ ö+¿ öà¿ öé¿ öÈ¿ õ8¿ õ§¿ õÁ¿ ú ¿ ú$¿ úF¿ úT¿ úZ¿ úu¿ úå¿ úê¿ úë¿ úŸ¿ ù$¿ ù*¿ ùv¿ ùû¿ ù≥¿ ùÈ¿ û¿ û,¿ ûR¿ û`¿ ûf¿ ûÖ¿ û≈¿ ûÚ¿ ü¿ ü[¿ üç¿ ü´¿ üØ¿ ü∞¿ ü¿ †>¿ †D¿ †à¿ †—¿ °"¿ °j¿ °¿ °∏¿ °€¿ ¢¿ ¢¿ ¢¿ ¢?¿ ¢E¿ ¢v¿ ¢∞¿ ¢‘¿ ¢¸¿ £ ¿ £¿ £2¿ £8¿ £É¿ £Ÿ¿ §¿ §;¿ §i¿ §ì¿ §°¿ §ß¿ § ¿ §‡¿ §‰¿ §Â¿ •¿ •¿ •e¿ •π¿ •Ù¿ ¶¿ ¶A¿ ¶i¿ ¶w¿ ¶}¿ ¶û¿ ¶¥¿ ¶∏¿ ¶π¿ ß¿ ß&¿ ß,¿ ßx¿ ß†¿ ß°¿ ß√¿ ßÙ¿ ßı¿ ®.¿ ®4¿ ®x¿ ®ª¿ ®„¿ ©!¿ ©d¿ ©ô¿ ©ü¿ ©„¿ ™¿ ™T¿ ™v¿ ™Ω¿ ™‚¿ ´¿ ´B¿ ´P¿ ´V¿ ´¿ ´ö¿ ´∫¿ ´æ¿ ´ø¿ ¨¿ ¨<¿ ¨B¿ ¨Ü¿ ¨…¿ ¨Ò¿ ≠/¿ ≠r¿ ≠ß¿ ≠≠¿ ≠˝¿ Æ!¿ Æ'¿ Æz¿ Æ√¿ Æ…¿ Ø¿ ØR¿ Øô¿ Ø◊¿ Øı¿ ∞,¿ ∞0¿ ∞1¿ ∞e¿ ∞k¿ ∞∫¿ ±¿ ±d¿ ±ß¿ ±Ù¿ ≤¿ ≤Y¿ ≤]¿ ≤^¿ ≤ª¿ ≤˜¿ ≤˝¿ ≥L¿ ≥R¿ ≥Ø¿ ¥ ¿ ¥1¿ ¥o¿ ¥s¿ ¥t¿ ¥¨¿ ¥≤¿ ¥˚¿ µC¿ µc¿ µï¿ µ¥¿ µµ¿ µÏ¿ µÌ¿ ∂#¿ ∂)¿ ∂L¿ ∂v¿ ∂ú¿ ∂Ω¿ ∂ﬂ¿ ∂¸¿ ∑¿ ∑6¿ ∑<¿ ∑@¿ ∑A¿ ∑Ç¿ ∑Ω¿ ∑ı¿ ∑ˆ¿ ∏B¿ ∏ë¿ ∏–¿ ∏˙¿ π2¿ π3¿ π~¿ π≈¿ πÚ¿ π¯¿ ∫7¿ ∫w¿ ∫ö¿ ∫“¿ ª¿ ªP¿ ªâ¿ ªƒ¿ º ¿ º,¿ ºQ¿ ºU¿ ºV¿ ºb¿ º©¿ º€¿ Ω¿ Ωm¿ Ωª¿ Ω⁄¿ æ¿ ær¿ æ´¿ æ”¿ ø$¿ øJ¿ øW¿ ø{¿ ø†¿ øÆ¿ ø¥¿ øﬁ¿ ø˜¿ ¿Q¿ ¿`¿ ¿î¿ ¿¨¿ ¿Ú¿ ¡?¿ ¡Ä¿ ¡œ¿ ¬¿ ¬,¿ ¬N¿ ¬∂¿ ¬«¿ ¬÷¿ ¬‚¿ √¿ √#¿ √-¿ √ã¿ √ì¿ √ô¿ √§¿ √÷¿ √˜¿ ƒ¿ ƒ@¿ ƒ]¿ ƒx¿ ƒó¿ ƒò¿ ƒ¿¿ ƒÛ¿ ƒ˘¿ ƒ˙¿ ≈¿ ≈D¿ ≈J¿ ≈K¿ ≈à¿ ≈∞¿ ≈˚¿ ∆
¿ ∆S¿ ∆ß¿ ∆Ø¿ ∆˘¿ «¿ «O¿ «°¿ «©¿ «Ø¿ «≥¿ «¥¿ «Ÿ¿ »¿ »'¿ »;¿ »|¿ »Ö¿ »´¿ »≤¿ »∂¿ »∑¿ »√¿ …7¿ …y¿ …∏¿ …Ï¿  ¿  ¿  /¿  M¿  e¿  à¿  È¿ À6¿ Àé¿ À√¿ Àﬁ¿ Ã¿ Ã¿ Ã8¿ Ã9¿ ÃY¿ Ãß¿ ÃÓ¿ Õ¿ Õã¿ Õ’¿ Œ'¿ ŒT¿ Œz¿ Œï¿ Œü¿ Œ√¿ Œ‚¿ ŒÒ¿ œ2¿ œá¿ œ§¿ œ∏¿ œ¬¿ œÏ¿ –¿ –X¿ –ë¿ –¡¿ –À¿ —¿ —R¿ —p¿ —î¿ —∑¿ —Ì¿ “%¿ “0¿ “~¿ “œ¿ “Ù¿ ”¿ ”I¿ ”t¿ ”†¿ ”´¿ ”˘¿ ‘)¿ ‘V¿ ‘À¿ ’
¿ ’,¿ ’`¿ ’å¿ ’¬¿ ’Ì¿ ’˚¿ ÷<¿ ÷n¿ ÷™¿ ÷’¿ ÷„¿ ◊$¿ ◊V¿ ◊ò¿ ◊¶¿ ◊π¿ ÿ¿ ÿ¿ ÿ¿ ÿI¿ ÿú¿ ÿÍ¿ ÿÙ¿ Ÿ¿ ŸU¿ Ÿ•¿ Ÿ∂¿ Ÿ„¿ ⁄¿ ⁄¿ ⁄T¿ ⁄a¿ ⁄k¿ ⁄|¿ ⁄™¿ ⁄ ¿ ⁄˚¿ €¿ €&¿ €,¿ €S¿ €¢¿ €¶¿ €ß¿ €Ÿ¿ €È¿ ‹$¿ ‹[¿ ‹b¿ ‹f¿ ‹g¿ ‹Æ¿ ‹Ó¿ ›4¿ ›5¿ ›k¿ ›©¿ ›≠¿ ›Æ¿ ›Ò¿ ﬁ¿ ﬁd¿ ﬁÑ¿ ﬁí¿ ﬁò¿ ﬁÏ¿ ﬁˇ¿ ﬂH¿ ﬂn¿ ﬂu¿ ﬂy¿ ﬂz¿ ﬂæ¿ ﬂ›¿ ‡2¿ ‡R¿ ‡`¿ ‡f¿ ‡∫¿ ‡Õ¿ ·¿ ·<¿ ·C¿ ·G¿ ·H¿ ·Ü¿ ·•¿ ·¯¿ ‚7¿ ‚S¿ ‚a¿ ‚g¿ ‚º¿ ‚œ¿ ‚‰¿ „¿ „*¿ „3¿ „Y¿ „`¿ „d¿ „e¿ „§¿ „√¿ ‰¿ ‰c¿ ‰É¿ ‰ë¿ ‰ó¿ ‰Ò¿ Â¿ Â¿ Â9¿ Âc¿ Âl¿ Âí¿ Âô¿ Âù¿ Âû¿ Â∆¿ ÂŸ¿ Ê3¿ Êd¿ Êy¿ ÊÅ¿ Ê¶¿ Êº¿ Êƒ¿ Êﬁ¿ Ê‰¿ ÊË¿ ÊÈ¿ Á¿ Á/¿ Áâ¿ Á∫¿ Áœ¿ Á◊¿ Á¸¿ Ë¿ Ë¿ Ë:¿ Ë@¿ ËQ¿ ËU¿ ËV¿ Ë†¿ Ë±¿ Ë∂¿ Ë˙¿ ÈL¿ Èé¿ È∏¿ ÈÏ¿ Í¿ ÍT¿ Íj¿ Ír¿ Íx¿ Íâ¿ Íç¿ Íé¿ Íö¿ Íø¿ Íÿ¿ Î¿ Î0¿ Î1¿ Îc¿ ÎÜ¿ Î¢¿ Ï¿ Ï*¿ ÏA¿ Ïo¿ Ïs¿ Ït¿ ÏÄ¿ Ïí¿ Ï¶¿ Ï¿¿ ÏÏ¿ Ì¿ Ì1¿ ÌX¿ Ì¿ ÌÉ¿ ÌÑ¿ Ìê¿ Ì´¿ ÌÓ¿ Ó1¿ ÓT¿ Óy¿ Ó¿ Ó¢¿ Ó«¿ ÓÕ¿ ÓÍ¿ ÓÓ¿ ÓÔ¿ Ó˚¿ Ô/¿ Ôr¿ Ôµ¿ Ôÿ¿ Ô¯¿ Ô˛¿ !¿ A¿ G¿ i¿ m¿ n¿ ò¿ ô¿ Â¿ Ê¿ Ò¿ Ò¿ Ò;¿ Òg¿ ÒÅ¿ Ò≠¿ Ò≥¿ Ò∑¿ Ò∏¿ Ò◊¿ ÒÏ¿ Ú	¿ Ú%¿ Ú@¿ ÚZ¿ Úv¿ Ú|¿ ÚÄ¿ ÚÅ¿ Ú≤¿ Ú«¿ Ú‰¿ Û ¿ Û>¿ ÛX¿ Ûò¿ Ûû¿ Û¢¿ Û£¿ Ûˆ¿ ÙE¿ Ùõ¿ Ùú¿ ÙÈ¿ ÙÔ¿ ı@¿ ıê¿ ı›¿ ˆ)¿ ˆu¿ ˆ{¿ ˆã¿ ˆë¿ ˆ“¿ ˜¿ ˜Z¿ ˜}¿ ˜~¿ ˜´¿ ˜¨¿ ˜Á¿ ¯x¿ ¯ë¿ ¯€¿ ˘?¿ ˘ò¿ ˘‹¿ ˘È¿ ˙j¿ ˙Â¿ ˚¿ ˚B¿ ˚y¿ ˚Ç¿ ˚à¿ ˚å¿ ˚ç¿ ˚‹¿ ¸¿ ¸¿ ¸b¿ ¸p¿ ¸v¿ ¸«¿ ¸È¿ ˝¿ ˝L¿ ˝_¿ ˝e¿ ˝à¿ ˝â¿ ˝œ¿ ˛¿ ˛B¿ ˛l¿ ˛s¿ ˛t¿ ˛ã¿ ˛ó¿ ˇ ¿ ˇ¿ ˇ ¿ ˇ!¿ ˇi¿ ˇo¿ ˇ¿ ˇÖ¿ ˇÕ¿ ˇˇ¿ K¿ p¿ ¨¿ œ¿ Ù¿A¿E¿F¿î¿§¿™¿∫¿¿¿¿R¿ó¿‘¿¿9¿s¿ñ¿«¿%¿l¿»¿…¿0¿p¿q¿û¿√¿‚¿¿å¿Õ¿¿'¿A¿k¿Ü¿¢¿≠¿–¿Û¿¿7¿è¿·¿	$¿	G¿	a¿	ê¿	´¿	¬¿	Õ¿	”¿	‘¿
¿
H¿
L¿
M¿
Y¿
å¿
ü¿
 ¿
Œ¿
œ¿
€¿¿!¿[¿_¿`¿æ¿Ù¿:¿;¿Y¿®¿∂¿‡¿¿3¿M¿S¿f¿°¿…¿‰¿ ¿¿_¿z¿ï¿´¿≥¿π¿„¿Á¿Ë¿¿;¿p¿¥¿µ¿—¿ı¿¿r¿Å¿ß¿÷¿ﬁ¿¿¿¿c¿≤¿¬¿€¿*¿x¿∏¿‚¿¿(¿.¿N¿f¿l¿é¿À¿¿¿¿¿R¿v¿z¿{¿á¿∫¿ﬁ¿‚¿„¿Ô¿1¿T¿ó¿õ¿ú¿®¿’¿÷¿‚¿Ô¿?¿}¿±¿¿8¿`¿u¿É¿ƒ¿ ¿Œ¿œ¿Ò¿¿ ¿,¿l¿ò¿Ω¿ﬁ¿ﬂ¿˚¿:¿Z¿Ä¿à¿é¿í¿ì¿≥¿‹¿›¿-¿y¿Ü¿õ¿Ë¿È¿¿#¿q¿î¿Ã¿ˇ¿;¿?¿@¿é¿◊¿Á¿Ì¿8¿b¿ë¿ƒ¿»¿¯¿¿0¿4¿5¿É¿»¿ÿ¿ﬁ¿)¿N¿c¿ô¿ù¿≥¿œ¿‡¿‰¿Â¿ 3¿ Ñ¿ î¿ ö¿ Ë¿!¿!,¿!d¿!h¿!i¿!∑¿"¿"¿"¿"j¿"ï¿"∞¿"Ë¿"Ï¿#¿#$¿#;¿#?¿#@¿#{¿#Å¿#√¿$¿$_¿$Æ¿$¥¿$˙¿%A¿%V¿%ò¿%Ÿ¿%›¿%ﬁ¿&¿&$¿&u¿&†¿'¿'W¿'ƒ¿'Ù¿(¿(N¿(O¿(¿(«¿(»¿(˛¿)¿)>¿)e¿)l¿)m¿)ï¿)ô¿)ö¿)’¿*¿*¿*V¿*\¿*õ¿*Ÿ¿+¿+ ¿+!¿+~¿+Ñ¿+ﬂ¿+Â¿,/¿,_¿,e¿,§¿-¿-/¿-ú¿-ﬁ¿.c¿.…¿/¿/¿/"¿/7¿/ì¿/Ì¿0¿0¿0(¿0/¿03¿04¿0p¿0v¿0µ¿0˜¿1¿1D¿1æ¿2¿2&¿2O¿2ë¿2û¿2ˇ¿3¿3-¿31¿32¿3y¿3è¿3§¿3›¿3˛¿4N¿4}¿4¶¿4ˆ¿4ˇ¿5¿5T¿5k¿5∂¿5º¿5ˇ¿6¿6?¿6a¿6¢¿6—¿6ı¿7 ¿7&¿7H¿7I¿7ò¿7Ê¿8¿8&¿8u¿8∆¿8€¿8˜¿9K¿9è¿9∂¿9◊¿9˝¿:?¿:c¿:™¿:∏¿:⁄¿;¿;/¿;>¿;J¿;j¿;ñ¿;¡¿;Œ¿;Û¿<¿<5¿<Y¿<Ü¿<π¿< ¿<ÿ¿<˙¿=(¿=U¿=d¿=p¿=ï¿=∏¿=€¿> ¿>¿>¿>¿> ¿>j¿>n¿>o¿>ª¿>¿¿?¿?_¿?¶¿?›¿?ﬁ¿@1¿@~¿@ ¿A¿Aq¿Aä¿A™¿A ¿A—¿A˘¿B!¿B%¿B&¿Bw¿BÜ¿Bã¿B‹¿C%¿Co¿Cø¿Cœ¿C‘¿D%¿Do¿DΩ¿DÒ¿E+¿E0¿E|¿EÃ¿F¿F0¿FW¿F®¿F¨¿F≠¿F ¿FÀ¿G¿G¿Gg¿G≤¿Gƒ¿GÊ¿H¿H*¿HK¿Hù¿H¿¿H„¿I¿I'¿I°¿Iß¿I´¿I¨¿I˙¿J¿JN¿Jã¿J≈¿Jÿ¿J˜¿KM¿KZ¿Ky¿Kœ¿K‹¿KÂ¿KÈ¿KÍ¿L¿LM¿Lí¿Læ¿LÔ¿M'¿MN¿Mx¿M®¿M±¿M¡¿M≈¿M∆¿MÎ¿NW¿NX¿Nd¿Nö¿Nº¿NÊ¿O8¿OB¿OZ¿O`¿OŸ¿P*¿Pr¿P≥¿Q¿Q¿Q¿Q!¿Q:¿Qs¿Q€¿R¿RA¿RÉ¿R°¿RÔ¿S>¿Sá¿S◊¿T¿T\¿Tç¿T»¿T¸¿UD¿UÖ¿U–¿V¿Vw¿Vx¿V…¿V ¿W¿W<¿W=¿Wv¿W™¿W‰¿WË¿WÈ¿X9¿Xã¿Xœ¿X˜¿Y¿Y5¿YY¿Y{¿Y†¿YŒ¿Yœ¿Z"¿Zj¿Zí¿ZŒ¿[;¿[y¿[Õ¿[Œ¿[Ò¿\+¿\1¿\2¿\Ü¿\Õ¿]¿]W¿]y¿]∑¿^¿^/¿^5¿^j¿^Ω¿^ﬁ¿_¿_s¿_ó¿_ù¿_û¿_„¿`(¿`z¿`Ã¿a¿a¿aE¿af¿a¶¿a»¿aŒ¿b¿b%¿bf¿bâ¿bè¿bê¿b∑¿b∏¿b”¿b◊¿bÿ¿c$¿cA¿cÃ¿c˛¿d#¿dA¿de¿dÜ¿d©¿dÕ¿d”¿e¿eJ¿eg¿eù¿eÊ¿f%¿f¿fß¿g¿g¿gN¿gT¿g•¿g©¿g™¿h¿hR¿hÜ¿h⁄¿i¿i@¿iß¿iØ¿iµ¿j
¿j,¿jS¿jµ¿jº¿j¿¿j¡¿k¿kG¿kM¿kû¿k∑¿kΩ¿l¿l¿l]¿l°¿lß¿lÛ¿m;¿m¿m”¿n¿nu¿nú¿n®¿n∑¿nÃ¿n„¿n¸¿o¿o¿o¿oH¿oi¿o£¿o§¿o◊¿p¿p¿p¿pX¿pò¿pô¿p·¿q+¿qN¿qÅ¿qá¿qà¿q¡¿qÙ¿qı¿r¿rK¿rQ¿rU¿rV¿ræ¿rÍ¿s¿s6¿sj¿sq¿sà¿s‘¿sÁ¿s˙¿t¿t"¿tN¿tg¿tö¿tŒ¿t◊¿t¿u:¿uO¿ud¿um¿us¿uw¿ux¿uÑ¿u≈¿v¿v#¿v)¿v[¿v_¿v`¿vl¿v£¿v∆¿w¿w4¿wN¿w^¿wz¿wí¿w∂¿wﬁ¿wÁ¿wÙ¿x¿x>¿xD¿xy¿x´¿x˚¿y¿y¿y¿yX¿yY¿ye¿y†¿yº¿y“¿yÁ¿z¿z¿zD¿zÉ¿zâ¿zç¿zé¿zö¿zﬂ¿{
¿{I¿{°¿{ÿ¿|¿|g¿|¨¿}¿}v¿}∆¿~¿~¿~¿~"¿~T¿~r¿~ä¿~´¿~√¿~ı¿ ¿¿¿¿¿C¿b¿Ü¿°¿±¿≤¿æ¿ˇ¿Ä ¿Ä¿Ä2¿Ä3¿Ä?¿Äa¿Äb¿Äî¿Ä∑¿ÄË¿Å¿Å¿Å¿Å¿ÅS¿Ål¿Åm¿Å§¿Åº¿Å¬¿Å√¿Å◊¿Ç	¿Ç6¿Ç<¿Ç@¿ÇA¿ÇM¿ÇÑ¿Ç¥¿Ç–¿É	¿É6¿Éb¿Éï¿Éõ¿Éü¿É†¿É¨¿É—¿ÉÍ¿Ñ¿Ñ¿Ñ¿Ñ&¿Ñ8¿Ñf¿Ñz¿Ñ~¿Ñ¿Ñã¿Ñ◊¿ÑŸ¿Ñ⁄¿Ö$¿ÖB¿ÖF¿Öï¿ÖÊ¿Ü5¿ÜÜ¿Ü◊¿Ü˛¿á¿áD¿áë¿á—¿à!¿àE¿àI¿àW¿à[¿à¨¿àÚ¿â9¿â¿â“¿ä¿ä^¿äá¿äç¿ä’¿ã$¿ãs¿ã≥¿ãπ¿å¿åJ¿åö¿åß¿å·¿å‚¿ç¿ç¿çn¿çº¿é¿é¿é^¿é≠¿éÂ¿è,¿è.¿è/¿èk¿èÖ¿è®¿è≈¿èÚ¿ê¿ê¿êD¿êE¿êu¿êè¿ê∑¿êﬁ¿êÏ¿êÚ¿ë¿ë)¿ë-¿ë.¿ëf¿ëÜ¿ë¥¿ë›¿ëÎ¿ëÒ¿í¿í*¿í.¿í/¿íy¿í¿íæ¿ì¿ìJ¿ìÄ¿ì™¿ì∏¿ìæ¿ì·¿ì¯¿ì¸¿ì˝¿îG¿îM¿îã¿îœ¿ï¿ïE¿ïn¿ï|¿ïÇ¿ï§¿ïª¿ïø¿ï¿¿ïÃ¿ñ¿ñC¿ñl¿ñ´¿ñπ¿ñø¿ñ¿¿ñ‚¿ó#¿óe¿ó¨¿óÿ¿ò¿ò	¿ò
¿ò1¿òH¿òÄ¿ò“¿òÍ¿òÛ¿ò˘¿ò˝¿ò˛¿ô
¿ôE¿ôm¿ôÅ¿ôá¿ô¶¿ôÁ¿ôÌ¿ö¿öV¿öí¿ö÷¿õ¿õ¿õ¿õ ¿õT¿õg¿õh¿õê¿õ¨¿õÃ¿õÏ¿õ˙¿ú ¿ú¿ú1¿ú5¿ú6¿úu¿úç¿úí¿ú›¿ú˙¿ù¿ù¿ù@¿ùr¿ùs¿ùõ¿ù±¿ù“¿ùˇ¿û¿û¿û¿û-¿ûD¿ûH¿ûI¿ûv¿ûè¿û≥¿û’¿û„¿ûÈ¿ü¿ü¿ü¿ü ¿üL¿ür¿üï¿ü∑¿ü≈¿üÀ¿üÊ¿ü˝¿†¿†¿†@¿†a¿†ç¿†≈¿†”¿†Ÿ¿†⁄¿†˛¿°¿°3¿°9¿°=¿°>¿°u¿°í¿°∫¿°‚¿°¿°ˆ¿¢¿¢.¿¢2¿¢3¿¢™¿¢˚¿£¿£=¿£b¿£~¿£±¿£¿¿§¿§B¿§J¿§P¿§T¿§U¿§a¿§©¿§Ì¿§Ó¿•-¿•.¿•¨¿•„¿•Ò¿•˜¿•¯¿¶6¿¶7¿¶p¿¶à¿¶¡¿ß¿ß ¿ßT¿ßU¿ßs¿ßƒ¿ß ¿ßÀ¿®¿®.¿®É¿®ë¿®ó¿®ò¿®Æ¿®˘¿©1¿©8¿©<¿©=¿©I¿©Ñ¿©¨¿©¿¿©∆¿©«¿©Ê¿™ ¿™¿™/¿™a¿™ù¿™Õ¿´¿´5¿´{¿´º¿´¿¿´¬¿´√¿¨	¿¨H¿¨I¿¨w¿¨x¿¨Ñ¿¨∞¿¨Ï¿≠¿≠¿≠¿≠¿≠(¿≠W¿≠ì¿≠ª¿≠¡¿≠≈¿≠∆¿≠“¿Æ¿ÆV¿Æâ¿Æè¿Æì¿Æî¿Æ†¿Æ€¿Ø¿Ø¿Ø¿Øä¿Øù¿Ø£¿Ø§¿Ø˚¿∞F¿∞Ö¿∞…¿∞ﬁ¿∞Ê¿∞Ï¿∞Ì¿∞ˇ¿±¿±    
_kCaretGap_kCaretHeightOffset_kFloatingCursorSizeIncrease_kFloatingCursorRadiusTextSelectionPointVerticalCaretMovementRunRenderEditable_RenderEditableCustomPaintRenderEditablePainter_TextHighlightPainter_CaretPainter_CompositeRenderEditablePainter " 