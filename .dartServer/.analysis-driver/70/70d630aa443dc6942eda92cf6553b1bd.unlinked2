ÄìmagnifierConfiguration	focusNodechildcontextMenuBuilderselectionControlsonSelectionChangedgetSelectableButtonItemscreateState_actions_gestureRecognizers_selectionOverlay_startHandleLayerLink_endHandleLayerLink_toolbarLayerLink_selectionDelegate_selectable_hasSelectionOverlayGeometry_lastOrientation_lastSelectedContentlastSecondaryTapDownPositionselectionOverlay	initStatedidChangeDependenciesdidUpdateWidget_makeOverridable_handleFocusChanged_updateSelectionStatus _getEffectiveConsecutiveTapCount_initMouseGestureRecognizer_initTouchGestureRecognizer_startNewMouseSelectionGesture_handleMouseDragStart_handleMouseDragUpdate_handleMouseDragEnd_handleMouseTapUp_updateSelectedContentIfNeeded_handleTouchLongPressStart_handleTouchLongPressMoveUpdate_handleTouchLongPressEnd_positionIsOnActiveSelection_handleRightClickDown_selectionEndPosition_userDraggingSelectionEnd _scheduledSelectionEndEdgeUpdate_triggerSelectionEndEdgeUpdate_onAnyDragEnd_stopSelectionEndEdgeUpdate_selectionStartPosition_userDraggingSelectionStart"_scheduledSelectionStartEdgeUpdate _triggerSelectionStartEdgeUpdate_stopSelectionStartEdgeUpdate!_selectionStartHandleDragPosition_selectionEndHandleDragPosition$_handleSelectionStartHandleDragStart%_handleSelectionStartHandleDragUpdate"_handleSelectionEndHandleDragStart#_handleSelectionEndHandleDragUpdate_buildInfoForMagnifier_createSelectionOverlay_updateSelectionOverlay_showHandles_showToolbar_selectEndTo_selectStartTo_collapseSelectionAt_selectWordAt_finalizeSelection_clearSelection_copycontextMenuAnchors_adjustingSelectionEnd!_determineIsAdjustingSelectionEnd_granularlyExtendSelection_directionalHorizontalBaseline_directionallyExtendSelectioncontextMenuButtonItemsstartGlyphHeightendGlyphHeightselectionEndpoints
cutEnabledpasteEnabledhideToolbar	selectAllcopySelectiontextEditingValuebringIntoViewcutSelectionuserUpdateTextEditingValue	pasteTextaddremovedisposebuildinvokeActioninvokestategranularity_hasReceivedStartEvent_hasReceivedEndEvent"_lastStartEdgeUpdateGlobalPosition _lastEndEdgeUpdateGlobalPosition#_updateLastEdgeEventsFromGeometrieshandleSelectAllhandleSelectWordhandleClearSelectionhandleSelectionEdgeUpdatedispatchSelectionEventToChildensureChildUpdateddidChangeSelectablesselectables$_kSelectionHandleDrawableAreaPaddingcurrentSelectionEndIndexcurrentSelectionStartIndex_startHandleLayer_startHandleLayerOwner_endHandleLayer_endHandleLayerOwner_isHandlingSelectionEvent_scheduledSelectableUpdate_selectionInProgress
_additions_extendSelectionInProgresslayoutDidChange_scheduleSelectableUpdate_updateSelectables_flushAdditions_removeSelectablevalue_selectionGeometry_updateSelectionGeometrycompareOrder_compareScreenOrder_compareVertically_compareHorizontally_handleSelectableGeometryChangegetSelectionGeometry-_adjustSelectionIndexBasedOnSelectionGeometrypushHandleLayers_updateHandleLayersAndOwnersgetSelectedContent_flushInactiveSelectionshandleGranularlyExtendSelection"handleDirectionallyExtendSelectiondispatchSelectionEvent_initSelection_adjustSelection_kLongPressSelectionDevices&_kSelectableVerticalComparingThresholdSelectableRegionSelectableRegionState_NonOverrideAction_SelectAllAction_CopySelectionAction _GranularlyExtendSelectionAction%_GranularlyExtendCaretSelectionAction(_DirectionallyExtendCaretSelectionAction"_SelectableRegionContainerDelegate)MultiSelectableSelectionContainerDelegate"SelectableRegionContextMenuBuilderÅuSetPointerDeviceKindtouchstylusinvertedStylusdoubleTextSelectionAreamaterial
SelectableSelectionContainerSelectionEventSelectionRegistrarScopedelegateSelectionRegistrarmaybeOfSelectionRegistrantdisabledWidgetTesterdragFrom	GlobalKeySelectionHandlerStatefulWidgetTextMagnifierConfiguration	FocusNodeWidgetemptyTextSelectionControlsTextSelectionControlsValueChangedSelectedContentContextMenuButtonItemcontextMenuButtonItemsEditableTextgetEditableButtonItemsAdaptiveTextSelectionToolbarbuttonItemsgetAdaptiveButtonsListSelectionGeometryVoidCallbackboolselectionGeometrystatusSelectionStatusuncollapsed
hasContent	onPressedonCopytypeContextMenuButtonTypecopyonSelectAll	selectAlloverrideStateTextSelectionDelegateMapTypeActionIntentSelectAllTextIntentCopySelectionTextIntent6ExtendSelectionToNextWordBoundaryOrCaretLocationIntentgranularityTextGranularityword'ExpandSelectionToDocumentBoundaryIntentdocument ExpandSelectionToLineBreakIntentline ExtendSelectionByCharacterIntent	character'ExtendSelectionToNextWordBoundaryIntent ExtendSelectionToLineBreakIntent-ExtendSelectionVerticallyToAdjacentLineIntent'ExtendSelectionToDocumentBoundaryIntentGestureRecognizerFactorySelectionOverlay	LayerLinkvaluestartSelectionPointendSelectionPointOrientationOffsetvisibleForTestingvoid	initStatewidget	focusNodeaddListenerTapGestureRecognizer$GestureRecognizerFactoryWithHandlers
debugOwnerinstanceonTapUpTapUpDetailsdefaultTargetPlatformTargetPlatformiOSglobalPositiondetailstoolbarIsVisiblelocationoffsetonSecondaryTapDowndidChangeDependenciesandroidfuchsialinuxmacOSwindows
MediaQueryorientationOfcontextdidUpdateWidgetremoveListenerhasFocusoverridabledefaultActionkIsWeb#PlatformSelectableRegionContextMenudetachattachTextSelection	collapsed
baseOffsetextentOffsetnoneTextEditingValuetext	selectiondisposeintminTapAndPanGestureRecognizersupportedDevicesmouse	onTapDownonDragStartonDragUpdate	onDragEndonCanceldragStartBehaviorDragStartBehaviordownLongPressGestureRecognizeronLongPressStartonLongPressMoveUpdateonLongPressEndTapDragDownDetailsconsecutiveTapCountrequestFocusTapDragStartDetailsTapDragUpdateDetails
continuoustextGranularityTapDragEndDetailsTapDragUpDetails	plainTextgetSelectedContentonSelectionChangedcallLongPressStartDetailsHapticFeedbackselectionClickLongPressMoveUpdateDetailsLongPressEndDetailsRectselectionRectsMatrix4getTransformToMatrixUtilstransformRectselectionRectcontainsTapDownDetails0lastSecondaryTapDownPositionWasOnActiveSelectionSelectionEdgeUpdateEventSelectionResultpendingdispatchSelectionEventforEndSchedulerBindingaddPostFrameCallbackDurationDragEndDetailsselectionControlsTextSelectionHandleControlshideMagnifiershowToolbarcontextMenuBuilderBuildContextforStartDragStartDetailslocalPositiontransformPointshowMagnifierDragUpdateDetailsdelta
lineHeightupdateMagnifierMagnifierInfoSelectionPointVector3getTranslationxyfromLTWHdxdyglobalGesturePosition	caretRectfieldBoundssizecurrentLineBoundariesdebugRequiredForstartHandleType
handleTypeTextSelectionHandleTypeleftlineHeightAtStartonStartHandleDragStartonStartHandleDragUpdateonStartHandleDragEndendHandleTyperightlineHeightAtEndonEndHandleDragStartonEndHandleDragUpdateonEndHandleDragEndselectionEndpointsselectionDelegateclipboardStatusstartHandleLayerLinkendHandleLayerLinktoolbarLayerLinkmagnifierConfigurationshowHandlesOverlayBrowserContextMenuenabledtoolbarLocationhideToolbarSelectWordSelectionEventClearSelectionEventFuture	ClipboardsetDataClipboardDataTextSelectionToolbarAnchorsprimaryAnchor	RenderBoxfindRenderObjectfromSelection	renderBoxstartGlyphHeightendGlyphHeighthasSelectionGranularlyExtendSelectionEventforwardisEnd!DirectionallyExtendSelectionEvent	directionSelectionExtendDirectionnextLinepreviousLinegetSelectableButtonItemsEditableTextStateSelectionChangedCausetoolbarTextSelectionPointTextDirectionltr
DeprecatedhideHandlesSelectAllSelectionEventcauseTextPositionpushHandleLayersdebugCheckHasOverlay	registrarchildCompositedTransformTargetlinkRawGestureDetectorgesturesbehaviorHitTestBehaviortranslucentexcludeFromSemanticsActionsactionsFocusincludeSemanticsContextActionObjectcallingActioninvokekeyboard_copyDirectionalTextEditingIntent_granularlyExtendSelectionDirectionalCaretMovementIntentcollapseSelection_directionallyExtendSelectionremovecurrentSelectionStartIndexselectablescurrentSelectionEndIndexhandleSelectAlladd
selectablehandleSelectWordhandleClearSelectionclearSelectionEventTypeendEdgeUpdatehandleSelectionEdgeUpdatestartEdgeUpdate
selectWordgranularlyExtendSelectiondirectionallyExtendSelectiondispatchSelectionEventToChildtoSetremoveWheredidChangeSelectablesSelectionContainerDelegateChangeNotifier kFlutterMemoryAllocationsEnabledmaybeDispatchObjectCreation	protectedschedulerPhaseSchedulerPhasepostFrameCallbacksscheduleMicrotask
isNotEmptytoListsortlengthmaxindexOfremoveAtmustCallSupernotifyListeners
ComparatorwidthheighttopbottomabsprecisionErrorToleranceisEmptygetTransformFromisFinitehasSizecontainerSizeindexmap	intersectwhereaddAllinflateStringBufferwritetoStringtargetforEachnextpreviousendbackwardcopyWithEditableTextContextMenuBuilder	StatefulWidgetStateTextSelectionDelegateSelectionRegistrarContextAction_NonOverrideAction)MultiSelectableSelectionContainerDelegateSelectionContainerDelegateChangeNotifierÈ<ÛºafÄåT∑˛<≈    Ä¶  
dart:async  Äª  	dart:math  Ä–  package:flutter/foundation.dart  Ä˙  package:flutter/gestures.dart  Å"  package:flutter/rendering.dart  ÅK  package:flutter/scheduler.dart  Åt  package:flutter/services.dart  Åú  'package:vector_math/vector_math_64.dart  Åœ  actions.dart  ÅÊ  
basic.dart  Å˚  context_menu_button_item.dart  Ç#  
debug.dart  Ç8  focus_manager.dart  ÇU  focus_scope.dart  Çp  framework.dart  Çâ  gesture_detector.dart  Ç©  magnifier.dart  Ç¬  media_query.dart  Ç›  overlay.dart  ÇÙ  ,platform_selectable_region_context_menu.dart  É+  selection_container.dart  ÉN  text_editing_intents.dart  Ér  text_selection.dart  Éê  #text_selection_toolbar_anchors.dart    	dart:core¿ áü ¿ÜOâŒ <ÄÜÄ§Ä•Ä∫ÄŒÄœÄ˘Å!ÅJÅsÅõÅÕÅŒÅÂÅ˙Ç"Ç7ÇTÇoÇàÇ®Ç¡Ç‹ÇÛÉ*ÉMÉqÉèÉΩÉæÉ÷É˝ÑÑÑeÑÄÑúÑ¿Ñ√ÑƒÖÖ`Ö°Ö‹Ö›ÜÜÜhÜ∏ááTáõáÎàààdàéàíà⁄â&âsâ¡â≈âÒâıäFä|äÄä—ãã9ã=ã~ã»ååfå∑çç1ç5çÜç‘ééjéàéåé◊èèOè^èbèêèîè®è¨è∏è…èÁê!ê^êwêªê’ê˚ë;ë{ëäëóë¢ë´ë±ëπë…ëÕë—ëˆíí<í^íÅí•í íì ìLìwì£ì–îî;î?îCîeîiîπî˚ïïïaïÆïÂïÈñ8ñÉñŒñÌñÒóóQónóróÕó›ó·ó˜ó˚òJòóò’òŸòÌô9ôôÉô‚ôÚôˆöGöèö≤ö∂ö õõõÑõîõòõ‚ú5úÑú“ú÷ú„úÁù8ùâù∂ù∫ù∆û*û2û6ûDûÑû±üüüoüΩü÷†$†q†°†œ†’°#°E°`°o°å°©°Œ°Á¢.¢K¢Q¢R¢ú¢¢¢—¢◊£(£.£z£µ£∂£Â§§§:§@§q§á§à§«•••Q•`•f•∞•Ô¶ ¶!¶Q¶ç¶é¶⁄ßß	ßYßuß{ßãßëßŸ®®l®¶®˜©,©`©≥©¸™<™t™ú™…™–´"´^´_´∞´ˆ¨	¨-¨@¨_¨|¨®¨≥¨À¨Í≠≠=≠H≠O≠S≠T≠`≠¢≠§≠•≠…Æ@ÆäÆÕØØÈ∞†±E±Ù≤¨≥V≥˙¥∂¥ª¥ºµ"µIµÄµµµË∂N∂û∂π∂∫∑∑y∑z∑õ∑ƒ∑≈∏∏:∏;∏Å∏á∏ƒ∏Ÿπππ%π:πQπàπ´πŒπÏ∫X∫ê∫º∫ªuª≈ººdºàº™ºøº˝ΩΩΩ9Ω{ΩáΩíΩœΩÿΩﬂΩ„Ω‰Ωææ4æYæ|æõæ™æÕæÓøø2øBøHøIøîø€øˇ¿ @%¿ @3¿ @9¿ @d¿ @ä¿ @Œ¿ @‘¿ @ÿ¿ @Ÿ¿ @Â¿ A¿ A@¿ As¿ A≤¿ AÎ¿ B2¿ BQ¿ BY¿ B_¿ Bc¿ Bd¿ BÆ¿ C ¿ C¿ C¿ C$¿ CJ¿ C^¿ C¶¿ CÆ¿ C«¿ CÕ¿ Cﬂ¿ D%¿ D+¿ D/¿ D0¿ DR¿ Du¿ D∂¿ D’¿ D˝¿ E#¿ El¿ Eç¿ EÀ¿ E—¿ F¿ FD¿ Fe¿ Fr¿ Fñ¿ F∂¿ Fº¿ F¿¿ F¡¿ F–¿ F—¿ G!¿ Gt¿ Gƒ¿ H	¿ H¿ H`¿ Ht¿ H≤¿ H◊¿ H¸¿ I¿ IB¿ Ic¿ I∞¿ J¿ JV¿ J°¿ JÛ¿ K<¿ KŒ¿ KÌ¿ L¿ L1¿ LÖ¿ L⁄¿ M-¿ MR¿ MÉ¿ Mâ¿ Mç¿ Mé¿ Mµ¿ N-¿ N¨¿ Nﬁ¿ NÔ¿ O&¿ ON¿ O~¿ O∞¿ O‹¿ P¿ P;¿ PD¿ PK¿ PO¿ PP¿ Pw¿ PÔ¿ Q\¿ Qé¿ Qü¿ QŸ¿ R¿ RT¿ R]¿ Rd¿ Rh¿ Ri¿ R≠¿ R˙¿ S¿ S1¿ SH¿ Sq¿ Sò¿ Sø¿ S‚¿ T%¿ T8¿ T]¿ TÇ¿ T©¿ TÎ¿ Tı¿ U¿ U:¿ U@¿ Uf¿ Uj¿ Uk¿ Uß¿ UÙ¿ V¿ V:¿ V@¿ Vf¿ Vj¿ Vk¿ V©¿ Vˆ¿ W¿ WL¿ WZ¿ W…¿ Wœ¿ Wı¿ W˘¿ W˙¿ X2¿ XL¿ Xr¿ Xv¿ Xw¿ X¨¿ X˘¿ Y¿ Y0¿ YW¿ Y~¿ Y°¿ Y„¿ Z¿ Z-¿ ZT¿ Zö¿ Z≠¿ Z∑¿ ZΩ¿ Z„¿ ZÁ¿ ZË¿ [¿ [m¿ [≠¿ [Í¿ [¿ [Ù¿ [ı¿ \8¿ \]¿ \Ç¿ \µ¿ ] ¿ ]R¿ ]°¿ ]‹¿ ]Ú¿ ]¯¿ ^¿ ^"¿ ^#¿ ^p¿ ^…¿ ^Ô¿ ^Û¿ ^Ù¿ _3¿ _M¿ _s¿ _á¿ _¬¿ _ÿ¿ _ﬁ¿ _‚¿ _„¿ `+¿ `{¿ `æ¿ a¿ aB¿ aW¿ a_¿ ae¿ aw¿ a{¿ a|¿ a≥¿ b¿ bV¿ bë¿ b∂¿ b€¿ b˛¿ c!¿ cD¿ cî¿ c‘¿ d`¿ d°¿ dË¿ dÚ¿ e
¿ eH¿ eg¿ e•¿ eΩ¿ e˚¿ f¿ fÄ¿ fô¿ f´¿ fµ¿ fÛ¿ g¿ gI¿ gj¿ gä¿ g£¿ gµ¿ gø¿ h¿ hO¿ h€¿ i¿ ic¿ im¿ iÖ¿ i√¿ i…¿ iÔ¿ iÛ¿ iÙ¿ j¿ j¿ j<¿ jÉ¿ j¥¿ jµ¿ j˚¿ k¿ kR¿ k£¿ k’¿ l!¿ lm¿ l∏¿ m¿ mO¿ mô¿ mß¿ m≠¿ m⁄¿ ng¿ nñ¿ n‚¿ o¿ o%¿ o/¿ oa¿ o´¿ oµ¿ o√¿ o…¿ oÃ¿ oÕ¿ o˚¿ p>¿ pf¿ på¿ pò¿ p¡¿ pÊ¿ pˇ¿ q3¿ qn¿ qx¿ qÄ¿ qÖ¿ q®¿ q…¿ qÌ¿ q¿ qÒ¿ r¿ rF¿ rh¿ rl¿ rm¿ rê¿ r€¿ s¿ s¿ sW¿ s]¿ sÆ¿ sˇ¿ t1¿ t¿ tÀ¿ u¿ ue¿ u≠¿ u˚¿ v	¿ v¿ v<¿ vÕ¿ v˛¿ wJ¿ w}¿ wè¿ wô¿ wÕ¿ x¿ x#¿ x1¿ x7¿ x;¿ x<¿ xe¿ xï¿ x∑¿ xª¿ xº¿ x‚¿ x„¿ y¿ yC¿ yD¿ yå¿ yŒ¿ yœ¿ z-¿ zt¿ zÿ¿ zŸ¿ {¿ {4¿ {i¿ {q¿ {ó¿ {õ¿ {ú¿ {Ê¿ |A¿ |ã¿ |‘¿ }_¿ }á¿ }à¿ }«¿ }Â¿ ~¿ ~"¿ ~H¿ ~L¿ ~M¿ ~ì¿ ~”¿ /¿ v¿ ÿ¿ Ÿ¿ Ä¿ Ä4¿ Äg¿ Äo¿ Äï¿ Äô¿ Äö¿ Ä‚¿ Å9¿ ÅÉ¿ ÅÃ¿ ÇQ¿ Çw¿ Çx¿ Ç∑¿ Ç’¿ É¿ É¿ É6¿ É:¿ É;¿ É°¿ É˚¿ ÑV¿ Ñ¿¿ ÑÏ¿ Ö¿ ÖZ¿ Öe¿ Öá¿ Öê¿ Öë¿ Ö≠¿ Ö„¿ Ü¿ ÜC¿ Üè¿ Üò¿ Üú¿ Üù¿ Ü¿¿ ÜÍ¿ á¿ á¿ á#¿ ás¿ áø¿ áÈ¿ à¿ à!¿ àk¿ à™¿ àÓ¿ â4¿ â_¿ â¶¿ â„¿ ä#¿ äe¿ äé¿ äº¿ äÔ¿ ã¿ ã+¿ ã^¿ ãç¿ ã∏¿ ãÙ¿ ã˚¿ ãˇ¿ å ¿ å#¿ åH¿ åV¿ å\¿ åÜ¿ å÷¿ ç"¿ ç9¿ çÖ¿ ç∆¿ é¿ éN¿ é¿ éÉ¿ éÑ¿ éß¿ é≠¿ é¯¿ è¿ è¿ èB¿ èj¿ è}¿ èÉ¿ èÑ¿ è≠¿ è¡¿ è«¿ è»¿ èÁ¿ ê¿ ê¿ ê"¿ ê#¿ êK¿ êQ¿ êú¿ êÏ¿ ë9¿ ëJ¿ ëP¿ ë°¿ ëÀ¿ í¿ í%¿ í+¿ í,¿ í}¿ íÕ¿ ì¿ ìh¿ ì©¿ ìŸ¿ ìÌ¿ ìÛ¿ ìÙ¿ î¿ î:¿ î@¿ îA¿ ît¿ î∏¿ î‡¿ îÛ¿ î˘¿ î˙¿ ï ¿ ï!¿ ïE¿ ï]¿ ïê¿ ï ¿ ï”¿ ï⁄¿ ïÎ¿ ïÔ¿ ï¿ ñ3¿ ñ9¿ ñá¿ ñŸ¿ ó!¿ ó'¿ ók¿ ó©¿ óØ¿ ó˘¿ òH¿ òê¿ ò∂¿ òº¿ òÔ¿ òı¿ ô"¿ ô(¿ ô|¿ ôƒ¿ ô˙¿ ö ¿ ö¿ öW¿ öú¿ ö‹¿ õ"¿ õr¿ õ™¿ ú¿ ú,¿ úÆ¿ úº¿ ú¬¿ úÌ¿ ù¿ ù[¿ ùa¿ ùe¿ ùf¿ ù´¿ ù±¿ ùˇ¿ ûQ¿ ûô¿ ûü¿ ûÂ¿ ü#¿ ü)¿ üs¿ ü¬¿ †
¿ †0¿ †6¿ †i¿ †o¿ †ú¿ †¢¿ †ˆ¿ °>¿ °t¿ °z¿ °ä¿ °Õ¿ ¢¿ ¢R¿ ¢ò¿ ¢Ë¿ £ ¿ £ç¿ £§¿ §(¿ §6¿ §<¿ §i¿ §ë¿ §€¿ §·¿ §Â¿ §Ê¿ •$¿ •*¿ •:¿ •Å¿ •ƒ¿ ¶	¿ ¶I¿ ¶è¿ ¶«¿ ¶ˇ¿ ß#¿ ßE¿ ßI¿ ßJ¿ ß¿ ßÖ¿ ß“¿ ®¿ ®j¿ ®p¿ ®¬¿ ®È¿ ®Ô¿ ®ˇ¿ ©F¿ ©â¿ ©Œ¿ ™¿ ™^¿ ™ñ¿ ™«¿ ™Ù¿ ´¿ ´i¿ ´m¿ ´n¿ ´ô¿ ´ü¿ ´Ì¿ ¨0¿ ¨6¿ ¨Ñ¿ ¨‘¿ ≠¿ ≠.¿ ≠L¿ ≠o¿ ≠î¿ ≠ò¿ ≠ô¿ ≠æ¿ ≠Ÿ¿ ≠Û¿ Æ¿ ÆA¿ Æá¿ Æ≠¿ Æ±¿ Æ≤¿ Æ—¿ Ø¿ Ø.¿ Ø<¿ ØB¿ ØÑ¿ Øà¿ Øâ¿ Ø¿¿ Ø∆¿ Ø÷¿ Ø‹¿ ∞+¿ ∞Z¿ ∞ë¿ ∞¡¿ ∞Î¿ ±!¿ ±*¿ ±0¿ ±z¿ ±∞¿ ±Ã¿ ±ˆ¿ ≤¿ ≤J¿ ≤Q¿ ≤U¿ ≤V¿ ≤v¿ ≤Ø¿ ≤Ÿ¿ ≤ˇ¿ ≥¿ ≥ ¿ ≥Z¿ ≥y¿ ≥≈¿ ≥˛¿ ¥¿ ¥W¿ ¥q¿ ¥~¿ ¥¿¿ ¥∆¿ µ¿ µK¿ µO¿ µP¿ µü¿ µ ¿ µ¸¿ ∂
¿ ∂¿ ∂9¿ ∂_¿ ∂y¿ ∂¥¿ ∂÷¿ ∂ﬂ¿ ∂Ê¿ ∑¿ ∑¿ ∑¿ ∑;¿ ∑<¿ ∑q¿ ∑£¿ ∑±¿ ∑∑¿ ∏¿ ∏O¿ ∏É¿ ∏∫¿ π¿ π©¿ π“¿ π˚¿ ∫#¿ ∫ã¿ ∫∂¿ ∫ø¿ ∫∆¿ ∫Ï¿ ∫¿ ∫Ò¿ ª¿ ª¿ ªf¿ ªè¿ ªï¿ ª•¿ ª´¿ ªˇ¿ ºL¿ ºû¿ ºÂ¿ Ω4¿ ΩJ¿ Ωõ¿ Ω–¿ æ¿ æP¿ æ†¿ æ€¿ ø¿ øD¿ øW¿ øh¿ øi¿ ø†¿ ø…¿ ø¿ ¿¿ ¿6¿ ¿Y¿ ¿y¿ ¿û¿ ¿√¿ ¿Í¿ ¡¿ ¡¿ ¡¿ ¡0¿ ¡Y¿ ¡Ä¿ ¡£¿ ¡ ¿ ¬ ¿ ¬%¿ ¬J¿ ¬q¿ ¬ä¿ ¬•¿ ¬Ø¿ ¬∏¿ ¬ø¿ ¬√¿ ¬ƒ¿ √¿ √!¿ √f¿ √j¿ √k¿ √¶¿ √ƒ¿ ƒ¿ ƒ¿ ƒ¿ ƒ[¿ ƒè¿ ƒﬂ¿ ≈+¿ ≈U¿ ≈ß¿ ≈˜¿ ∆.¿ ∆S¿ ∆î¿ ∆◊¿ ∆‡¿ ∆Ì¿ «¿ «U¿ «ñ¿ «ü¿ «•¿ «∏¿ «º¿ «Ω¿ «Â¿ »'¿ »S¿ »â¿ »ä¿ »ô¿ »¬¿ »˚¿ »ˇ¿ …¿ …+¿ …,¿ …;¿ …d¿ …ù¿ …°¿ …≠¿ …œ¿ …–¿ …‹¿  ¿  2¿  I¿  q¿  w¿  {¿  |¿  à¿  ª¿  “¿ À¿ ÀN¿ Àd¿ Àz¿ ÀÄ¿ À¶¿ À™¿ À´¿ À∫¿ À„¿ Ã¿ Ã ¿ Ã,¿ Ã`¿ Ãm¿ ÃÑ¿ Ãà¿ Ãâ¿ Ãò¿ Ã¡¿ Ã˙¿ Ã˛¿ Õ
¿ ÕS¿ ÕT¿ Õc¿ Õå¿ Õ≈¿ Õ…¿ Õ’¿ Œ9¿ Œ:¿ ŒI¿ Œr¿ Œ´¿ ŒØ¿ Œª¿ ŒÓ¿ œ¿ œ¿ œ¿ œ¿ œ>¿ œw¿ œ{¿ œá¿ –¿ –¿ –¿ –H¿ –Å¿ –Ö¿ –ë¿ –œ¿ –‚¿ –Ê¿ –Á¿ —¿ —¿ —¿ —<¿ —]¿ —{¿ —±¿ “ ¿ “¿ “¿ “¿ “8¿ “_¿ “ò¿ “«¿ “ﬂ¿ “„¿ “‰¿ “¿ ”¿ ”<¿ ”k¿ ”ç¿ ”€¿ ‘¿ ‘=¿ ‘_¿ ‘}¿ ‘í¿ ‘ñ¿ ‘ó¿ ‘£¿ ‘ ¿ ‘ı¿ ’¿ ’4¿ ’X¿ ’s¿ ’z¿ ’å¿ ’¿¿ ’◊¿ ’‡¿ ’Ê¿ ÷¿ ÷+¿ ÷L¿ ÷s¿ ÷¢¿ ÷∆¿ ÷ﬁ¿ ÷˚¿ ◊¿ ◊8¿ ◊a¿ ◊|¿ ◊â¿ ◊î¿ ◊ù¿ ◊§¿ ◊®¿ ◊™¿ ◊´¿ ◊˘¿ ◊˝¿ ÿK¿ ÿú¿ ÿ∞¿ ÿˇ¿ Ÿ:¿ Ÿ;¿ ŸG¿ Ÿ}¿ Ÿû¿ Ÿ ¿ Ÿ–¿ Ÿ˙¿ Ÿ˛¿ ⁄ ¿ ⁄¿ ⁄J¿ ⁄j¿ ⁄k¿ ⁄ê¿ ⁄ë¿ ⁄ù¿ ⁄Ë¿ €¿ €!¿ €#¿ €$¿ €u¿ €ô¿ €ö¿ €ø¿ €¿¿ €Ã¿ ‹¿ ‹.¿ ‹2¿ ‹4¿ ‹5¿ ‹§¿ ‹Ò¿ ‹Ú¿ ›¿ ›<¿ ›=¿ ›I¿ ›Ç¿ ›≈¿ ›…¿ ›À¿ ›Ã¿ ﬁB¿ ﬁî¿ ﬁï¿ ﬁ∫¿ ﬁﬂ¿ ﬁ‡¿ ﬁÏ¿ ﬂ%¿ ﬂI¿ ﬂ¿ ﬂç¿ ﬂì¿ ﬂ÷¿ ﬂ⁄¿ ﬂ‹¿ ﬂ›¿ ‡V¿ ‡é¿ ‡è¿ ‡¥¿ ‡µ¿ ‡¡¿ ‡˙¿ ·¿ ·T¿ ·b¿ ·h¿ ·°¿ ·•¿ ·ß¿ ·®¿ ‚¿ ‚F¿ ‚Ö¿ ‚Ü¿ ‚¥¿ ‚‡¿ ‚·¿ ‚Ì¿ „¿ „C¿ „p¿ „é¿ „í¿ „ì¿ „¬¿ ‰,¿ ‰t¿ ‰…¿ Â¿ ÂÑ¿ Âä¿ Â¿ Ê4¿ ÊÉ¿ Ê∆¿ Á3¿ Á9¿ Á=¿ Á>¿ ÁJ¿ Áç¿ ÁŒ¿ Ë¿ Ë3¿ Ë_¿ Ëe¿ ËØ¿ Ë⁄¿ ËÌ¿ ËÒ¿ ËÚ¿ È'¿ ÈX¿ Èd¿ È©¿ ÈÎ¿ Í¿ Íb¿ Íh¿ Íí¿ ÍŸ¿ Íﬂ¿ Î
¿ Î¿ Î!¿ Î"¿ Î.¿ Îr¿ Î∏¿ Î‹¿ Î˛¿ Ï-¿ ÏZ¿ Ïm¿ Ïq¿ Ïr¿ Ï~¿ ÏÃ¿ Ì¿ ÌE¿ ÌR¿ Ìì¿ Ìô¿ ÌÃ¿ Ì–¿ Ì—¿ Ì›¿ Ì¿ Ó¿ Ó6¿ ÓK¿ ÓO¿ ÓP¿ Ó\¿ Óª¿ Ó’¿ Ô¿ Ô4¿ Ô\¿ Ôâ¿ Ô∑¿ Ôﬂ¿ ¿ 7¿ h¿ ë¿ ª¿  ¿ Ò¿ Ò?¿ Òo¿ Òù¿ Ò≈¿ ÒÀ¿ Ú¿ Ú¿ Ú¿ Ú¿ ÚR¿ ÚÆ¿ Û¿ ÛB¿ ÛK¿ Ûw¿ Û¨¿ Û¥¿ ÛÔ¿ Ûı¿ ÙU¿ Ù∞¿ ÙÔ¿ Ù¯¿ ı&¿ ı[¿ ıc¿ ıû¿ ı§¿ ı®¿ ı©¿ ıµ¿ ı’¿ ˆ	¿ ˆ*¿ ˆS¿ ˆê¿ ˆõ¿ ˆ§¿ ˆ™¿ ˆ‡¿ ˜¿ ˜,¿ ˜k¿ ˜v¿ ˜¿ ˜Ö¿ ˜ƒ¿ ¯*¿ ¯í¿ ¯¥¿ ¯∏¿ ¯∫¿ ¯ª¿ ˘¿ ˘¿ ˘S¿ ˘†¿ ˘Ã¿ ˘–¿ ˙¿ ˙S¿ ˙≈¿ ˚¿ ˚?¿ ˚k¿ ˚£¿ ˚©¿ ˚≠¿ ˚Æ¿ ˚Ï¿ ¸¿ ¸¿ ¸k¿ ¸w¿ ¸}¿ ¸À¿ ˝¿ ˝6¿ ˝<¿ ˝Ç¿ ˝ª¿ ˝¡¿ ˛¿ ˛H¿ ˛I¿ ˛å¿ ˛ô¿ ˛æ¿ ˛ø¿ ˇ¿ ˇ¿ ˇ8¿ ˇ9¿ ˇY¿ ˇ¿ ˇù¿ ˇ¡¿ ˇ¬¿ ˇÏ¿ ¿ <¿ k¿ l¿ ó¿ ò¿ §¿ »¿ ˜¿¿8¿<¿=¿I¿p¿ô¿·¿¿¿c¿q¿w¿ö¿ª¿ø¿¿¿¿"¿B¿F¿G¿l¿ì¿º¿¿¿-¿7¿c¿Å¿â¿ä¿Â¿6¿Ç¿Œ¿¿5¿D¿é¿ñ¿ú¿†¿°¿ø¿„¿¿¿#¿?¿C¿D¿_¿∏¿ˆ¿¿2¿M¿á¿Ω¿‹¿	A¿	x¿	±¿
¿
U¿
â¿
ì¿
Ã¿
˛¿¿E¿a¿s¿{¿|¿Õ¿Î¿8¿è¿Ê¿¿¿c¿ç¿¶¿¨¿‰¿¿X¿´¿˙¿H¿ó¿‚¿¿J¿k¿o¿p¿¢¿¸¿3¿T¿Å¿¶¿¨¿€¿¿¿H¿L¿M¿ê¿ù¿Æ¿Œ¿Ó¿Ú¿Û¿ˇ¿4¿v¿ç¿Ø¿¥¿µ¿¿&¿e¿è¿¥¿Õ¿”¿˜¿˚¿¸¿H¿h¿n¿é¿õ¿›¿ﬁ¿¿H¿f¿û¿•¿◊¿ı¿-¿4¿m¿Ñ¿ô¿ü¿Œ¿“¿”¿¿/¿5¿¿¡¿Û¿y¿ˇ¿¿¿_¿Ñ¿ä¿≥¿∑¿∏¿¿P¿V¿ï¿…¿ﬁ¿D¿^¿ó¿©¿±¿¬¿»¿…¿ﬁ¿D¿^¿ó¿™¿≤¿¬¿»¿¿,¿2¿Y¿]¿^¿â¿⁄¿(¿r¿ó¿•¿´¿À¿œ¿–¿ ¿ ¿ L¿ v¿ ¢¿ ¡¿ Á¿!¿!-¿!Y¿!b¿!h¿!i¿!ê¿!‚¿"¿"(¿"1¿"Å¿"£¿"«¿"–¿"÷¿"◊¿#¿#d¿#æ¿#ı¿$]¿$í¿$Õ¿$”¿$‘¿$Ù¿%)¿%¿%¯¿&0¿&L¿&q¿&ë¿&÷¿'¿'&¿'.¿'4¿'5¿'k¿'º¿'Ô¿(S¿(Ü¿(Ω¿(√¿(·¿)¿)d¿)’¿*¿*'¿*J¿*h¿*©¿*Í¿*ı¿*˝¿+¿+¿+M¿+ê¿+¿¿+Ó¿,7¿,ñ¿,ı¿-g¿-Ø¿.¿.'¿.[¿.e¿.¿.•¿.Ê¿.˘¿/8¿/>¿/?¿/]¿/Ñ¿/ß¿/Õ¿/¯¿0¿0>¿0q¿0â¿0ê¿0î¿0ï¿0‡¿1-¿1{¿1»¿2¿24¿29¿2â¿2‚¿3¿3A¿3ï¿3Ω¿3√¿3‹¿3‡¿3·¿3Ì¿45¿4Å¿4è¿4ï¿4∫¿4€¿4ˇ¿5¿5¿5U¿5[¿5¨¿5Ô¿6>¿6X¿6Ä¿6π¿6Ó¿74¿7d¿7ß¿7Ê¿8à¿9#¿9l¿9Ø¿9µ¿:¿: ¿:L¿:ä¿:±¿:π¿:„¿;¿;D¿;L¿;Z¿;`¿;a¿;Æ¿;Í¿;¿<9¿<s¿<y¿<z¿<¿¿<¡¿=¿=7¿=l¿=∆¿=‘¿=⁄¿=€¿>%¿>g¿>≠¿>±¿>≤¿>È¿>ı¿?¿?a¿?ò¿?›¿?˜¿@¿@¿@#¿@A¿@T¿@Z¿@ä¿@ƒ¿@Ì¿@Û¿A¿A3¿A:¿A>¿A?¿AÄ¿Aª¿A¿¿B¿BE¿BJ¿Bé¿B≤¿C ¿C¿C¿Cb¿Cÿ¿CÍ¿D2¿Dü¿D≠¿D≥¿E¿E[¿Eù¿E—¿E„¿EÎ¿FA¿FG¿FK¿FL¿F{¿Fà¿FÀ¿G¿G:¿G@¿Gd¿Gõ¿Gº¿G¿¿G¡¿Gˆ¿H'¿H4¿Hy¿H£¿HÂ¿IV¿Iü¿IÓ¿J%¿Jr¿J ¿K(¿KO¿KY¿Kî¿K®¿K≤¿Kˇ¿L*¿L4¿Lp¿L¿¿M¿M¿Me¿M÷¿N¿N)¿NM¿N\¿Nó¿N‰¿O
¿O¿O¿O"¿OK¿Ok¿Oo¿Op¿O∂¿O√¿P¿P>¿Pv¿P|¿Pü¿Pƒ¿PÂ¿PÈ¿PÍ¿Q(¿Q5¿Qè¿Q„¿R¿R*¿Rm¿R|¿R–¿Rÿ¿Rﬁ¿S9¿Sñ¿SØ¿S·¿T8¿TR¿T£¿T◊¿Tﬂ¿TÏ¿U¿U`¿Uz¿UÀ¿U˚¿V¿V	¿V ¿VN¿V[¿Vã¿Vë¿V§¿V®¿V©¿VÁ¿VÙ¿WT¿W®¿W‘¿Wı¿X)¿XY¿XØ¿Xﬂ¿Y¿YQ¿YY¿Y_¿Y∫¿Z¿Z6¿Zh¿ZΩ¿ZÔ¿[¿[.¿[b¿[ä¿[÷¿[Â¿\¿\$¿\.¿\\¿\≠¿\€¿]¿]/¿]c¿]ã¿]÷¿]Â¿^¿^$¿^.¿^[¿^â¿^∏¿^æ¿^’¿_¿_¿_@¿_F¿_Y¿_]¿_^¿_Å¿_é¿_‹¿`¿`è¿`ï¿a¿a¿a¿a!¿ab¿a¨¿aÍ¿b%¿bK¿bQ¿bá¿b≠¿bŒ¿bË¿c¿cD¿cp¿cø¿c‰¿d¿dU¿d~¿d™¿dÓ¿e¿eD¿eä¿e√¿eÓ¿fI¿fÖ¿f∞¿g¿g¿g>¿g^¿gq¿gu¿gv¿gÇ¿gï¿gÃ¿h¿h¿h<¿hd¿hy¿h}¿h~¿h ¿h–¿i¿i_¿ie¿iµ¿i…¿i÷¿j¿j	¿jF¿jL¿jõ¿j”¿j‡¿k?¿kt¿kx¿ky¿kµ¿kª¿l¿lY¿l´¿lÙ¿m,¿m2¿mÅ¿m“¿mﬂ¿n9¿n†¿n∑¿n€¿n¯¿oP¿oÉ¿o⁄¿o˜¿p¿p=¿pY¿p{¿pó¿pø¿p„¿q
¿q.¿qJ¿qd¿qì¿qü¿q…¿qÔ¿r¿r7¿r[¿rc¿ri¿rj¿rÑ¿rß¿r ¿r–¿r·¿s¿s¿sF¿sL¿sl¿s∏¿t¿tV¿tÅ¿tÖ¿tÜ¿t‘¿u¿u ¿ug¿u∏¿u¯¿vT¿vd¿vw¿v◊¿vÏ¿vÙ¿wV¿wi¿ws¿wï¿w‚¿x2¿xq¿xΩ¿xŸ¿y&¿yU¿y\¿y∞¿y÷¿zj¿zˇ¿{`¿{ñ¿{Õ¿|¿|'¿|`¿|ö¿|“¿|Ù¿|˚¿}¿}@¿}ê¿}¥¿~¿~,¿~Ç¿~¿¿~«¿¿4¿;¿_¿î¿‘¿Ä¿Äe¿Ä¬¿ÄÎ¿Å¿Å3¿ÅV¿Åá¿Å™¿ÅÃ¿ÅÁ¿Ç¿ÇQ¿ÇÑ¿Çó¿Ç≥¿ÇŒ¿Ç⁄¿É¿É#¿É>¿Ém¿Éì¿É∆¿ÉŸ¿Éˆ¿Ñ¿Ñ¿Ñ%¿Ñ+¿Ñ<¿Ñg¿Ñt¿Ñ°¿Ñß¿Ñ«¿Ñ‡¿Ñ‰¿ÑÊ¿ÑÁ¿Ö3¿ÖP¿ÖT¿Öb¿Öf¿Ö∞¿Ö«¿Ü¿Ü¿ÜL¿ÜO    Ä•  Ä∫  Äœ  Ä˘  Å!  ÅJ  Ås  Åõ  ÅŒ  ÅÂ  Å˙  Ç"  Ç7  ÇT  Ço  Çà  Ç®  Ç¡  Ç‹  ÇÛ  É*  ÉM  Éq  Éè    
Ö›ß∆†wöì/// A widget that introduces an area for user selections.
///
/// Flutter widgets are not selectable by default. Wrapping a widget subtree
/// with a [SelectableRegion] widget enables selection within that subtree (for
/// example, [Text] widgets automatically look for selectable regions to enable
/// selection). The wrapped subtree can be selected by users using mouse or
/// touch gestures, e.g. users can select widgets by holding the mouse
/// left-click and dragging across widgets, or they can use long press gestures
/// to select words on touch devices.
///
/// A [SelectableRegion] widget requires configuration; in particular specific
/// [selectionControls] must be provided.
///
/// The [SelectionArea] widget from the [material] library configures a
/// [SelectableRegion] in a platform-specific manner (e.g. using a Material
/// toolbar on Android, a Cupertino toolbar on iOS), and it may therefore be
/// simpler to use that widget rather than using [SelectableRegion] directly.
///
/// ## An overview of the selection system.
///
/// Every [Selectable] under the [SelectableRegion] can be selected. They form a
/// selection tree structure to handle the selection.
///
/// The [SelectableRegion] is a wrapper over [SelectionContainer]. It listens to
/// user gestures and sends corresponding [SelectionEvent]s to the
/// [SelectionContainer] it creates.
///
/// A [SelectionContainer] is a single [Selectable] that handles
/// [SelectionEvent]s on behalf of child [Selectable]s in the subtree. It
/// creates a [SelectionRegistrarScope] with its [SelectionContainer.delegate]
/// to collect child [Selectable]s and sends the [SelectionEvent]s it receives
/// from the parent [SelectionRegistrar] to the appropriate child [Selectable]s.
/// It creates an abstraction for the parent [SelectionRegistrar] as if it is
/// interacting with a single [Selectable].
///
/// The [SelectionContainer] created by [SelectableRegion] is the root node of a
/// selection tree. Each non-leaf node in the tree is a [SelectionContainer],
/// and the leaf node is a leaf widget whose render object implements
/// [Selectable]. They are connected through [SelectionRegistrarScope]s created
/// by [SelectionContainer]s.
///
/// Both [SelectionContainer]s and the leaf [Selectable]s need to register
/// themselves to the [SelectionRegistrar] from the
/// [SelectionContainer.maybeOf] if they want to participate in the
/// selection.
///
/// An example selection tree will look like:
///
/// {@tool snippet}
///
/// ```dart
/// MaterialApp(
///   home: SelectableRegion(
///     selectionControls: materialTextSelectionControls,
///     focusNode: _focusNode, // initialized to FocusNode()
///     child: Scaffold(
///       appBar: AppBar(title: const Text('Flutter Code Sample')),
///       body: ListView(
///         children: const <Widget>[
///           Text('Item 0', style: TextStyle(fontSize: 50.0)),
///           Text('Item 1', style: TextStyle(fontSize: 50.0)),
///         ],
///       ),
///     ),
///   ),
/// )
/// ```
/// {@end-tool}
///
///
///               SelectionContainer
///               (SelectableRegion)
///                  /         \
///                 /           \
///                /             \
///           Selectable          \
///      ("Flutter Code Sample")   \
///                                 \
///                          SelectionContainer
///                              (ListView)
///                              /       \
///                             /         \
///                            /           \
///                     Selectable        Selectable
///                     ("Item 0")         ("Item 1")
///
///
/// ## Making a widget selectable
///
/// Some leaf widgets, such as [Text], have all of the selection logic wired up
/// automatically and can be selected as long as they are under a
/// [SelectableRegion].
///
/// To make a custom selectable widget, its render object needs to mix in
/// [Selectable] and implement the required APIs to handle [SelectionEvent]s
/// as well as paint appropriate selection highlights.
///
/// The render object also needs to register itself to a [SelectionRegistrar].
/// For the most cases, one can use [SelectionRegistrant] to auto-register
/// itself with the register returned from [SelectionContainer.maybeOf] as
/// seen in the example below.
///
/// {@tool dartpad}
/// This sample demonstrates how to create an adapter widget that makes any
/// child widget selectable.
///
/// ** See code in examples/api/lib/material/selectable_region/selectable_region.0.dart **
/// {@end-tool}
///
/// ## Complex layout
///
/// By default, the screen order is used as the selection order. If a group of
/// [Selectable]s needs to select differently, consider wrapping them with a
/// [SelectionContainer] to customize its selection behavior.
///
/// {@tool dartpad}
/// This sample demonstrates how to create a [SelectionContainer] that only
/// allows selecting everything or nothing with no partial selection.
///
/// ** See code in examples/api/lib/material/selection_container/selection_container.0.dart **
/// {@end-tool}
///
/// In the case where a group of widgets should be excluded from selection under
/// a [SelectableRegion], consider wrapping that group of widgets using
/// [SelectionContainer.disabled].
///
/// {@tool dartpad}
/// This sample demonstrates how to disable selection for a Text in a Column.
///
/// ** See code in examples/api/lib/material/selection_container/selection_container_disabled.0.dart **
/// {@end-tool}
///
/// To create a separate selection system from its parent selection area,
/// wrap part of the subtree with another [SelectableRegion]. The selection of the
/// child selection area can not extend past its subtree, and the selection of
/// the parent selection area can not extend inside the child selection area.
///
/// ## Tests
///
/// In a test, a region can be selected either by faking drag events (e.g. using
/// [WidgetTester.dragFrom]) or by sending intents to a widget inside the region
/// that has been given a [GlobalKey], e.g.:
///
/// ```dart
/// Actions.invoke(key.currentContext!, const SelectAllTextIntent(SelectionChangedCause.keyboard));
/// ```
///
/// See also:
///  * [SelectionArea], which creates a [SelectableRegion] with
///    platform-adaptive selection controls.
///  * [SelectionHandler], which contains APIs to handle selection events from the
///    [SelectableRegion].
///  * [Selectable], which provides API to participate in the selection system.
///  * [SelectionRegistrar], which [Selectable] needs to subscribe to receive
///    selection events.
///  * [SelectionContainer], which collects selectable widgets in the subtree
///    and provides api to dispatch selection event to the collected widget. †£Å≠ °M°]Äõ/// Create a new [SelectableRegion] widget.
///
/// The [selectionControls] are used for building the selection handles and
/// toolbar for mobile devices.°d	°k  °s°y  °ê°ü  °≠°º  °“°·  °ÎA°Ò  ¢2¢8  ¢	¢#¢$¢TÅ_£ùÅ/// {@macro flutter.widgets.magnifier.TextMagnifierConfiguration.intro}
///
/// {@macro flutter.widgets.magnifier.intro}
///
/// By default, [SelectableRegion]'s [TextMagnifierConfiguration] is disabled.
///
/// {@macro flutter.widgets.magnifier.TextMagnifierConfiguration.details} £∏H£˜,/// {@macro flutter.widgets.Focus.focusNode} §ÄÄ§Äg/// The child widget this selection area applies to.
///
/// {@macro flutter.widgets.ProxyWidget.child} §ä{§Û</// {@macro flutter.widgets.EditableText.contextMenuBuilder} •
Å¶Ä‹/// The delegate to build the selection handles and toolbar for mobile
/// devices.
///
/// The [emptyTextSelectionControls] global variable provides a default
/// [TextSelectionControls] implementation with no controls. ¶#h¶y-/// Called when the selected content changes.  ¶êÜ¬™!ÉK/// Returns the [ContextMenuButtonItem]s representing the buttons in this
/// platform's default selection menu.
///
/// For example, [SelectableRegion] uses this to generate the default buttons
/// for its context menu.
///
/// See also:
///
/// * [SelectableRegionState.contextMenuButtonItems], which gives the
///   [ContextMenuButtonItem]s for a specific SelectableRegion.
/// * [EditableText.getEditableButtonItems], which performs a similar role but
///   for content that is both selectable and editable.
/// * [AdaptiveTextSelectionToolbar], which builds the toolbar itself, and can
///   take a list of [ContextMenuButtonItem]s with
///   [AdaptiveTextSelectionToolbar.buttonItems].
/// * [AdaptiveTextSelectionToolbar.getAdaptiveButtons], which builds the button
///   Widgets for the current platform given [ContextMenuButtonItem]s. ™@2™b  ™x"™ï  ™†'™Ω   ≠VK≠x   ≠V≠W ≠•¿ ™≠œ#/// State for a [SelectableRegion].  ÆBÜwÆg ÄûÆà¥∏ÆrÆáÆsÆyÆÆÜÆÄÆ°ÆéÆ£Æ≥Æ Æ¥ÆƒÆ…Æ≈ÆËÆ—ÆÍÆ˙ØÆ˚ØØØØRØØTØdØÊØeØÖØºØÜØΩØÂØæØœØƒØ—Ø‡Ø·∞ØÌ∞∞&∞ù∞'∞G∞o∞H∞p∞ú∞q∞Ç∞w∞Ñ∞ì∞î∞ƒ∞§∞∆∞÷±B∞◊∞˜±∞¯±±A±±+± ±-±<±=±i±I±k±{±Ò±|±°±¬±¢±√±±ƒ±’± ±◊±Ê±Á≤±¯≤!≤1≤©≤2≤W≤≤X≤Ä≤®≤Å≤í≤á≤î≤£≤§≤–≤∞≤“≤‚≥S≤„≥≥)≥	≥*≥R≥+≥<≥1≥>≥M≥N≥á≥Z≥â≥ô≥˜≥ö≥¬≥≥√≥Ò≥ˆ≥Ú¥%≥˛¥'¥7¥≥¥8¥]¥Ö¥^¥Ü¥≤¥á¥ò¥ç¥ö¥©¥™¥æb¥Ë µµ¥˛µ¥ˇµµ$#µ6  µK3µ[ µsµ|µ}µÇ1µí µ®µ±µ≤µ∑/µ« µ€µ‰µÂµÍb∂ ∂(∂J∂K∂†∂¨  ∑|∑â  ∑ù%∑Æ  ∑«q∏J/// {@macro flutter.rendering.RenderEditable.lastSecondaryTapDownPosition} ¿ j¿ j%  ¿ jÖ-¿ jä ¿ j≠¿ ro¿ rw  ¿ r›/¿ r‚ ¿ s¿ xÂ-¿ xÒ  ¿ y+¿ y"  ¿ ≤X¿ ≤^  ¿ ∑&¿ ∑  ¿ ÃãÄ∆¿ Õ ¿ Ãã¿ Ãå¿ Ãñ¿ Ã¸¿ Ãú¿ Ã≈¿ Õ ¿ Õ¿ Õ0¿ Õ6¿ ÕF¿ ÕP¿ ÕK¿ ÕG¿ ÕM∂ºÄº∂≈    ∏=Ä⁄∏ÒÄÇ/// The [SelectionOverlay] that is currently visible on the screen.
///
/// Can be null if there is no visible [SelectionOverlay].  ∏∆∏«¿ j>D¿ jG    ¿ ríH¿ rõ    ¿ ØãÇ…¿ ∞|Äƒ/// {@macro flutter.widgets.EditableText.getAnchors}
///
/// See also:
///
///  * [contextMenuButtonItems], which provides the [ContextMenuButtonItem]s
///    for the default context menu buttons.   ¿ ªá¶¿ æ¬Ée/// Returns the [ContextMenuButtonItem]s representing the buttons in this
/// platform's default selection menu.
///
/// See also:
///
/// * [SelectableRegion.getSelectableButtonItems], which performs a similar role,
///   but for any selectable text, not just specifically SelectableRegion.
/// * [EditableTextState.contextMenuButtonItems], which performs a similar role
///   but for content that is not just selectable but also editable.
/// * [contextMenuAnchors], which provides the anchor points for the default
///   context menu.
/// * [AdaptiveTextSelectionToolbar], which builds the toolbar itself, and can
///   take a list of [ContextMenuButtonItem]s with
///   [AdaptiveTextSelectionToolbar.buttonItems].
/// * [AdaptiveTextSelectionToolbar.getAdaptiveButtons], which builds the
///   button Widgets for the current platform given [ContextMenuButtonItem]s.   ¿ ¬∆Ä£¿ √:/// The line height at the start of the current selection.   ¿ √mÄù¿ √≥8/// The line height at the end of the current selection.   ¿ ƒÉ≠¿ ƒzL/// Returns the local coordinates of the endpoints of the current selection.   ¿ »åÄû¿ …   ¿ »å¿ »ç¿ »ó¿ »˝¿ »ù¿ »∆¿ …¿ …¿ ….Ä†¿ …∏   ¿ ….¿ …/¿ …9¿ …ü¿ …?¿ …h¿ …£¿ …§7πÑ«π,   ππΩÊÇÒΩ˜   ΩÊΩÁ¿ @€Åá¿ @Ï  ¿ @¸¿ A  ¿ @€¿ @‹¿ BfÄù¿ Bp ¿ BÅ¿ BÅ¿ Bì¿ Bû   ¿ CÅ'¿ C    ¿ D2Çç¿ D7    ¿ HvÖ¿ HÅ  ¿ H¢¿ Hß   ¿ MêÇæ¿ Mï    ¿ PRÇ¿ PW    ¿ RkÇ˛¿ Rp  ¿ Rè¿ R£   ¿ UmÄ¸¿ Ur  ¿ Uà¿ Uù   ¿ VmÅã¿ Vr  ¿ Vâ¿ Vü   ¿ W¸y¿ X  ¿ X¿ X(   ¿ XyÇm¿ X~  ¿ Xê¿ X¢   ¿ ZÍÅ	¿ ZÔ    ¿ [˜Ç*¿ [¸  ¿ \¿ \.   ¿ ^%ÄÕ¿ ^*  ¿ ^J"¿ ^f   ¿ ^ˆÄÎ¿ ^˚  ¿ _¿ _)   ¿ _ÂÅï¿ _Í  ¿ `¿ `   ¿ a~àt¿ aÉ  ¿ aô¿ a©   ¿ j∑Ö¿ k‹Å/// Sends end [SelectionEdgeUpdateEvent] to the selectable subtree.
///
/// If the selectable subtree returns a [SelectionResult.pending], this method
/// continues to send [SelectionEdgeUpdateEvent]s every frame until the result
/// is not pending or users end their gestures. ¿ k¸ ¿ l   ¿ oŒÇ!¿ o”  ¿ o·¿ oÒ   ¿ qÛx¿ q¯    ¿ sÖ)¿ t8Å/// Sends start [SelectionEdgeUpdateEvent] to the selectable subtree.
///
/// If the selectable subtree returns a [SelectionResult.pending], this method
/// continues to send [SelectionEdgeUpdateEvent]s every frame until the result
/// is not pending or users end their gestures. ¿ tZ ¿ tl   ¿ x>|¿ xC    ¿ yFÇT¿ yK  ¿ yp¿ yÇ   ¿ {ûÇ≠¿ {£  ¿ {…¿ {‹   ¿ ~OÇI¿ ~T  ¿ ~w¿ ~â   ¿ ÄúÇù¿ Ä°  ¿ Ä≈¿ Äÿ   ¿ É=É^¿ ÉK  ¿ Éb¿ Éj  ¿ ÉÄ¿ Éê   ¿ ÜüÖ_¿ Ü§    ¿ åÇÄ¿ å    ¿ éÜÅõ¿ èx/// Shows the selection handles.
///
/// Returns true if the handles are shown, false if the handles can't be
/// shown.   ¿ ê%Ö…¿ ë®Åm/// Shows the text selection toolbar.
///
/// If the parameter `location` is set, the toolbar will be shown at the
/// location. Otherwise, the toolbar location will be calculated based on the
/// handles' locations. The `location` is in the coordinates system of the
/// [Overlay].
///
/// Returns true if the toolbar is shown, false if the toolbar can't be shown. ¿ ë∂¿ ëø   ¿ ïÚár¿ õ±Ö/// Sets or updates selection end edge to the `offset` location.
///
/// A selection always contains a select start edge and selection end edge.
/// They can be created by calling both [_selectStartTo] and [_selectEndTo], or
/// use other selection APIs, such as [_selectWordAt] or [selectAll].
///
/// This method sets or updates the selection end edge by sending
/// [SelectionEdgeUpdateEvent]s to the child [Selectable]s.
///
/// If `continuous` is set to true and the update causes scrolling, the
/// method will continue sending the same [SelectionEdgeUpdateEvent]s to the
/// child [Selectable]s every frame until the scrolling finishes or a
/// [_finalizeSelection] is called.
///
/// The `continuous` argument defaults to false.
///
/// The `offset` is in global coordinates.
///
/// Provide the `textGranularity` if the selection should not move by the default
/// [TextGranularity.character]. Only [TextGranularity.character] and
/// [TextGranularity.word] are currently supported.
///
/// See also:
///  * [_selectStartTo], which sets or updates selection start edge.
///  * [_finalizeSelection], which stops the `continuous` updates.
///  * [_clearSelection], which clears the ongoing selection.
///  * [_selectWordAt], which selects a whole word at the location.
///  * [_collapseSelectionAt], which collapses the selection at the location.
///  * [selectAll], which selects the entire content. ¿ õø¿ õ–  ¿ õ◊¿ õ›  ¿ õ ¿ ú  ¿ õÈ¿ ùhá|¿ £'Ö/// Sets or updates selection start edge to the `offset` location.
///
/// A selection always contains a select start edge and selection end edge.
/// They can be created by calling both [_selectStartTo] and [_selectEndTo], or
/// use other selection APIs, such as [_selectWordAt] or [selectAll].
///
/// This method sets or updates the selection start edge by sending
/// [SelectionEdgeUpdateEvent]s to the child [Selectable]s.
///
/// If `continuous` is set to true and the update causes scrolling, the
/// method will continue sending the same [SelectionEdgeUpdateEvent]s to the
/// child [Selectable]s every frame until the scrolling finishes or a
/// [_finalizeSelection] is called.
///
/// The `continuous` argument defaults to false.
///
/// The `offset` is in global coordinates.
///
/// Provide the `textGranularity` if the selection should not move by the default
/// [TextGranularity.character]. Only [TextGranularity.character] and
/// [TextGranularity.word] are currently supported.
///
/// See also:
///  * [_selectEndTo], which sets or updates selection end edge.
///  * [_finalizeSelection], which stops the `continuous` updates.
///  * [_clearSelection], which clears the ongoing selection.
///  * [_selectWordAt], which selects a whole word at the location.
///  * [_collapseSelectionAt], which collapses the selection at the location.
///  * [selectAll], which selects the entire content. ¿ £7¿ £H  ¿ £O¿ £U  ¿ £h ¿ £z  ¿ £a¿ §ËÇ`¿ ¶ŒÅŒ/// Collapses the selection at the given `offset` location.
///
/// See also:
///  * [_selectStartTo], which sets or updates selection start edge.
///  * [_selectEndTo], which sets or updates selection end edge.
///  * [_finalizeSelection], which stops the `continuous` updates.
///  * [_clearSelection], which clears the ongoing selection.
///  * [_selectWordAt], which selects a whole word at the location.
///  * [selectAll], which selects the entire content. ¿ ¶‰¿ ¶ı   ¿ ßLÑ ¿ ™ùÉ+/// Selects a whole word at the `offset` location.
///
/// If the whole word is already in the current selection, selection won't
/// change. One call [_clearSelection] first if the selection needs to be
/// updated even if the word is already covered by the current selection.
///
/// One can also use [_selectEndTo] or [_selectStartTo] to adjust the selection
/// edges after calling this method.
///
/// See also:
///  * [_selectStartTo], which sets or updates selection start edge.
///  * [_selectEndTo], which sets or updates selection end edge.
///  * [_finalizeSelection], which stops the `continuous` updates.
///  * [_clearSelection], which clears the ongoing selection.
///  * [_collapseSelectionAt], which collapses the selection at the location.
///  * [selectAll], which selects the entire content. ¿ ™¨¿ ™Ω   ¿ ´pÇ'¿ ≠5Å≠/// Stops any ongoing selection updates.
///
/// This method is different from [_clearSelection] that it does not remove
/// the current selection. It only stops the continuous updates.
///
/// A continuous update can happen as result of calling [_selectStartTo] or
/// [_selectEndTo] with `continuous` sets to true which causes a [Selectable]
/// to scroll. Calling this method will stop the update as well as the
/// scrolling.   ¿ ≠õÅ¿ ≠≈"/// Removes the ongoing selection.   ¿ Æ¥Ä”¿ Æ¡    ¿ ≤xÇ÷¿ ≤}  ¿ ≤ü¿ ≤•   ¿ µRÅΩ¿ µW  ¿ µr¿ µÉ  ¿ µè¿ µï   ¿ ∑>É±¿ ∑C  ¿ ∑a¿ ∑g   ¿ …“Ä®¿ …„  ¿ …¿ …ˆ  ¿ …“¿ …”¿  ¿  ~Å+¿  è  ¿  ö¿  ≤  ¿  ~¿  ¿ À≠Ä⁄¿ Ã3  ¿ ÃA¿ ÃX  ¿ À≠¿ ÀÆ¿ À∏¿ Ã¿ Àæ¿ ÀÁ¿ Ã"¿ Ã#¿ ÕVÄ‚¿ Õ‹  ¿ ÕÍ¿ Õ¯  ¿ ÕV¿ ÕW¿ Õa¿ Õ«¿ Õg¿ Õê¿ ÕÀ¿ ÕÃ¿ Œ<Ä»¿ Œ¬  ¿ Œœ¿ ŒÊ  ¿ Œ<¿ Œ=¿ ŒG¿ Œ≠¿ ŒM¿ Œv¿ Œ±¿ Œ≤¿ œÅ¿ œé  ¿ œ©¿ œª  ¿ œ¡¿ œÿ  ¿ œ¿ œ	¿ œ¿ œy¿ œ¿ œB¿ œ}¿ œ~¿ –Ä”¿ –†  ¿ –™¿ –¡  ¿ –¿ –¿ –¿ –É¿ –#¿ –L¿ –á¿ –à¿ —Äı¿ —  ¿ —#¿ —/  ¿ —¿ —¿ “Ä€¿ “  ¿ “¿ “+  ¿ “¿ “¿ “ÊÅØ¿ “˜   ¿ “Ê¿ “Á¿ ‘ôÉ¿ ‘¨  ¿ ‘≤¿ ‘¿  ¿ ‘ô¿ ‘ö ¿ ◊´ÇT¿ ÿøÅ/// An action that does not override any [Action.overridable] in the subtree.
///
/// If this action is invoked by an [Action.overridable], it will immediately
/// invoke the [Action.overridable] and do nothing else. Otherwise, it will call
/// [invokeAction].¿ ÿ“¿ ÿ“   ¿ Ÿ8¿ Ÿ	  ¿ Ÿ¿ Ÿ  ¿ Ÿ!¿ Ÿ0   ¿ Ÿ=Ä¿¿ ŸQ  ¿ ŸX¿ Ÿ[  ¿ Ÿc¿ Ÿr  ¿ Ÿ=¿ Ÿ> ¿ ⁄Å!¿ ⁄  ¿ ⁄L ¿ ⁄L¿ ⁄\ ¿ ⁄]
¿ ⁄c   ¿ ⁄m!¿ ⁄â   ¿ ⁄ìÄç¿ ⁄§  ¿ ⁄±¿ ⁄∆  ¿ ⁄Œ¿ ⁄›  ¿ ⁄ì¿ ⁄î ¿ €$Å¿ €*  ¿ €w! ¿ €w¿ €ã ¿ €å
¿ €í   ¿ €ú!¿ €∏   ¿ €¬o¿ €”  ¿ €‡¿ €˘  ¿ ‹¿ ‹  ¿ €¬¿ €√ ¿ ‹5Åï¿ ‹; ¿ ‹\&¿ ‹\¿ ‹¶J ¿ ‹¶¿ ‹∆ ¿ ‹«
¿ ‹Õ  ¿ ‹‘¿ ‹„   ¿ ‹Ù!¿ ›  ¿ ›!¿ ›/   ¿ ›?Äâ¿ ›P  ¿ ›]¿ ›`  ¿ ›h¿ ›w  ¿ ›?¿ ›@ ¿ ›ÃÇ¿ ›“ ¿ ›¯(¿ ›¯¿ ﬁDO ¿ ﬁD¿ ﬁi ¿ ﬁj
¿ ﬁp  ¿ ﬁw¿ ﬁÜ   ¿ ﬁó!¿ ﬁ≥  ¿ ﬁº!¿ ﬁ“   ¿ ﬁ‚Ä˜¿ ﬁÛ  ¿ ﬂ ¿ ﬂ  ¿ ﬂ¿ ﬂ  ¿ ﬁ‚¿ ﬁ„ ¿ ﬂ›Å…¿ ﬂ„ ¿ ‡(¿ ‡¿ ‡X5 ¿ ‡X¿ ‡Ä ¿ ‡Å
¿ ‡á   ¿ ‡ë!¿ ‡≠   ¿ ‡∑ÄÌ¿ ‡»  ¿ ‡’¿ ‡ÿ  ¿ ‡‡¿ ‡Ô  ¿ ‡∑¿ ‡∏ ¿ ·®ó¿ ·Æ   ¿ ‚=¿ ‚ ¿ ‚B¿ ‚C¿ ‚6¿ ‚A¿ ‚7¿ ‚H;¿ ‚^ ¿ ‚Å¿ ‚Ç¿ ‚u¿ ‚Ä¿ ‚v¿ ‚à*¿ ‚ê  ¿ ‚∂(¿ ‚æ   
¿ ‚„ÄÆ¿ ‚Ù  ¿ ‚˚¿ „  ¿ ‚„¿ ‚‰¿ „ïÉß¿ „ö    ¿ Á@Å∞¿ Á\  ¿ Ál¿ ÁÖ  ¿ Á@¿ ÁA¿ ËÙÇ,¿ Èva/// Selects a word in a selectable at the location
/// [SelectWordSelectionEvent.globalPosition]. ¿ Èá¿ È°  ¿ ÈZ¿ È[¿ Î$ÅL¿ Î@  ¿ ÎU¿ Îj  ¿ Î$¿ Î%¿ ÏtÅ[¿ Ïê  ¿ Ï™¿ Ïƒ  ¿ Ït¿ Ïu¿ Ì”{¿ Ì‰   ¿ Ì”¿ Ì‘¿ ÓRÉø¿ Ón  ¿ Óå¿ Óò  ¿ Ó£¿ Ó≥  ¿ ÓR¿ ÓS¿ ÚÉí¿ Ú&  ¿ Ú9¿ ÚE  ¿ Ú¿ Ú¿ ı´É¿ ıº   ¿ ı´¿ ı¨ ¿ ¯ª¿ å*¿ ˙bÅó/// An abstract base class for updating multiple selectable children.
///
/// This class provide basic [SelectionEvent] handling and child [Selectable]
/// updating. The subclass needs to implement [ensureChildUpdated] to ensure
/// child [Selectable] is updated properly.
///
/// This class optimize the selection update by keeping track of the
/// [Selectable]s that currently contain the selection edges. ¿ ˙«ÄÂ ¿ ˚¿ ˚:G/// Creates an instance of [MultiSelectableSelectionContainerDelegate].  ¿ ˚∞k¿ ˚ˇ;/// Gets the list of selectables this delegate is managing.¿ ¸¿ ¸¿ ¸¿ ¸¿ ¸¿ ¸ Ç&¿ ˛Å—/// The number of additional pixels added to the selection handle drawable
/// area.
///
/// Selection handles that are outside of the drawable area will be hidden.
/// That logic prevents handles that get scrolled off the viewport from being
/// drawn on the screen.
///
/// The drawable area = current rectangle of [SelectionContainer] +
/// _kSelectionHandleDrawableAreaPadding on each side.
///
/// This was an eyeballed value to create smooth user experiences.¿ ˛C¿ ˛Kq¿ ˛ü@/// The current selectable that contains the selection end edge.¿ ˛é¿ ˛è¿ ˛∫¿ ˛ª¿ ˛¡u¿ ˇB/// The current selectable that contains the selection start edge.¿ ˇ¿ ˇ¿ ˇ4¿ ˇ5¿ ˇ;¿ ˇF  ¿ ˇ["¿ ˇg  ¿ ˇÅ¿ ˇå  ¿ ˇü ¿ ˇ´  ¿ ˇƒ&¿ ˇ… ¿ ˇÂ¿ ˇÓ'¿ ˇÛ ¿ ¿ !¿  ¿ 5¿ >+¿ N ¿ g¿ h¿ [¿ f¿ \¿ n'¿ s ¿ ê¿6|¿H ¿]¿c¿t¿±¿Ñ¿z¿Ü¿ó¿ë¿ô¿®¿©¿ı>¿   ¿ı¿ˆ¿˛Äﬁ¿∏Äâ/// The compare function this delegate used for determining the selection
/// order of the selectables.
///
/// Defaults to screen order.  ¿ê¿ë¿ öÄ°¿ ´  ¿ Ø¿ ª  ¿ ö¿ õ¿?Å¿P  ¿W¿c  ¿?¿@¿¬ÄÉ¿D/// Notifies this delegate that layout of the container has changed.   ¿IÉV¿N    ¿£Äü¿®    ¿Fâ(¿K    ¿rÅŸ¿w  ¿â¿ï   ¿OÄ¢¿µ@/// Called when this delegate finishes updating the selectables.  ¿í¿ì¿ü¿†¿∑ÅC¿	J/// Updates the [value] in this class and notifies listeners if necessary.   ¿‡ÅÒ¿‰  ¿¯¿  ¿¿   ¿’Ç·¿ŒÄ„/// Compares two rectangles in the screen order solely by their vertical
/// positions.
///
/// Returns positive if a is lower, negative if a is higher, 0 if their
/// order can't be determine solely by their vertical position. ¿·¿Á  ¿È¿Ô   ¿∫É¢¿¢Ä‘/// Compares two rectangles in the screen order by their horizontal positions
/// assuming one of the rectangles enclose the other rect vertically.
///
/// Returns positive if a is lower, negative if a is higher. ¿∑¿Ω  ¿ø¿≈   ¿`Ån¿e    ¿“ê¡¿ 3?/// Gets the combined selection geometry for child selectables.  ¿ ¿ ¿2ãÅT¿2è  ¿2Ω¿2¬  ¿2œ¿2‘   ¿3„Å¿3Ù  ¿4¿4  ¿4¿4)  ¿3„¿3‰¿5â™¿6_ÅG/// Pushes both handle layers to the selectables that contain selection edges.
///
/// This method needs to be called every time the selectables that contain the
/// selection edges change, i.e. [currentSelectionStartIndex] or
/// [currentSelectionEndIndex] changes. Otherwise, the handle may be painted
/// in the wrong place.   ¿>¥Çâ¿?4/// Copies the selected contents of all selectables.  ¿>Î¿>Ï¿BêÉ∫¿Bï    ¿FNÅq¿Fö,/// Selects all contents of all selectables. ¿F™¿F√  ¿F}¿F~¿G√á´¿HFa/// Selects a word in a selectable at the location
/// [SelectWordSelectionEvent.globalPosition]. ¿HW¿Hq  ¿H)¿H*¿OrÅv¿O’C/// Removes the selection of all selectables this delegate manages. ¿OÍ¿Oˇ  ¿O∏¿Oπ¿PÏÖª¿QG;/// Extend current selection in a certain text granularity. ¿Qg$¿Qá  ¿Q*¿Q+¿V´à±¿W;/// Extend current selection in a certain text granularity. ¿W)'¿WL  ¿VÈ¿VÍ¿_`Å≥¿_† /// Updates the selection edges. ¿_∫¿_‘  ¿_É¿_Ñ¿aÜ]¿a3  ¿aJ¿aZ  ¿a¿a¿gxÅ¿gâ   ¿gx¿gy¿hÄÅá¿i›Å</// Ensures the selectable child has received up to date selection event.
///
/// This method is called when a new [Selectable] is added to the delegate,
/// and its screen location falls into the previous selection.
///
/// Subclasses are responsible for updating the selection of this newly added
/// [Selectable]. ¿i¿i¸  ¿iÀ¿iÃ¿jÅl¿jÚÄ¡/// Dispatches a selection event to a specific selectable.
///
/// Override this method if subclasses need to generate additional events or
/// treatments prior to sending the selection events. ¿k¿k  ¿k'¿k7  ¿j’¿j÷¿k{â	¿mÒÇO/// Initializes the selection of the selectable children.
///
/// The goal is to find the selectable child that contains the selection edge.
/// Returns [SelectionResult.end] if the selection edge ends on any of the
/// children. Otherwise, it returns [SelectionResult.previous] if the selection
/// does not reach any of its children. Returns [SelectionResult.next]
/// if the selection reaches the end of its children.
///
/// Ideally, this method should only be called twice at the beginning of the
/// drag selection, once for start edge update event, once for end edge update
/// event. ¿n ¿n  ¿n!¿n0   ¿tàê[¿v
Åe/// Adjusts the selection based on the drag selection update event if there
/// is already a selectable child that contains the selection edge.
///
/// This method starts by sending the selection event to the current
/// selectable that contains the selection edge, and finds forward or backward
/// if that selectable no longer contains the selection edge. ¿v¿v5  ¿v<¿vK           ¿ÑÁÅg¿ÖœÄﬂ/// Signature for a widget builder that builds a context menu for the given
/// [SelectableRegionState].
///
/// See also:
///
///  * [EditableTextContextMenuBuilder], which performs the same role for
///    [EditableText].  ¿Ü¿Ü  ¿Ü+¿Ü6    ÑÄ¨Ñ2 ÑcÑ¿ÑPÑbÑQÑgÑxÑyÑÇÑìÑîÑûÑØÑ∞Ö°9ÖÆ Ö◊  âŒ <ÄÜÄ§Ä•Ä∫ÄŒÄœÄ˘Å!ÅJÅsÅõÅÕÅŒÅÂÅ˙Ç"Ç7ÇTÇoÇàÇ®Ç¡Ç‹ÇÛÉ*ÉMÉqÉèÉΩÉæÉ÷É˝ÑÑÑeÑÄÑúÑ¿Ñ√ÑƒÖÖ`Ö°Ö‹Ö›ÜÜÜhÜ∏ááTáõáÎàààdàéàíà⁄â&âsâ¡â≈âÒâıäFä|äÄä—ãã9ã=ã~ã»ååfå∑çç1ç5çÜç‘ééjéàéåé◊èèOè^èbèêèîè®è¨è∏è…èÁê!ê^êwêªê’ê˚ë;ë{ëäëóë¢ë´ë±ëπë…ëÕë—ëˆíí<í^íÅí•í íì ìLìwì£ì–îî;î?îCîeîiîπî˚ïïïaïÆïÂïÈñ8ñÉñŒñÌñÒóóQónóróÕó›ó·ó˜ó˚òJòóò’òŸòÌô9ôôÉô‚ôÚôˆöGöèö≤ö∂ö õõõÑõîõòõ‚ú5úÑú“ú÷ú„úÁù8ùâù∂ù∫ù∆û*û2û6ûDûÑû±üüüoüΩü÷†$†q†°†œ†’°#°E°`°o°å°©°Œ°Á¢.¢K¢Q¢R¢ú¢¢¢—¢◊£(£.£z£µ£∂£Â§§§:§@§q§á§à§«•••Q•`•f•∞•Ô¶ ¶!¶Q¶ç¶é¶⁄ßß	ßYßuß{ßãßëßŸ®®l®¶®˜©,©`©≥©¸™<™t™ú™…™–´"´^´_´∞´ˆ¨	¨-¨@¨_¨|¨®¨≥¨À¨Í≠≠=≠H≠O≠S≠T≠`≠¢≠§≠•≠…Æ@ÆäÆÕØØÈ∞†±E±Ù≤¨≥V≥˙¥∂¥ª¥ºµ"µIµÄµµµË∂N∂û∂π∂∫∑∑y∑z∑õ∑ƒ∑≈∏∏:∏;∏Å∏á∏ƒ∏Ÿπππ%π:πQπàπ´πŒπÏ∫X∫ê∫º∫ªuª≈ººdºàº™ºøº˝ΩΩΩ9Ω{ΩáΩíΩœΩÿΩﬂΩ„Ω‰Ωææ4æYæ|æõæ™æÕæÓøø2øBøHøIøîø€øˇ¿ @%¿ @3¿ @9¿ @d¿ @ä¿ @Œ¿ @‘¿ @ÿ¿ @Ÿ¿ @Â¿ A¿ A@¿ As¿ A≤¿ AÎ¿ B2¿ BQ¿ BY¿ B_¿ Bc¿ Bd¿ BÆ¿ C ¿ C¿ C¿ C$¿ CJ¿ C^¿ C¶¿ CÆ¿ C«¿ CÕ¿ Cﬂ¿ D%¿ D+¿ D/¿ D0¿ DR¿ Du¿ D∂¿ D’¿ D˝¿ E#¿ El¿ Eç¿ EÀ¿ E—¿ F¿ FD¿ Fe¿ Fr¿ Fñ¿ F∂¿ Fº¿ F¿¿ F¡¿ F–¿ F—¿ G!¿ Gt¿ Gƒ¿ H	¿ H¿ H`¿ Ht¿ H≤¿ H◊¿ H¸¿ I¿ IB¿ Ic¿ I∞¿ J¿ JV¿ J°¿ JÛ¿ K<¿ KŒ¿ KÌ¿ L¿ L1¿ LÖ¿ L⁄¿ M-¿ MR¿ MÉ¿ Mâ¿ Mç¿ Mé¿ Mµ¿ N-¿ N¨¿ Nﬁ¿ NÔ¿ O&¿ ON¿ O~¿ O∞¿ O‹¿ P¿ P;¿ PD¿ PK¿ PO¿ PP¿ Pw¿ PÔ¿ Q\¿ Qé¿ Qü¿ QŸ¿ R¿ RT¿ R]¿ Rd¿ Rh¿ Ri¿ R≠¿ R˙¿ S¿ S1¿ SH¿ Sq¿ Sò¿ Sø¿ S‚¿ T%¿ T8¿ T]¿ TÇ¿ T©¿ TÎ¿ Tı¿ U¿ U:¿ U@¿ Uf¿ Uj¿ Uk¿ Uß¿ UÙ¿ V¿ V:¿ V@¿ Vf¿ Vj¿ Vk¿ V©¿ Vˆ¿ W¿ WL¿ WZ¿ W…¿ Wœ¿ Wı¿ W˘¿ W˙¿ X2¿ XL¿ Xr¿ Xv¿ Xw¿ X¨¿ X˘¿ Y¿ Y0¿ YW¿ Y~¿ Y°¿ Y„¿ Z¿ Z-¿ ZT¿ Zö¿ Z≠¿ Z∑¿ ZΩ¿ Z„¿ ZÁ¿ ZË¿ [¿ [m¿ [≠¿ [Í¿ [¿ [Ù¿ [ı¿ \8¿ \]¿ \Ç¿ \µ¿ ] ¿ ]R¿ ]°¿ ]‹¿ ]Ú¿ ]¯¿ ^¿ ^"¿ ^#¿ ^p¿ ^…¿ ^Ô¿ ^Û¿ ^Ù¿ _3¿ _M¿ _s¿ _á¿ _¬¿ _ÿ¿ _ﬁ¿ _‚¿ _„¿ `+¿ `{¿ `æ¿ a¿ aB¿ aW¿ a_¿ ae¿ aw¿ a{¿ a|¿ a≥¿ b¿ bV¿ bë¿ b∂¿ b€¿ b˛¿ c!¿ cD¿ cî¿ c‘¿ d`¿ d°¿ dË¿ dÚ¿ e
¿ eH¿ eg¿ e•¿ eΩ¿ e˚¿ f¿ fÄ¿ fô¿ f´¿ fµ¿ fÛ¿ g¿ gI¿ gj¿ gä¿ g£¿ gµ¿ gø¿ h¿ hO¿ h€¿ i¿ ic¿ im¿ iÖ¿ i√¿ i…¿ iÔ¿ iÛ¿ iÙ¿ j¿ j¿ j<¿ jÉ¿ j¥¿ jµ¿ j˚¿ k¿ kR¿ k£¿ k’¿ l!¿ lm¿ l∏¿ m¿ mO¿ mô¿ mß¿ m≠¿ m⁄¿ ng¿ nñ¿ n‚¿ o¿ o%¿ o/¿ oa¿ o´¿ oµ¿ o√¿ o…¿ oÃ¿ oÕ¿ o˚¿ p>¿ pf¿ på¿ pò¿ p¡¿ pÊ¿ pˇ¿ q3¿ qn¿ qx¿ qÄ¿ qÖ¿ q®¿ q…¿ qÌ¿ q¿ qÒ¿ r¿ rF¿ rh¿ rl¿ rm¿ rê¿ r€¿ s¿ s¿ sW¿ s]¿ sÆ¿ sˇ¿ t1¿ t¿ tÀ¿ u¿ ue¿ u≠¿ u˚¿ v	¿ v¿ v<¿ vÕ¿ v˛¿ wJ¿ w}¿ wè¿ wô¿ wÕ¿ x¿ x#¿ x1¿ x7¿ x;¿ x<¿ xe¿ xï¿ x∑¿ xª¿ xº¿ x‚¿ x„¿ y¿ yC¿ yD¿ yå¿ yŒ¿ yœ¿ z-¿ zt¿ zÿ¿ zŸ¿ {¿ {4¿ {i¿ {q¿ {ó¿ {õ¿ {ú¿ {Ê¿ |A¿ |ã¿ |‘¿ }_¿ }á¿ }à¿ }«¿ }Â¿ ~¿ ~"¿ ~H¿ ~L¿ ~M¿ ~ì¿ ~”¿ /¿ v¿ ÿ¿ Ÿ¿ Ä¿ Ä4¿ Äg¿ Äo¿ Äï¿ Äô¿ Äö¿ Ä‚¿ Å9¿ ÅÉ¿ ÅÃ¿ ÇQ¿ Çw¿ Çx¿ Ç∑¿ Ç’¿ É¿ É¿ É6¿ É:¿ É;¿ É°¿ É˚¿ ÑV¿ Ñ¿¿ ÑÏ¿ Ö¿ ÖZ¿ Öe¿ Öá¿ Öê¿ Öë¿ Ö≠¿ Ö„¿ Ü¿ ÜC¿ Üè¿ Üò¿ Üú¿ Üù¿ Ü¿¿ ÜÍ¿ á¿ á¿ á#¿ ás¿ áø¿ áÈ¿ à¿ à!¿ àk¿ à™¿ àÓ¿ â4¿ â_¿ â¶¿ â„¿ ä#¿ äe¿ äé¿ äº¿ äÔ¿ ã¿ ã+¿ ã^¿ ãç¿ ã∏¿ ãÙ¿ ã˚¿ ãˇ¿ å ¿ å#¿ åH¿ åV¿ å\¿ åÜ¿ å÷¿ ç"¿ ç9¿ çÖ¿ ç∆¿ é¿ éN¿ é¿ éÉ¿ éÑ¿ éß¿ é≠¿ é¯¿ è¿ è¿ èB¿ èj¿ è}¿ èÉ¿ èÑ¿ è≠¿ è¡¿ è«¿ è»¿ èÁ¿ ê¿ ê¿ ê"¿ ê#¿ êK¿ êQ¿ êú¿ êÏ¿ ë9¿ ëJ¿ ëP¿ ë°¿ ëÀ¿ í¿ í%¿ í+¿ í,¿ í}¿ íÕ¿ ì¿ ìh¿ ì©¿ ìŸ¿ ìÌ¿ ìÛ¿ ìÙ¿ î¿ î:¿ î@¿ îA¿ ît¿ î∏¿ î‡¿ îÛ¿ î˘¿ î˙¿ ï ¿ ï!¿ ïE¿ ï]¿ ïê¿ ï ¿ ï”¿ ï⁄¿ ïÎ¿ ïÔ¿ ï¿ ñ3¿ ñ9¿ ñá¿ ñŸ¿ ó!¿ ó'¿ ók¿ ó©¿ óØ¿ ó˘¿ òH¿ òê¿ ò∂¿ òº¿ òÔ¿ òı¿ ô"¿ ô(¿ ô|¿ ôƒ¿ ô˙¿ ö ¿ ö¿ öW¿ öú¿ ö‹¿ õ"¿ õr¿ õ™¿ ú¿ ú,¿ úÆ¿ úº¿ ú¬¿ úÌ¿ ù¿ ù[¿ ùa¿ ùe¿ ùf¿ ù´¿ ù±¿ ùˇ¿ ûQ¿ ûô¿ ûü¿ ûÂ¿ ü#¿ ü)¿ üs¿ ü¬¿ †
¿ †0¿ †6¿ †i¿ †o¿ †ú¿ †¢¿ †ˆ¿ °>¿ °t¿ °z¿ °ä¿ °Õ¿ ¢¿ ¢R¿ ¢ò¿ ¢Ë¿ £ ¿ £ç¿ £§¿ §(¿ §6¿ §<¿ §i¿ §ë¿ §€¿ §·¿ §Â¿ §Ê¿ •$¿ •*¿ •:¿ •Å¿ •ƒ¿ ¶	¿ ¶I¿ ¶è¿ ¶«¿ ¶ˇ¿ ß#¿ ßE¿ ßI¿ ßJ¿ ß¿ ßÖ¿ ß“¿ ®¿ ®j¿ ®p¿ ®¬¿ ®È¿ ®Ô¿ ®ˇ¿ ©F¿ ©â¿ ©Œ¿ ™¿ ™^¿ ™ñ¿ ™«¿ ™Ù¿ ´¿ ´i¿ ´m¿ ´n¿ ´ô¿ ´ü¿ ´Ì¿ ¨0¿ ¨6¿ ¨Ñ¿ ¨‘¿ ≠¿ ≠.¿ ≠L¿ ≠o¿ ≠î¿ ≠ò¿ ≠ô¿ ≠æ¿ ≠Ÿ¿ ≠Û¿ Æ¿ ÆA¿ Æá¿ Æ≠¿ Æ±¿ Æ≤¿ Æ—¿ Ø¿ Ø.¿ Ø<¿ ØB¿ ØÑ¿ Øà¿ Øâ¿ Ø¿¿ Ø∆¿ Ø÷¿ Ø‹¿ ∞+¿ ∞Z¿ ∞ë¿ ∞¡¿ ∞Î¿ ±!¿ ±*¿ ±0¿ ±z¿ ±∞¿ ±Ã¿ ±ˆ¿ ≤¿ ≤J¿ ≤Q¿ ≤U¿ ≤V¿ ≤v¿ ≤Ø¿ ≤Ÿ¿ ≤ˇ¿ ≥¿ ≥ ¿ ≥Z¿ ≥y¿ ≥≈¿ ≥˛¿ ¥¿ ¥W¿ ¥q¿ ¥~¿ ¥¿¿ ¥∆¿ µ¿ µK¿ µO¿ µP¿ µü¿ µ ¿ µ¸¿ ∂
¿ ∂¿ ∂9¿ ∂_¿ ∂y¿ ∂¥¿ ∂÷¿ ∂ﬂ¿ ∂Ê¿ ∑¿ ∑¿ ∑¿ ∑;¿ ∑<¿ ∑q¿ ∑£¿ ∑±¿ ∑∑¿ ∏¿ ∏O¿ ∏É¿ ∏∫¿ π¿ π©¿ π“¿ π˚¿ ∫#¿ ∫ã¿ ∫∂¿ ∫ø¿ ∫∆¿ ∫Ï¿ ∫¿ ∫Ò¿ ª¿ ª¿ ªf¿ ªè¿ ªï¿ ª•¿ ª´¿ ªˇ¿ ºL¿ ºû¿ ºÂ¿ Ω4¿ ΩJ¿ Ωõ¿ Ω–¿ æ¿ æP¿ æ†¿ æ€¿ ø¿ øD¿ øW¿ øh¿ øi¿ ø†¿ ø…¿ ø¿ ¿¿ ¿6¿ ¿Y¿ ¿y¿ ¿û¿ ¿√¿ ¿Í¿ ¡¿ ¡¿ ¡¿ ¡0¿ ¡Y¿ ¡Ä¿ ¡£¿ ¡ ¿ ¬ ¿ ¬%¿ ¬J¿ ¬q¿ ¬ä¿ ¬•¿ ¬Ø¿ ¬∏¿ ¬ø¿ ¬√¿ ¬ƒ¿ √¿ √!¿ √f¿ √j¿ √k¿ √¶¿ √ƒ¿ ƒ¿ ƒ¿ ƒ¿ ƒ[¿ ƒè¿ ƒﬂ¿ ≈+¿ ≈U¿ ≈ß¿ ≈˜¿ ∆.¿ ∆S¿ ∆î¿ ∆◊¿ ∆‡¿ ∆Ì¿ «¿ «U¿ «ñ¿ «ü¿ «•¿ «∏¿ «º¿ «Ω¿ «Â¿ »'¿ »S¿ »â¿ »ä¿ »ô¿ »¬¿ »˚¿ »ˇ¿ …¿ …+¿ …,¿ …;¿ …d¿ …ù¿ …°¿ …≠¿ …œ¿ …–¿ …‹¿  ¿  2¿  I¿  q¿  w¿  {¿  |¿  à¿  ª¿  “¿ À¿ ÀN¿ Àd¿ Àz¿ ÀÄ¿ À¶¿ À™¿ À´¿ À∫¿ À„¿ Ã¿ Ã ¿ Ã,¿ Ã`¿ Ãm¿ ÃÑ¿ Ãà¿ Ãâ¿ Ãò¿ Ã¡¿ Ã˙¿ Ã˛¿ Õ
¿ ÕS¿ ÕT¿ Õc¿ Õå¿ Õ≈¿ Õ…¿ Õ’¿ Œ9¿ Œ:¿ ŒI¿ Œr¿ Œ´¿ ŒØ¿ Œª¿ ŒÓ¿ œ¿ œ¿ œ¿ œ¿ œ>¿ œw¿ œ{¿ œá¿ –¿ –¿ –¿ –H¿ –Å¿ –Ö¿ –ë¿ –œ¿ –‚¿ –Ê¿ –Á¿ —¿ —¿ —¿ —<¿ —]¿ —{¿ —±¿ “ ¿ “¿ “¿ “¿ “8¿ “_¿ “ò¿ “«¿ “ﬂ¿ “„¿ “‰¿ “¿ ”¿ ”<¿ ”k¿ ”ç¿ ”€¿ ‘¿ ‘=¿ ‘_¿ ‘}¿ ‘í¿ ‘ñ¿ ‘ó¿ ‘£¿ ‘ ¿ ‘ı¿ ’¿ ’4¿ ’X¿ ’s¿ ’z¿ ’å¿ ’¿¿ ’◊¿ ’‡¿ ’Ê¿ ÷¿ ÷+¿ ÷L¿ ÷s¿ ÷¢¿ ÷∆¿ ÷ﬁ¿ ÷˚¿ ◊¿ ◊8¿ ◊a¿ ◊|¿ ◊â¿ ◊î¿ ◊ù¿ ◊§¿ ◊®¿ ◊™¿ ◊´¿ ◊˘¿ ◊˝¿ ÿK¿ ÿú¿ ÿ∞¿ ÿˇ¿ Ÿ:¿ Ÿ;¿ ŸG¿ Ÿ}¿ Ÿû¿ Ÿ ¿ Ÿ–¿ Ÿ˙¿ Ÿ˛¿ ⁄ ¿ ⁄¿ ⁄J¿ ⁄j¿ ⁄k¿ ⁄ê¿ ⁄ë¿ ⁄ù¿ ⁄Ë¿ €¿ €!¿ €#¿ €$¿ €u¿ €ô¿ €ö¿ €ø¿ €¿¿ €Ã¿ ‹¿ ‹.¿ ‹2¿ ‹4¿ ‹5¿ ‹§¿ ‹Ò¿ ‹Ú¿ ›¿ ›<¿ ›=¿ ›I¿ ›Ç¿ ›≈¿ ›…¿ ›À¿ ›Ã¿ ﬁB¿ ﬁî¿ ﬁï¿ ﬁ∫¿ ﬁﬂ¿ ﬁ‡¿ ﬁÏ¿ ﬂ%¿ ﬂI¿ ﬂ¿ ﬂç¿ ﬂì¿ ﬂ÷¿ ﬂ⁄¿ ﬂ‹¿ ﬂ›¿ ‡V¿ ‡é¿ ‡è¿ ‡¥¿ ‡µ¿ ‡¡¿ ‡˙¿ ·¿ ·T¿ ·b¿ ·h¿ ·°¿ ·•¿ ·ß¿ ·®¿ ‚¿ ‚F¿ ‚Ö¿ ‚Ü¿ ‚¥¿ ‚‡¿ ‚·¿ ‚Ì¿ „¿ „C¿ „p¿ „é¿ „í¿ „ì¿ „¬¿ ‰,¿ ‰t¿ ‰…¿ Â¿ ÂÑ¿ Âä¿ Â¿ Ê4¿ ÊÉ¿ Ê∆¿ Á3¿ Á9¿ Á=¿ Á>¿ ÁJ¿ Áç¿ ÁŒ¿ Ë¿ Ë3¿ Ë_¿ Ëe¿ ËØ¿ Ë⁄¿ ËÌ¿ ËÒ¿ ËÚ¿ È'¿ ÈX¿ Èd¿ È©¿ ÈÎ¿ Í¿ Íb¿ Íh¿ Íí¿ ÍŸ¿ Íﬂ¿ Î
¿ Î¿ Î!¿ Î"¿ Î.¿ Îr¿ Î∏¿ Î‹¿ Î˛¿ Ï-¿ ÏZ¿ Ïm¿ Ïq¿ Ïr¿ Ï~¿ ÏÃ¿ Ì¿ ÌE¿ ÌR¿ Ìì¿ Ìô¿ ÌÃ¿ Ì–¿ Ì—¿ Ì›¿ Ì¿ Ó¿ Ó6¿ ÓK¿ ÓO¿ ÓP¿ Ó\¿ Óª¿ Ó’¿ Ô¿ Ô4¿ Ô\¿ Ôâ¿ Ô∑¿ Ôﬂ¿ ¿ 7¿ h¿ ë¿ ª¿  ¿ Ò¿ Ò?¿ Òo¿ Òù¿ Ò≈¿ ÒÀ¿ Ú¿ Ú¿ Ú¿ Ú¿ ÚR¿ ÚÆ¿ Û¿ ÛB¿ ÛK¿ Ûw¿ Û¨¿ Û¥¿ ÛÔ¿ Ûı¿ ÙU¿ Ù∞¿ ÙÔ¿ Ù¯¿ ı&¿ ı[¿ ıc¿ ıû¿ ı§¿ ı®¿ ı©¿ ıµ¿ ı’¿ ˆ	¿ ˆ*¿ ˆS¿ ˆê¿ ˆõ¿ ˆ§¿ ˆ™¿ ˆ‡¿ ˜¿ ˜,¿ ˜k¿ ˜v¿ ˜¿ ˜Ö¿ ˜ƒ¿ ¯*¿ ¯í¿ ¯¥¿ ¯∏¿ ¯∫¿ ¯ª¿ ˘¿ ˘¿ ˘S¿ ˘†¿ ˘Ã¿ ˘–¿ ˙¿ ˙S¿ ˙≈¿ ˚¿ ˚?¿ ˚k¿ ˚£¿ ˚©¿ ˚≠¿ ˚Æ¿ ˚Ï¿ ¸¿ ¸¿ ¸k¿ ¸w¿ ¸}¿ ¸À¿ ˝¿ ˝6¿ ˝<¿ ˝Ç¿ ˝ª¿ ˝¡¿ ˛¿ ˛H¿ ˛I¿ ˛å¿ ˛ô¿ ˛æ¿ ˛ø¿ ˇ¿ ˇ¿ ˇ8¿ ˇ9¿ ˇY¿ ˇ¿ ˇù¿ ˇ¡¿ ˇ¬¿ ˇÏ¿ ¿ <¿ k¿ l¿ ó¿ ò¿ §¿ »¿ ˜¿¿8¿<¿=¿I¿p¿ô¿·¿¿¿c¿q¿w¿ö¿ª¿ø¿¿¿¿"¿B¿F¿G¿l¿ì¿º¿¿¿-¿7¿c¿Å¿â¿ä¿Â¿6¿Ç¿Œ¿¿5¿D¿é¿ñ¿ú¿†¿°¿ø¿„¿¿¿#¿?¿C¿D¿_¿∏¿ˆ¿¿2¿M¿á¿Ω¿‹¿	A¿	x¿	±¿
¿
U¿
â¿
ì¿
Ã¿
˛¿¿E¿a¿s¿{¿|¿Õ¿Î¿8¿è¿Ê¿¿¿c¿ç¿¶¿¨¿‰¿¿X¿´¿˙¿H¿ó¿‚¿¿J¿k¿o¿p¿¢¿¸¿3¿T¿Å¿¶¿¨¿€¿¿¿H¿L¿M¿ê¿ù¿Æ¿Œ¿Ó¿Ú¿Û¿ˇ¿4¿v¿ç¿Ø¿¥¿µ¿¿&¿e¿è¿¥¿Õ¿”¿˜¿˚¿¸¿H¿h¿n¿é¿õ¿›¿ﬁ¿¿H¿f¿û¿•¿◊¿ı¿-¿4¿m¿Ñ¿ô¿ü¿Œ¿“¿”¿¿/¿5¿¿¡¿Û¿y¿ˇ¿¿¿_¿Ñ¿ä¿≥¿∑¿∏¿¿P¿V¿ï¿…¿ﬁ¿D¿^¿ó¿©¿±¿¬¿»¿…¿ﬁ¿D¿^¿ó¿™¿≤¿¬¿»¿¿,¿2¿Y¿]¿^¿â¿⁄¿(¿r¿ó¿•¿´¿À¿œ¿–¿ ¿ ¿ L¿ v¿ ¢¿ ¡¿ Á¿!¿!-¿!Y¿!b¿!h¿!i¿!ê¿!‚¿"¿"(¿"1¿"Å¿"£¿"«¿"–¿"÷¿"◊¿#¿#d¿#æ¿#ı¿$]¿$í¿$Õ¿$”¿$‘¿$Ù¿%)¿%¿%¯¿&0¿&L¿&q¿&ë¿&÷¿'¿'&¿'.¿'4¿'5¿'k¿'º¿'Ô¿(S¿(Ü¿(Ω¿(√¿(·¿)¿)d¿)’¿*¿*'¿*J¿*h¿*©¿*Í¿*ı¿*˝¿+¿+¿+M¿+ê¿+¿¿+Ó¿,7¿,ñ¿,ı¿-g¿-Ø¿.¿.'¿.[¿.e¿.¿.•¿.Ê¿.˘¿/8¿/>¿/?¿/]¿/Ñ¿/ß¿/Õ¿/¯¿0¿0>¿0q¿0â¿0ê¿0î¿0ï¿0‡¿1-¿1{¿1»¿2¿24¿29¿2â¿2‚¿3¿3A¿3ï¿3Ω¿3√¿3‹¿3‡¿3·¿3Ì¿45¿4Å¿4è¿4ï¿4∫¿4€¿4ˇ¿5¿5¿5U¿5[¿5¨¿5Ô¿6>¿6X¿6Ä¿6π¿6Ó¿74¿7d¿7ß¿7Ê¿8à¿9#¿9l¿9Ø¿9µ¿:¿: ¿:L¿:ä¿:±¿:π¿:„¿;¿;D¿;L¿;Z¿;`¿;a¿;Æ¿;Í¿;¿<9¿<s¿<y¿<z¿<¿¿<¡¿=¿=7¿=l¿=∆¿=‘¿=⁄¿=€¿>%¿>g¿>≠¿>±¿>≤¿>È¿>ı¿?¿?a¿?ò¿?›¿?˜¿@¿@¿@#¿@A¿@T¿@Z¿@ä¿@ƒ¿@Ì¿@Û¿A¿A3¿A:¿A>¿A?¿AÄ¿Aª¿A¿¿B¿BE¿BJ¿Bé¿B≤¿C ¿C¿C¿Cb¿Cÿ¿CÍ¿D2¿Dü¿D≠¿D≥¿E¿E[¿Eù¿E—¿E„¿EÎ¿FA¿FG¿FK¿FL¿F{¿Fà¿FÀ¿G¿G:¿G@¿Gd¿Gõ¿Gº¿G¿¿G¡¿Gˆ¿H'¿H4¿Hy¿H£¿HÂ¿IV¿Iü¿IÓ¿J%¿Jr¿J ¿K(¿KO¿KY¿Kî¿K®¿K≤¿Kˇ¿L*¿L4¿Lp¿L¿¿M¿M¿Me¿M÷¿N¿N)¿NM¿N\¿Nó¿N‰¿O
¿O¿O¿O"¿OK¿Ok¿Oo¿Op¿O∂¿O√¿P¿P>¿Pv¿P|¿Pü¿Pƒ¿PÂ¿PÈ¿PÍ¿Q(¿Q5¿Qè¿Q„¿R¿R*¿Rm¿R|¿R–¿Rÿ¿Rﬁ¿S9¿Sñ¿SØ¿S·¿T8¿TR¿T£¿T◊¿Tﬂ¿TÏ¿U¿U`¿Uz¿UÀ¿U˚¿V¿V	¿V ¿VN¿V[¿Vã¿Vë¿V§¿V®¿V©¿VÁ¿VÙ¿WT¿W®¿W‘¿Wı¿X)¿XY¿XØ¿Xﬂ¿Y¿YQ¿YY¿Y_¿Y∫¿Z¿Z6¿Zh¿ZΩ¿ZÔ¿[¿[.¿[b¿[ä¿[÷¿[Â¿\¿\$¿\.¿\\¿\≠¿\€¿]¿]/¿]c¿]ã¿]÷¿]Â¿^¿^$¿^.¿^[¿^â¿^∏¿^æ¿^’¿_¿_¿_@¿_F¿_Y¿_]¿_^¿_Å¿_é¿_‹¿`¿`è¿`ï¿a¿a¿a¿a!¿ab¿a¨¿aÍ¿b%¿bK¿bQ¿bá¿b≠¿bŒ¿bË¿c¿cD¿cp¿cø¿c‰¿d¿dU¿d~¿d™¿dÓ¿e¿eD¿eä¿e√¿eÓ¿fI¿fÖ¿f∞¿g¿g¿g>¿g^¿gq¿gu¿gv¿gÇ¿gï¿gÃ¿h¿h¿h<¿hd¿hy¿h}¿h~¿h ¿h–¿i¿i_¿ie¿iµ¿i…¿i÷¿j¿j	¿jF¿jL¿jõ¿j”¿j‡¿k?¿kt¿kx¿ky¿kµ¿kª¿l¿lY¿l´¿lÙ¿m,¿m2¿mÅ¿m“¿mﬂ¿n9¿n†¿n∑¿n€¿n¯¿oP¿oÉ¿o⁄¿o˜¿p¿p=¿pY¿p{¿pó¿pø¿p„¿q
¿q.¿qJ¿qd¿qì¿qü¿q…¿qÔ¿r¿r7¿r[¿rc¿ri¿rj¿rÑ¿rß¿r ¿r–¿r·¿s¿s¿sF¿sL¿sl¿s∏¿t¿tV¿tÅ¿tÖ¿tÜ¿t‘¿u¿u ¿ug¿u∏¿u¯¿vT¿vd¿vw¿v◊¿vÏ¿vÙ¿wV¿wi¿ws¿wï¿w‚¿x2¿xq¿xΩ¿xŸ¿y&¿yU¿y\¿y∞¿y÷¿zj¿zˇ¿{`¿{ñ¿{Õ¿|¿|'¿|`¿|ö¿|“¿|Ù¿|˚¿}¿}@¿}ê¿}¥¿~¿~,¿~Ç¿~¿¿~«¿¿4¿;¿_¿î¿‘¿Ä¿Äe¿Ä¬¿ÄÎ¿Å¿Å3¿ÅV¿Åá¿Å™¿ÅÃ¿ÅÁ¿Ç¿ÇQ¿ÇÑ¿Çó¿Ç≥¿ÇŒ¿Ç⁄¿É¿É#¿É>¿Ém¿Éì¿É∆¿ÉŸ¿Éˆ¿Ñ¿Ñ¿Ñ%¿Ñ+¿Ñ<¿Ñg¿Ñt¿Ñ°¿Ñß¿Ñ«¿Ñ‡¿Ñ‰¿ÑÊ¿ÑÁ¿Ö3¿ÖP¿ÖT¿Öb¿Öf¿Ö∞¿Ö«¿Ü¿Ü¿ÜL¿ÜO    _kLongPressSelectionDevices&_kSelectableVerticalComparingThresholdSelectableRegionSelectableRegionState_NonOverrideAction_SelectAllAction_CopySelectionAction _GranularlyExtendSelectionAction%_GranularlyExtendCaretSelectionAction(_DirectionallyExtendCaretSelectionAction"_SelectableRegionContainerDelegate)MultiSelectableSelectionContainerDelegate ¬å